%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set of people practicing yoga.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/2/2019
%%BoundingBox: 0 0 1600 800
%%HiResBoundingBox: 0 0 1600 800
%%CropBox: 0 0 1600 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of people practicing yoga</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>nefelomant</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of people practicing yoga. Calm young people meditating and doing balance exercises. Vector illustration can be used for tranquility, brochure, spirituality</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>presentation</rdf:li>
               <rdf:li>promo</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>athletic</rdf:li>
               <rdf:li>exercise</rdf:li>
               <rdf:li>slim</rdf:li>
               <rdf:li>pilates</rdf:li>
               <rdf:li>pose</rdf:li>
               <rdf:li>leisure</rdf:li>
               <rdf:li>instructor</rdf:li>
               <rdf:li>class</rdf:li>
               <rdf:li>training</rdf:li>
               <rdf:li>position</rdf:li>
               <rdf:li>flexible</rdf:li>
               <rdf:li>lifestyle</rdf:li>
               <rdf:li>yoga</rdf:li>
               <rdf:li>fit</rdf:li>
               <rdf:li>practicing</rdf:li>
               <rdf:li>health</rdf:li>
               <rdf:li>gym</rdf:li>
               <rdf:li>fitness</rdf:li>
               <rdf:li>active</rdf:li>
               <rdf:li>stretching</rdf:li>
               <rdf:li>balance</rdf:li>
               <rdf:li>meditating</rdf:li>
               <rdf:li>spirituality</rdf:li>
               <rdf:li>tranquility</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-02T13:41:51+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-05-02T13:41:51+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-05-02T13:41:51+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVk00MELzTOsUMSl5ZXIVVVRVmZjsAB1OKvN0/5yM/KR9Z&#xA;TS01glpHEQvPRlW2Dk0FZGUbV/apx71pkuAseIPS8iydirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdiqV+atRu9M8r6xqVkEa8srG5ubZZAShlihZ0DAb05LvTEK+XYvzA/wCcl7Cz/Tc936tk&#xA;/GR45o7FhxcjifTUB1B5dFocAz4jLhB3bTpcojxEbfB9bYWp2KuxV2KuxV2KuxV2KuxV2KsE/PU3&#xA;A/KXzL6BYP8AVlDFTQ+mZUEg+XCtfbJR5oPJ8d3PlKGPReYr9ejQyu3UMaVKU/VmLHWE5P6LsZ6A&#xA;DFf8Y3/Y+vvyG823Pmf8stKvLs8r20DWNy9almtzxVj/AJTR8SffMqYoutidnoORZOxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KqV3awXdrNa3C84LiNopUPdHBVh9IOAi0g0beX6bp9pda7Ho&#xA;kqepGsrRyqyH0ykNSdyKUYLtmnx4ycleb0GbMBiJro9VzcvPOxV2KuxV2KuxV2KuxV2KuxVjH5jX&#xA;/l2HybrVtrd2lvaXVjcRS8qswWSNk5BVq3U7GnXK5Z4QkATueQ6tkcMpAkDYdXxvpi6hqnl6OOOY&#xA;fWZkaFWIpvyKCpFf2fbMXKY48tkbDd2mHiy4KB9RFPZv+ca9N86+VfMWp+XNWSNdCu4Td28wdWQ3&#xA;aNGlIjs1XjY8lZa/BXtvdi7Qw5/pPq7jz/Hudfl0OXF9Q27+j6JzIcd2KuxV2KuxV2KuxV2KuxV2&#xA;KuJAFSaDxOKuxV2KuxV2KuxVTuJ0ghaV+ijp4nsMBNJAsscuL66uCfUc8T+wNlp1pQdfpygklyRE&#xA;DklkWmQx3b3HWu6J2BPU5RHCBK3JlqZGAim9nqVxbuKsXi2DITXb2r0zIEqcWUAWRKysoZTVSKgj&#xA;wOXuM3irsVdiqT3uuPba9badxUxToCz78gzFgOnyGY88/DkEe9y8em4sRn1CcZkOI7FXYqtlkSKJ&#xA;5XNEjUsx9gKnATQSBZp87fmFZXPnXy/fWun30L3lxIkrNzrG3F+XBinKg2227ZyGl1ZxajxcoO9v&#xA;VanS8eDw8ZHRj3kv8r7vR4rQ6hdxytE/rSQxAkBq1ChjSo232y/XdrRyk8Iq9mGi0JxRAkXoMmqW&#xA;2mvFdTXEdu0bB4mkIHxIQRQHrTNTgE+IGAsguflETEiXIvaIJo54I5ozyjlUOjDurCoOd8DYeJIo&#xA;0vwodirsVdirsVdirsVdirsVY752MgsICpIX1fiI8eJpmFrr4R73Zdm1xn3MgjLmNS+zkDkPem+Z&#xA;g5Oulz2XYUOxV2KrZJI4o2kkYIiirMxoAB44Ca3KQCTQYjfeYJtT1OGz0+MyQA03qCx7t7BR45gS&#xA;1JnMCI2dpHRiGMymaKLvrJ7R0UnkGUHl2r3AzJMacOMrQ2RZIqLTJruwne3kCXAPGLkPhqBU/fXC&#xA;YExNc1E4xkOIbKHlvzF6FdN1NjHLExWOR/nurntTsco0+or0z5uTq9JfrhyZXme6t2KuxVj+uW0f&#xA;+IdIuD1Zijf7D4l/FsxM8R4kS5+mmfCmGQZluA7FXYq88/O3zWNG8qNp8D8b7V+UCUO6winrN9II&#xA;T/ZZj6idRrvczRYuKd9Ax3yx5Tj0X8uLS9mjA1DVbhLmViPiETI/opXw4/F8zmm7VxgacHrxfoLt&#xA;dHmMtQR0Ef0hbnNu6VvMvlaPV/yzv7mJA19YTm7jYD4ikSASLXw4MzfPOk7KxA6cnrxOl1mYx1AH&#xA;ThZL+TPmVNZ8mW9vJIGvNL/0WZa/FwX+5anhw+H5g5utPO4+51Osx8M76FnmXuI7FXYq7FXYq7FX&#xA;Yq7FXYqk/m2Pnosrd4mRx/wQX/jbMXWC8Zc3QSrKPNMNOuhd2MFx3kQFv9b9r8cvxz4oguNmhwTM&#xA;e5EZNrdiqB1LWtP04oLlyGfoFBYgeJplWTNGHNvw6eeT6WDedPOFvxgNw0lvpkrkRUXk8pSnJwtV&#xA;qFr45gajMZ+UXedm9nSN8NGY+xX8seevy6gXhDdtb3L7NJdRspP+yAZFH05dgnijy5+bDW9la084&#xA;2P6J/BRGr+fvJ9xdi2h1WB3t6h2DfCS1PstSjdOoOWTzQvm4mPsvUAfQd0KfNHlwCp1O2p7SoT9w&#xA;OR8WPeyHZ2o/mS+RRGj/AJl+SoLltPm1WJJHYFGIcJU7GsnHgO29aZLHnhytGXsnU1fB91/LmoeZ&#xA;/Nv5byM7SX3qXn89mrSE06VNPTb78qznDLmd/Jy9F2drekaj/S2/ah/KfntZfXhsme+tLVebRyD0&#xA;5UjrTkoq/wAIPXrT2yrDnlHl6ohnr+yzGjP0yl3bi2aaJ5ittVaSNEMUkY5cGINV6V298zMOoGR0&#xA;uo0ssVE7hNcyHFYTrnmfRLvVLGWyv4LmLT5ibuSKRXWMhl5BipNNlOYGpyDjj5O00eI+HOxzDLrD&#xA;ULDULVLuwuYru2k+xPC6yIadaMpIzOBt1hBHNEYUJN5r816T5Y0mTUdRkoo+GCBaepLJTZEH+dMh&#xA;OYiLLZixGZoPItH8o+ZvzM1xfMnmHlZaJUC2hFQWhBqI4Qf2T+1Ievb2xY45ZDZ5Oxnmjgjwx3kz&#xA;zzzeXEksOmWttK1tbAMxjjYrypRVBAp8K5re2I5shEIRkYjfkebd2WccAZykBI+bFfqt9/yx3H/I&#xA;p/6ZpPyGf+ZL/Sl2/wCcw/zo/MMm8paza6bDc22tOthYy/Ekt6RBGWNFZOUhUEsO3tm87HjkxiUc&#xA;kTGPPcU6jtPgyESgeKXluwK40jVfy41+PzR5fcar5SujSR4XEi+izf3bstR8J+xINq9fA7AxOM8Q&#xA;3i1CYzR4JbTe3aNrOn6zpkGpafKJrS5XlG42PgVYdiDsRmbGQIsOrnAxNFG4WLsVdirsVdirsVdi&#xA;rsVQWtwmbSbuMbn0yQPdfi/hlWeNwIb9NLhyRPmwm68+QeVfJtxfy273kkEyxQW6HiCZdwXah4rU&#xA;Heh7Zh6XMBCvNz9ZpjLJY6hjvl//AJyQ0q4lkTXdOexQKWimt29cEjcIykIQT4/qzJjqB1cWekPQ&#xA;vUvLnmPSvMWkQ6tpchktJ6gcgVZWU0ZWU9CDl0ZAiw4s4GJoqN/5Yt9Q1EXl1MzoAFECgKOIrty6&#xA;98oyaYTlZLlYtYYQ4Yj4sb/Mb8uW16CK802T076ziEUVqxpE8akniv8AI2/Xoe/jkdRpuIbdHadj&#xA;9sflyYzHokbvqD+kPC77T57e5e3uo5Le5iJWSNqoykdiM1hBGxe5jKOQCUTYPUKARtg9HHZu4+f9&#xA;mBlXevZlVd/kAOpxZE0oLHM32QIE9gC5+fYYbawD7kRb2rvKscSvNNIQqKKuzE9AB/TBzZbRFk/N&#xA;7P8Alj+W9/pVyutaq5huCjJDYqf2XFD63Y7fs5sdNpjE8ReM7b7Zhlj4WPcX9Xu7v1s8tdA060vT&#xA;d2ytDIagorEIQe3HwzIjgjGVjZ5+eqnKPDLdX1W3nudLvLe3f055oJI4pBsVd0IU/QTlp5NETRfN&#xA;35c2040bWLYoVnDtE0bbEPwK0Nem+abLzD0WHcFn/wCQ/lrVtD/Sa3l0pS4WNhZpVlVwSOfI0Fab&#xA;Gg+nM3Szsl12ux8IBLM/zK80S+W/Kdxf20ojvmeOKzqnOrs4LChqP7sNudv1ZkZp8MbcTTYuOdHk&#xA;898t6FrXmW6j8yedeV5LD8Nhp0qBIwAd2eIcV6/skb/tVxw6cz9U/k359RHH6MfxLOtYl16+05ra&#xA;yvjpc+ximhVGK0FApUrTj8qfPMqeKxts4OPIAbItJNNtPPVnIgvL+01WAn94Xja3lA8VaMMp+lfp&#xA;wQjkHMg/Y2TlilyBj9qH8+S+dhb2kXlmMcpZCs8ylC67VX+8HFVO9WyOoOShwM9KMVkzSW0/LPVd&#xA;Suor3zZqjX7oPhtFJ4KT1HLbbx4gZVHSmRuZttlrBEVjFebO7S1h0+xFjaQIlgAVNtGKJRvtVQ7N&#xA;XvmWIRAqnBM5E2Tu8/vPI/mDR/NFlqPlWKW4097iOeXS45TCVMbB3SrELxcLT2rTpmBl0xjK48nZ&#xA;YtVGceGfPvTr/nIL8xNb8qaDptro0htL/V3lDXNAXiigVOYX7ShiZVFe29PHM3BASO7rZGmGflF5&#xA;u/NqDzfZWevm9vtFvj6c7XQ9T0y6n05EkNWFGpUVpQnbBPLiltEi204MgFkGn0ZlTB2KuxV2KuxV&#xA;2KuIBFDuD1GKvJ9dsrWt3Z3KK1sHeKRH6FeRXNDIcMiB0L1EJcUAT1DFPKX5ISarr8tzfxm28sRV&#xA;ENJKzXB40HHuoDfaJHag8Rn4MZkLPJ1mqzCBoc3uXl/y/pWgaVDpelw+jZwV4qSWJLGrMzHckk5n&#xA;RiAKDrJzMjZTHCxdirD/ADs9vPPHZTaTBe8lqJbiIuamvwxleLCniGzC1WQg1w27fs3iiDITMfcf&#xA;vYLcfl1HPcFotLuYOeyxIs3pgn3k5H72zBOKZP0u+h2zIDecT8r+z9SQJ+VfnyT0mXS+IlNCzzQr&#xA;wHiw58vwywaXJ3Own29pR/FfwP6k6s/yyntJx9dsri8dPtRhJBEf9lEan6HyHgzB+n8fBwsvbnGP&#xA;RKMflf2/qZz5PNvaaiLKLRreyJVgZYYmSRQAT+8ZyzEGlNz1zL02Q8XCY06LtAynDiOSUvedvgzb&#xA;M90jsVaZgqljsAKk/LFXjMNnJFqesXbWrWR1K9lu47aQFZFRwvAyIfss9PUK9Ryoc02q+t6HRj92&#xA;HpflC30xdJjubF/W9f4pJDTkGpuhp04+GbHTY4xjs6vXSn4nDPavxaeEA9cyHCS240cSStJHJx5G&#xA;pUjueuWjIxIUxob13lAHsK/xw+KvCrx6NbL9tmf26DInIU8KI+oWfHj6S0+W/wB/XI8RWkNLo1u2&#xA;8bGP2+0PxyQyFHCp/oP/AIv/AOF/tw+KvCiLTTI7eX1OZdgKLtSlcjKdpAeXf85E/l/r/mnR9NvN&#xA;Fg+tXGkNO0tqpPqvHMI6+kvRiPS6dfDLMEwDuiQX+Qb+WbUNFc2dxxlVRPIIm4Qlrd2UyN+wC68N&#xA;9+RAzTYMP70/0bd3q8w8EDrKnrWbJ0zsVdiq1pI1NGYA+BIGC0gFtHR1DIwZT0INRhBUim8UOxV5&#xA;55jEP6XmeI1SWjj6difpYHNNqo1O+96HRSvGAejIfJ2prLZ/U3oskRYxgAAFa1Ow8C345m6TLcad&#xA;br8PDLi6MizMcB2KuxV2KuxV2KuxV2KuxV2KuxV4/wCbdQmsfNGpwyL6vKRXQk0oHjUgd9qZqtRC&#xA;5l6/Q4RkwQI22/ShPJvme70bVEC1ktLp1S4g8amgZf8AKFcliyGJbu0NFHNj/pR5F7XmzeKdirsV&#xA;WymUITEqu/ZWYqPvAb9WA30SK6pLeaxrlvLwXS/V2rWN2cffwUZjTzZAfp/HyczHgxSF8dfj3qba&#xA;j5vZQYtMiWu45yKevtzXB4mbpFkMWn6zPy/YhmvfPLNtaIvsAlPvLnK+PP3Nnh6Ydfx8lKcefZlK&#xA;8PTB6+m0Kn7+VcEvzB/AZR/Kj8Fh3mdNYhU/XJJluIirESOxqtaeJBFcxTxiVSt3GhOMn0gUUpfX&#xA;39D9w0tvdbcZImK037MCDjGJibBcyOk9W9GPmy/yovmPXdPM6alIoif0pec0vIkAGtBXqD45fDHk&#xA;nuJbe8uo13g4J1wDffkGQJ5NmcD63qU0p8BXb6WLZcNGTzkXXnXgfTEBEp5N0oKQ8k8tf5n/AKAZ&#xA;MaOHm1nXz6UPgrWXlXR7ST1FjMrf8W0cfcRkoaWEWGTW5JCrr3JsqqqhVAVR0A2AzIcQlvFVO4iM&#xA;sEkYNC6kA+5wEWExNFg+qaW91JHNE4R1HFiehWtfA5gZ8Jnydrps4hYKHZbjSZ7K9iPOFGP7wdGa&#xA;v7xfpXbKJA4zEjk5ESMolE8z+A9AtrmG5t47iFuUUg5Kc2sZCQsOjnAxNHmqZJi7FXYq7FXYq7FX&#xA;Yq7FXYq7FXlv5o6TKdbhu4IywmgHqUp9pCRWnX7NM1+qoSeo7F1A8IxJ5FK/y+t/+dus0mhrQSMA&#xA;69CsbEMK9wRkdPvMOX2rP/B5Ue773s2bJ4x2KuxV2KuxV2KuxV2KsK/NOxaTRI72PZreQLLTvHJt&#xA;v8n45i6qFi+53XYmWspieo+0fseUZgvWPZfy4sorfyrbSIPjuWeWU+J5FB/wqjNjpxUHjO18hlqC&#xA;P5tBk+XusdirsVdirsVdirzfzJp0+n38nqE/VpCXhcn4eJ3p/sc02oxmMvJ6HR5ROIr6uqQt5vkg&#xA;tpLCNFuLNzyIeo4uOjRntjAnhMTydiOzxI8ZNS/HNkv5e+a4JbltLmJj9X47cMduY6qD7jfMnSS4&#xA;Twl1vaugMY+IN65vQc2Dz7sVdirsVdirsVdirsVdirTukaM7sFRAWZiaAAbkk4pAJNB475v84vqm&#xA;r+pZVSzgX04uQB50JJehG1fDNZnkJl7DQdnDHjqf1H7PJG+Q/MllDq7NqckduvossUrVC8yy7E70&#xA;+GuOmEYystHaeikcf7sE7vUba7tbqP1baZJ4+nONg6/epObIEHk8xPHKJqQIKrhYOxV2KuxV2Kux&#xA;V2Ksb87wyahpEmmW0ipNIyM5avHip5UNK9wMpzCxQc/s7KMWQTkNg85/wLrVftQ/Pm3/ADTmH4Mn&#xA;ov5Xw/0vx8XqflLT59O8vWdnPIkksQbk0ZJX4nZwBUA7BqZnYo1EB5nXZhlzSmNgf1JvljiOxV2K&#xA;uxV2KpT5g19NJjQCMyzy19MVoopTcn6cx8+fw/e5Wl0pynnQDzjzZq2panZk3EpMaOHES7IO3T6e&#xA;+a45pTO70WgwQxz2DEMLunLcGCWN0cpKGBjKmjBgagim+2FjIAij1ep+UvzE+ur9W1VPTljAH1xf&#xA;sMenxr+yflt8sy4aocpPL6/sng9WM7HozeOSORA8bB0YVVlNQR7EZlg3ydIQQaK7Ch2KuxV2KuxV&#xA;2KuxV57+YPneEQz6Jp55yPWO8nHRR+1GviT0bw6fLDz5v4Q9D2V2abGWfLoP0vNkR3dURSzsQFUC&#xA;pJPQADMR6QkDcqsmmavBya7sp7ZSaIssToaDv8QHXDKJHNpx6iE+Ugfitgubi3lEtvK8Mq7q8bFW&#xA;B9iKHADTbKEZCiLDOfLPnPXorUG6l+uR8jQS7txHg43++uSGqlE97odb2fiMvSOH3PTIJVmhjmXZ&#xA;ZFDqD1owrm0ibFvNyjRIX4WLsVdirsVUrq4WCFpG7fZHiewwE0mIssbZmZizGrE1J9zlLlO4PxD8&#xA;TwOwam1fnittxTSxNyjYqfbEFSLaTzqkN20F1HziWg9aPrXvVe/0ZSdYBKjybx2eZRsHdkNlf2d7&#xA;F6trKsqd6dQfAg7jMqGSMhYLg5MUoGpCkRk2t2KuxVi/ny35Wdtcd45Cn0OK/wDGmYOuj6QXZdmy&#xA;9RHk15a0TR77Rle5tVldi6SM1dxU+/gcdLihKFkbp1eoyQyek0ih5C8ohuQ05a+7yEfcWpmR4EO5&#xA;h/Kmo/nfd+pLtZ/LDy7es09nH+j7xgAZIxyQ0AA5IT7fske9cE9PE8tm3Tdr5cZ9XrH2/NJG8kat&#xA;pkXpxRfWU6tLFuSf9X7Wa/Lppg8rc7+UoZTZNe9qw1fVdJlKxMyAH47eQHjX3U9PoyvHlnjOy5cE&#xA;Mo3+bIrXz5btQXVsyHu0ZDD7jxzMjrh1DgT7MP8ACWQ2OpWV9H6lrKsg/aA2YfMHcZmQyRkNi6/J&#xA;ilA1IInJtbsVdiriQASTQDck4qxjzF5rt0tpbXTpS1xIpQ3CdI67VU928KZhZ9WAKjzdnpNEeISm&#xA;Nu7vYPo/5b67fy8rilpa1/vpN2YeKp1++mV48Epb8neajtjFjG3ql3fteheX/JeiaIRLBGZrsCn1&#xA;mWjMK9eI6L9G+ZmPDGPvef1XaOXNsTUe4J7lrgKE9hY3G9xbRTE9fURW9u4ORMQeYbI5ZR5Ehh3n&#xA;TTbW0ktWtYI4I3V1KxKEWoIPRaeOa7WwAIIDtuz80pg8RJPmyrQ5fV0ezf8A4qRT81HE/qzOwG4D&#xA;3Os1MayS96Oy1odirsVU7i4ht4XnncJEgqzHtglIAWWUYmRoc2A6p5hvb/Ule25CJDxggAryr/MB&#xA;1JzU5NTKUrDvMWkhCFS59SynS9KleJJb5BG539AGtP8AWP8ADNjjiSLk6nLMA1E2E44Jx48Rx6ca&#xA;bUy5x0NJpdlJWsfEnupK/qyJgGYyEMc17ytpdpps93CZFkjAIBYFTVgN6ivfxzBz6WMYkh2Wm1s5&#xA;TETS/wAgoRbXb9i6AfMAn+OHQjYse0zvFlWZ7rHYq7FUj85IG0Nz/I6H8afxzF1g/duboD+9X+UY&#xA;jHoUBPVy7f8ADEfww6QVjDHXSvKU5zJcR2KuxVQurGzu04XMKSqOnIVI+R6jIyhGXMM4ZJQ+k0ld&#xA;x5O0OUfBG8J/mjc/qbkMx5aPGfJyo6/KOtpXJ5M1C1lE+m3g5ruvKqN8qioOUHRyibiXJHaEJCpx&#xA;U77WvN1kI/rEQRYz8coQMr/6zCoH0UwTzZo8wyx6fTzujzZHpOt2OpxcoG4ygfHC2zD+o98zMWaM&#xA;xs67Pp5YzvyTAkAEk0A3JOXNDCtX1S/1y8On6arNaqaMRsHoftMey+GazLlllPDHk7nBhjhjxz+p&#xA;OdE8q2dgBLPS4u+vIj4VP+SD+s5k4dKIbncuHqNbKew2inmZThOxV2KuxVJ/Ndh9b0eUqKyQfvU/&#xA;2P2h/wADXMbVY+KHucvRZeDIO47LfJ83qaFCveJnQ/8ABFv+NsdIbxhOvjWU+adZkuG7FVG8vLez&#xA;tnuJ24xRipPc+AHucjOYiLLPHjMzQ5sHmm1XzNf+nGClshqF/YjHix7tmrJnnltyd1GOPTQs8/vZ&#xA;ZpHl+w0xaxLznIo07/a+jwGZ+LBGHLm6vPqp5OfLuTLL3GdirsVSzzLA02h3aL1CB/8AgGDn/iOU&#xA;amN4y5OklWWJS/yIB+iZj39dt/8AYJlOh+g+9v7S/vB7v1sjzNde7FVk88NvC00zBIkFWY9AMEpA&#xA;CyyjEyNDmw/zN5msr20aytAzhmBeUii0U12B365rtTqYyHCHbaPRyhLikyLy4wbQ7MgU/d0p8iRm&#xA;Zpz6A6/VissvemOXOO7FXYq7FXYq7FXYqhhpmni4W5W3jWddxIqhTvt2yHhxu63bPGnVWaSnzjDq&#xA;L6cGtnIgSpuY16lex+Q7jMfWCRjty6uVoJQE/Vz6Inyu1k2jwtaoENOM4HX1B9ok+/XJ6bh4BTXr&#xA;BIZDxfD3JtmQ4rsVdirsVdiq2QgRsSOQAJK9a7dMBSObB/L+sXul+pDJZySW0jc6KpDK3QkVG+w6&#xA;Zq9PmlDYjZ3WqwRy7iQtmVjfwXsXqxBwAaESIyEH6Rv9GbKExIWHUZMZgaKIybWxS5lXzHrIso3I&#xA;060BeRl/bYGmx+mg+nMCR8afD/CHaQH5fHxH65MntrW3toVht41ijXoqimZsYiIoOtnMyNk2VTJM&#xA;XYq7FXYq0yq6lWFVYEEeIOJCQaYv5RvrK1Fzp0kypKJ2MfI05CgXY9K/DmBpJxjcSerstdjlKpgb&#xA;UynM91jsVdirsVdirsVdirsVdirsVdirsVdiriARQ9MVQdnpGn2czzW0fptJ9oBm47+C14/hlcMM&#xA;Ymw3ZM85ipG0ZljS7FXYq7FXYq7FXYq7FWmUMpU9CKHt1+WKgoOw0bTdPd3tIfSZxRjydqgb/tE5&#xA;VjwxhyDdl1E8n1G0blrS7FXYq7FXYq7FUrm8saFNI0j2o5tueLOor8lYDKDpsZN05MdZlAoFH2tp&#xA;BaxCKBSsY6LUtT/gictjERFBpnMyNlVyTB//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:A28BA6DBC66CE91183158642932CA4DA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:A28BA6DBC66CE91183158642932CA4DA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:62cbf98e-7ee6-2c4d-95c5-ee76df8a0b95</stRef:instanceID>
            <stRef:documentID>xmp.did:c36798e4-b4f4-a44f-9ae7-f4045ae249fb</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ca29a0c7-e321-5144-8b0c-c78bb2f197a1</stEvt:instanceID>
                  <stEvt:when>2019-03-25T10:06:26+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f9378a53-6746-9c47-83f2-c61853a7940a</stEvt:instanceID>
                  <stEvt:when>2019-03-25T12:09:32+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c36798e4-b4f4-a44f-9ae7-f4045ae249fb</stEvt:instanceID>
                  <stEvt:when>2019-03-25T12:15:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62cbf98e-7ee6-2c4d-95c5-ee76df8a0b95</stEvt:instanceID>
                  <stEvt:when>2019-04-09T16:49:39+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A28BA6DBC66CE91183158642932CA4DA</stEvt:instanceID>
                  <stEvt:when>2019-05-02T13:41:51+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1600.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
1600 800 li
1600 0 li
cp
clp
1600 800 mo
0 800 li
0 0 li
1600 0 li
1600 800 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
127.649 407.615 mo
132.554 402.749 140.666 399.317 150.948 409.313 cv
161.23 419.31 164.469 424.069 168.21 427.931 cv
171.951 431.793 180.432 443.85 185.438 453.257 cv
190.446 462.663 200.368 485.438 204.498 489.871 cv
208.628 494.304 225.476 519.888 227.968 526.827 cv
230.46 533.767 256.343 588.857 256.343 588.857 cv
246.181 595.771 li
246.181 595.771 199.174 528.311 194.753 520.176 cv
190.334 512.041 168.183 477.251 157.367 465.947 cv
146.551 454.644 110.688 424.446 127.649 407.615 cv
cp
.933333 .658824 .52549 rgb
f
218.192 531.668 mo
218.192 531.668 168.458 538.975 131.735 555.604 cv
95.0122 572.236 77.2041 582.622 75.4565 585.217 cv
73.709 587.812 73.5093 599.082 77.4932 615.761 cv
82.2754 635.788 84.7456 659.895 85.5913 671.06 cv
87.0859 690.788 85.5913 722.175 85.5913 722.175 cv
106.499 720.47 li
106.499 720.47 105.829 719.646 111.57 683.913 cv
114.869 663.378 117.205 644.23 111.271 611.693 cv
111.271 611.693 136.117 606.341 154.936 609.33 cv
173.752 612.318 216.208 608.133 237.512 592.558 cv
258.815 576.982 236.146 551.555 218.192 531.668 cv
cp
.933333 .662745 .529412 rgb
f
239.504 592.358 mo
231.237 598.731 220.882 602.987 210.062 605.732 cv
207.425 606.401 204.752 606.981 202.087 607.483 cv
184.283 610.813 166.264 610.551 154.936 609.33 cv
151.917 609.002 148.951 608.565 146.058 608.416 cv
146.046 608.416 146.046 608.41 146.046 608.41 cv
133.772 584.568 131.734 555.604 131.734 555.604 cv
168.458 538.972 216.787 530.106 216.787 530.106 cv
234.739 549.996 260.404 576.246 239.504 592.358 cv
cp
.921569 .443137 .443137 rgb
f
187.242 522.899 mo
140.672 560.085 li
140.672 560.085 131.134 551.063 120.901 540.434 cv
119.263 538.729 117.637 537.015 116.073 535.334 cv
109.286 528.024 103.675 509.726 102.888 506.73 cv
100.789 498.723 102.457 487.444 101.176 483.231 cv
99.8965 479.018 86.9214 460.968 97.5435 450.879 cv
108.166 440.791 130.018 415.466 131.144 412.667 cv
131.701 411.281 132.568 405.612 133.302 400.242 cv
133.665 397.585 133.995 395 134.238 393.045 cv
134.492 390.978 134.655 389.615 134.655 389.615 cv
161.228 389.12 li
161.228 389.12 160.252 408.54 161.982 413.23 cv
163.716 417.919 173.04 433.551 172.815 441.903 cv
172.593 450.256 171.28 460.015 168.993 467.004 cv
166.705 473.994 161.747 495.952 164.443 502.478 cv
167.139 509.003 174.34 514.043 187.242 522.899 cv
cp
.933333 .658824 .52549 rgb
f
191.407 527.493 mo
191.407 527.493 217.867 528.581 227.085 535.62 cv
236.303 542.66 248.855 563.222 256.307 568.445 cv
263.761 573.669 302.441 594.568 312.629 600.948 cv
322.817 607.328 348.757 623.051 361.8 625.54 cv
374.844 628.029 385.169 630.029 395.835 633.737 cv
409.909 638.631 467.043 672.87 473.933 674.396 cv
466.98 688.7 li
466.98 688.7 378.938 663.029 370.465 662.046 cv
361.993 661.063 346.891 660.504 338.311 656.756 cv
329.733 653.006 311.071 645.644 286.479 639.472 cv
261.887 633.301 221.294 612.459 201.974 599.689 cv
182.655 586.92 150.085 562.224 150.085 562.224 cv
150.085 562.224 155.123 533.612 191.407 527.493 cv
cp
f
467.906 672.322 mo
467.906 672.322 481.133 659.826 491.411 664.877 cv
499.345 668.776 498.675 676.81 504.468 680.452 cv
512.398 685.439 534.635 701.491 537.436 702.428 cv
540.235 703.364 542.72 707.568 539.14 708.965 cv
535.559 710.362 528.249 707.242 524.513 707.238 cv
520.779 707.234 472.698 692.37 463.989 687.536 cv
455.279 682.703 467.906 672.322 467.906 672.322 cv
cp
f
174.588 331.413 mo
167.319 326.31 148.307 319.568 133.184 337.817 cv
133.184 337.817 130.396 343.553 129.035 348.583 cv
127.675 353.613 116.058 363.638 116.655 364.872 cv
117.252 366.106 120.824 369.459 120.824 369.459 cv
120.824 369.459 116.628 385.78 121.46 388.673 cv
126.293 391.565 146.66 399.236 165.808 387.736 cv
184.955 376.236 203.934 352.019 174.588 331.413 cv
cp
f
133.184 337.817 mo
133.184 337.817 140.108 353.809 151.126 363.121 cv
162.146 372.433 161.981 389.78 161.981 389.78 cv
161.981 389.78 194.963 378.328 191.936 350.292 cv
188.909 322.257 145.195 312.998 133.184 337.817 cv
cp
.458824 .282353 .211765 rgb
f
156.5 365.74 mo
158.045 363.443 162.864 361.58 164.676 367.197 cv
166.487 372.815 154.305 380.675 151.854 377.601 cv
149.403 374.526 154.903 368.114 156.5 365.74 cv
cp
.933333 .658824 .52549 rgb
f
214.209 351.763 mo
212.927 360.188 205.058 365.978 196.633 364.694 cv
188.208 363.411 182.418 355.541 183.702 347.116 cv
184.984 338.691 192.854 332.902 201.279 334.186 cv
209.704 335.469 215.493 343.339 214.209 351.763 cv
cp
.458824 .282353 .211765 rgb
f
279.691 582.147 mo
279.691 582.153 li
279.691 582.153 273.062 604.381 250.922 626.142 cv
239.727 621.03 228.116 615.447 218.15 610.168 cv
215.305 608.655 212.59 607.172 210.062 605.732 cv
206.72 603.824 203.688 601.995 201.094 600.28 cv
181.778 587.51 148.485 566.802 148.485 566.802 cv
148.485 566.802 140.151 560.153 134.682 554.301 cv
134.682 554.301 164.746 535.738 182.413 519.566 cv
185.49 522.263 193.09 525.019 196.76 525.85 cv
196.76 525.85 217.87 528.582 227.088 535.624 cv
236.3 542.661 248.855 563.22 256.31 568.445 cv
259.639 570.782 269.21 576.253 279.691 582.147 cv
cp
.921569 .443137 .443137 rgb
f
168.993 467.004 mo
167.379 471.933 164.438 484.31 163.788 493.464 cv
163.788 493.464 139.43 500.876 102.209 503.205 cv
101.089 495.171 101.853 485.448 101.176 483.231 cv
99.8965 479.018 86.9214 460.968 97.5435 450.879 cv
108.166 440.791 130.018 415.466 131.144 412.667 cv
131.246 412.413 131.358 412.018 131.477 411.509 cv
131.477 411.509 153.572 410.643 161.144 407.617 cv
161.294 410.04 161.558 412.079 161.982 413.23 cv
163.716 417.919 173.04 433.551 172.815 441.903 cv
172.593 450.256 171.28 460.015 168.993 467.004 cv
cp
.929412 .854902 .827451 rgb
f
154.754 392.411 mo
154.754 392.411 141.931 397.712 133.302 400.242 cv
133.665 397.585 133.995 395 134.238 393.045 cv
134.238 393.045 144.056 395.233 154.754 392.411 cv
cp
.654902 .470588 .376471 rgb
f
165.488 460.179 mo
162.563 473.193 139.248 488.079 128.094 476.093 cv
128.094 476.087 128.094 476.087 128.094 476.087 cv
125.755 473.576 123.951 469.875 122.982 464.729 cv
122.575 462.563 122.317 460.137 122.228 457.435 cv
122.188 456.144 122.174 454.888 122.188 453.674 cv
122.216 450.236 122.462 447.086 122.874 444.192 cv
126.778 416.567 145.999 412.657 145.999 412.657 cv
169.368 410.624 169.284 443.29 165.488 460.179 cv
cp
.933333 .658824 .52549 rgb
f
53.3032 749.574 mo
60.9604 749.43 82.6641 748.31 94.7188 749.579 cv
106.775 750.853 111.454 749.009 110.607 740.355 cv
110.562 739.886 110.506 739.411 110.442 738.926 cv
109.358 730.466 105.976 719.833 105.743 716.293 cv
105.497 712.554 91.1499 712.45 91.1499 712.45 cv
91.1499 712.45 86.1045 725.416 77.8403 728.867 cv
73.2144 730.798 60.1323 736.19 55.0264 738.459 cv
54.6533 738.628 54.2471 738.781 53.8223 738.926 cv
53.8179 738.926 li
48.4229 740.754 39.2998 741.01 37.9834 743.898 cv
36.5649 747.021 45.6431 749.716 53.3032 749.574 cv
cp
.933333 .662745 .529412 rgb
f
94.2734 256.884 mo
94.2734 256.884 96.5708 249.435 99.5454 244.704 cv
102.519 239.972 102.974 229.929 102.289 226.707 cv
101.604 223.485 97.9961 198.765 96.4072 197.073 cv
94.8184 195.38 92.6025 199.491 93.0635 201.867 cv
93.5234 204.244 95.7378 225.036 95.7378 225.036 cv
95.7378 225.036 91.7104 200.434 89.9946 199.155 cv
88.2803 197.877 85.3584 198.667 84.9639 202.27 cv
84.9639 202.27 79.6646 201.032 80.3584 207.142 cv
81.7002 219.326 li
81.7002 219.326 79.9063 213.157 78.1538 217.862 cv
77.2217 220.364 80.334 233.897 80.1128 236.784 cv
79.8916 239.669 84.9639 255.595 84.9639 255.595 cv
94.2734 256.884 li
cp
.960784 .678431 .541176 rgb
f
144.354 465.236 mo
144.354 465.236 133.993 468.608 122.188 453.674 cv
122.216 450.236 122.462 447.086 122.874 444.192 cv
144.354 465.236 li
cp
.654902 .470588 .376471 rgb
f
149.509 463.517 mo
143.33 466.609 134.553 467.339 127.903 454.634 cv
121.252 441.928 119.661 436.396 117.312 431.559 cv
114.962 426.724 110.666 412.622 108.845 402.123 cv
107.023 391.623 104.702 366.89 102.162 361.39 cv
99.6206 355.89 91.5977 326.326 91.394 318.955 cv
91.1914 311.585 83.7905 251.168 83.7905 251.168 cv
95.6035 247.771 li
95.6035 247.771 119.214 326.53 120.875 335.638 cv
122.536 344.746 132.727 384.71 139.475 398.824 cv
146.224 412.938 170.874 452.818 149.509 463.517 cv
cp
.960784 .678431 .541176 rgb
f
242.493 588.622 mo
242.326 588.927 233.771 602.396 218.15 610.168 cv
215.305 608.655 212.59 607.172 210.062 605.732 cv
210.062 605.732 232.629 597.135 242.493 588.622 cv
cp
.690196 .333333 .333333 rgb
f
672.641 295.469 mo
672.489 296.226 669.992 294.789 668.102 293.199 cv
666.209 291.61 661.063 287.07 661.744 285.935 cv
662.426 284.8 668.63 286.389 670.296 288.054 cv
670.296 288.054 672.792 294.712 672.641 295.469 cv
cp
677.862 301.447 mo
677.711 300.691 679.376 300.388 680.738 298.875 cv
682.1 297.361 675.593 287.373 674.684 285.254 cv
673.776 283.135 668.328 278.897 665.15 277.687 cv
661.972 276.477 652.438 279.654 647.898 279.654 cv
644.789 279.654 644.093 279.654 643.963 279.654 cv
643.963 279.654 636.396 286.048 637.023 288.22 cv
637.651 290.392 644.568 297.739 645.759 300.236 cv
646.952 302.733 658.366 310.625 663.815 314.087 cv
669.264 317.549 670.107 313.63 670.107 313.63 cv
670.107 313.63 672.648 315.077 677.289 316.196 cv
681.979 317.327 680.738 313.856 680.738 313.856 cv
681.797 313.554 689.364 317.489 689.515 314.613 cv
689.667 311.738 678.014 302.204 677.862 301.447 cv
cp
.933333 .658824 .52549 rgb
f
278.177 294.941 mo
279.842 293.276 286.046 291.688 286.728 292.822 cv
287.408 293.958 282.263 298.497 280.371 300.086 cv
278.479 301.675 275.982 303.113 275.831 302.357 cv
275.68 301.6 278.177 294.941 278.177 294.941 cv
cp
258.957 321.501 mo
259.108 324.376 266.675 320.441 267.734 320.744 cv
267.734 320.744 265.891 323.909 270.637 323.04 cv
275.131 322.217 278.366 320.517 278.366 320.517 cv
278.366 320.517 277.966 324.396 283.745 321.555 cv
289.538 318.707 301.521 309.621 302.712 307.124 cv
303.904 304.627 310.821 297.279 311.449 295.107 cv
312.076 292.936 304.51 286.542 304.51 286.542 cv
304.379 286.542 303.683 286.542 300.575 286.542 cv
296.034 286.542 286.5 283.363 283.322 284.575 cv
280.144 285.785 274.696 290.022 273.788 292.141 cv
272.88 294.26 266.372 304.249 267.734 305.762 cv
269.096 307.275 270.761 307.578 270.61 308.334 cv
270.458 309.091 258.805 318.625 258.957 321.501 cv
cp
f
636.941 311.26 mo
636.167 316.684 603.585 339.501 597.167 344.061 cv
592.018 347.72 587.541 349.398 579.755 352.326 cv
579.753 352.326 579.753 352.326 579.75 352.326 cv
562.061 356.977 451.065 390.098 451.065 390.098 cv
450.773 388.969 450.616 387.99 449.963 386.722 cv
445.82 388.375 441.556 389.444 438.847 390.292 cv
434.714 391.583 401.914 392.616 395.198 393.908 cv
388.483 395.199 375.053 397.265 369.629 392.1 cv
364.206 386.934 372.987 375.828 380.477 372.987 cv
387.967 370.146 415.343 369.372 420.25 368.854 cv
425.158 368.338 431.614 366.53 434.714 367.563 cv
435.693 367.889 440.021 366.619 445.486 364.73 cv
445.352 362.718 445.319 361.45 445.319 361.45 cv
474.462 353.048 li
469.064 301.446 li
469.064 301.446 481.743 253.666 532.403 290.115 cv
532.403 290.115 543.706 293.439 547.58 294.473 cv
547.853 294.544 548.29 294.555 548.876 294.509 cv
556.604 293.928 589.813 283.883 601.817 283.883 cv
614.73 283.883 618.862 283.108 623.512 285.433 cv
628.16 287.757 637.717 305.836 636.941 311.26 cv
cp
.921569 .278431 .278431 rgb
f
585.045 392.1 mo
579.621 397.265 566.19 395.199 559.476 393.908 cv
552.76 392.616 519.96 391.583 515.827 390.292 cv
511.695 389 503.947 387.192 498.522 383.576 cv
498.086 383.284 497.09 382.851 495.625 382.303 cv
495.625 382.303 495.623 382.306 495.621 382.309 cv
487.417 388.225 li
373.372 351.922 li
366.541 350.05 361.117 347.199 357.506 344.061 cv
351.566 338.895 318.507 316.684 317.731 311.26 cv
316.958 305.836 326.513 287.757 331.162 285.433 cv
335.812 283.108 339.943 283.883 352.857 283.883 cv
365.771 283.883 403.22 295.505 407.094 294.473 cv
408.856 294.002 412.502 292.146 415.958 290.257 cv
420.101 287.995 423.967 285.691 423.967 285.691 cv
479.437 260.93 485.61 301.446 485.61 301.446 cv
482.327 351.465 li
482.327 351.465 486.949 353.759 492.962 356.615 cv
520.455 364.384 li
516.855 366.982 li
518.41 367.483 519.512 367.713 519.96 367.563 cv
523.06 366.53 529.516 368.338 534.423 368.854 cv
539.331 369.372 566.707 370.146 574.197 372.987 cv
581.687 375.828 590.468 386.934 585.045 392.1 cv
cp
f
440.842 338.431 mo
440.842 338.431 404.77 316.813 389.015 313.412 cv
374.127 310.199 368.698 304.631 368.698 304.631 cv
368.698 304.631 392.373 304.631 408.127 315.823 cv
418.826 323.423 440.842 338.431 440.842 338.431 cv
cp
.729412 .219608 .219608 rgb
f
472.887 353.503 mo
472.887 353.503 535.628 320.558 561.244 313.412 cv
575.915 309.32 581.561 304.631 581.561 304.631 cv
581.561 304.631 542.773 308.419 519.186 322.624 cv
507.942 329.394 472.887 353.503 472.887 353.503 cv
cp
f
585.045 392.1 mo
579.621 397.265 566.19 395.199 559.476 393.908 cv
552.76 392.616 519.96 391.583 515.827 390.292 cv
511.695 389 503.947 387.192 498.522 383.576 cv
498.086 383.284 497.09 382.851 495.625 382.303 cv
516.855 366.982 li
518.41 367.483 519.512 367.713 519.96 367.563 cv
523.06 366.53 529.516 368.338 534.423 368.854 cv
539.331 369.372 566.707 370.146 574.197 372.987 cv
581.687 375.828 590.468 386.934 585.045 392.1 cv
cp
.933333 .658824 .52549 rgb
f
449.963 386.722 mo
445.82 388.375 441.556 389.444 438.847 390.292 cv
434.714 391.583 401.914 392.616 395.198 393.908 cv
388.483 395.199 375.053 397.265 369.629 392.1 cv
364.206 386.934 372.987 375.828 380.477 372.987 cv
387.967 370.146 415.343 369.372 420.25 368.854 cv
425.158 368.338 431.614 366.53 434.714 367.563 cv
435.693 367.889 440.021 366.619 445.486 364.73 cv
445.652 368.008 449.963 386.722 449.963 386.722 cv
cp
f
472.887 383.6 mo
534.566 365.349 li
522.37 361.623 li
522.37 361.623 473.079 379.491 472.887 383.6 cv
cp
.921569 .278431 .278431 rgb
f
472.887 383.6 mo
501.751 374.795 li
481.738 386.417 li
472.887 383.6 li
cp
.729412 .219608 .219608 rgb
f
415.958 290.257 mo
419.784 290.526 445.628 305.495 451.763 309.075 cv
442.441 304.206 407.094 294.473 407.094 294.473 cv
408.856 294.002 412.502 292.146 415.958 290.257 cv
cp
f
453.062 309.837 mo
453.004 309.803 452.542 309.532 451.763 309.075 cv
452.279 309.344 452.715 309.6 453.062 309.837 cv
cp
.321569 .321569 .321569 rgb
f
548.879 294.511 mo
548.879 294.511 504.352 305.314 496.203 309.837 cv
496.573 309.568 520.277 292.455 532.403 290.115 cv
532.403 290.115 543.706 293.439 547.58 294.473 cv
547.853 294.544 548.29 294.555 548.876 294.509 cv
548.879 294.511 548.879 294.511 548.879 294.511 cv
cp
.729412 .219608 .219608 rgb
f
524.293 284.79 mo
524.293 284.79 515.225 262.274 515.052 256.937 cv
514.88 251.599 516.835 234.085 518.405 227.808 cv
520.092 221.062 524.523 208.554 524.523 208.554 cv
524.523 208.554 548.283 234.553 551.899 237.824 cv
555.515 241.096 561.197 251.943 566.277 257.108 cv
571.356 262.274 637.129 289.996 637.129 289.996 cv
639.023 291.373 645.35 279.654 645.35 279.654 cv
645.35 279.654 627.659 270.022 617.156 261.241 cv
606.653 252.46 579.104 234.381 578.415 233.692 cv
577.726 233.003 552.588 203.388 546.217 186.514 cv
539.847 169.641 524.523 161.892 517.291 159.481 cv
510.059 157.071 486.987 149.667 486.987 149.667 cv
456.855 149.667 li
456.855 149.667 418.286 162.581 410.71 166.369 cv
403.134 170.157 390.393 197.189 387.81 200.289 cv
385.228 203.388 369.257 230.162 354.406 237.997 cv
346.422 242.209 307.264 284.475 304.51 286.542 cv
301.754 288.608 310.799 296.375 310.799 296.375 cv
310.799 296.375 359.744 266.407 367.837 262.102 cv
375.929 257.798 382.645 249.619 384.883 246.175 cv
387.121 242.731 413.292 213.719 413.292 213.719 cv
413.292 213.719 423.107 235.242 425.862 246.433 cv
428.617 257.625 427.608 262.578 427.24 266.234 cv
426.653 272.053 426.316 273.627 420.199 287.883 cv
420.199 287.883 487.244 296.877 524.293 284.79 cv
cp
.933333 .658824 .52549 rgb
f
556.747 201.891 mo
534.568 219.486 li
534.566 219.486 li
529.114 213.577 524.524 208.554 524.524 208.554 cv
524.524 208.554 520.092 221.062 518.405 227.808 cv
516.836 234.085 514.88 251.599 515.052 256.936 cv
515.224 262.275 524.294 284.788 524.294 284.788 cv
487.243 296.878 420.198 287.885 420.198 287.885 cv
426.316 273.626 426.653 272.054 427.24 266.236 cv
427.608 262.579 428.617 257.624 425.861 246.435 cv
423.108 235.242 413.292 213.718 413.292 213.718 cv
413.292 213.718 406.556 221.187 399.627 228.992 cv
377.18 210.886 li
381.437 204.958 385.388 198.498 386.4 197.28 cv
388.98 194.181 403.136 170.157 410.708 166.368 cv
418.285 162.58 456.854 149.667 456.854 149.667 cv
486.987 149.667 li
486.987 149.667 510.06 157.072 517.292 159.48 cv
524.524 161.892 538.117 168.136 547.076 183.788 cv
550.106 189.078 552.935 196.038 556.747 201.891 cv
cp
.917647 .847059 .811765 rgb
f
475.513 66.8491 mo
475.513 66.8491 499.076 70.561 495.488 107.43 cv
491.9 144.298 471.103 141.277 469.713 141.24 cv
468.323 141.202 448.834 141.912 447.315 96.897 cv
447.315 96.897 446.652 63.6108 475.513 66.8491 cv
cp
.933333 .658824 .52549 rgb
f
486.511 130.38 mo
486.511 130.38 485.795 146.384 487.262 149.667 cv
488.73 152.95 467.526 162.12 454.771 150.368 cv
454.771 150.368 458.213 134.424 457.356 128.583 cv
456.5 122.741 486.511 130.38 486.511 130.38 cv
cp
f
495.853 97.0156 mo
495.853 97.0156 498.434 94.2598 499.38 97.0498 cv
500.326 99.8403 495.861 112.284 495.7 112.867 cv
495.7 112.867 495.229 113.949 494.61 113.353 cv
493.991 112.757 495.853 97.0156 495.853 97.0156 cv
cp
f
447.95 96.5498 mo
447.95 96.5498 445.423 93.7441 444.423 96.5156 cv
443.423 99.2866 447.608 111.813 447.797 112.401 cv
447.797 112.401 448.247 113.492 448.878 112.908 cv
449.508 112.324 447.95 96.5498 447.95 96.5498 cv
cp
f
495.842 102.671 mo
492.468 107.18 li
492.468 107.18 492.564 97.293 492.023 95.7427 cv
491.481 94.1929 490.653 89.4561 490.201 88.3394 cv
489.748 87.2222 469.965 81.6782 452.49 89.958 cv
452.49 89.958 453.259 97.0674 451.584 97.7007 cv
449.91 98.333 450.73 109.28 450.73 109.28 cv
447.957 106.151 li
447.957 106.151 443.711 77.7856 444.759 74.8296 cv
445.808 71.8726 449.148 54.0977 484.999 64.6494 cv
484.999 64.6494 496.175 62.2827 498.419 69.999 cv
500.661 77.7148 495.842 102.671 495.842 102.671 cv
cp
.0862745 .12549 .180392 rgb
f
490.981 150.951 mo
469.252 178.594 li
453.067 150.944 li
453.067 150.944 454.49 150.192 459.14 149.167 cv
479.05 144.771 490.981 150.951 490.981 150.951 cv
cp
.933333 .658824 .52549 rgb
f
457.308 134.515 mo
457.308 134.515 462.623 141.313 471.017 141.313 cv
476.537 141.313 480.895 139.385 486.395 134.023 cv
486.395 134.023 483.616 144.588 471.053 145.535 cv
471.053 145.535 461.463 146.136 457.308 134.515 cv
cp
.654902 .470588 .376471 rgb
f
1075.02 35.2085 mo
1075.02 35.2085 1093.71 33.249 1100.44 51.2969 cv
1107.18 69.3442 1113.52 75.2524 1114.31 84.7334 cv
1117.52 123.08 1135.43 114.406 1130.39 136.511 cv
1125.35 158.616 1121.87 161.959 1121.87 161.959 cv
1079.06 153.565 li
1035.69 153.706 li
1035.69 153.706 1052.65 145.232 1048.88 127.185 cv
1045.1 109.137 1035.69 79.5571 1041 59.4111 cv
1046.32 39.2656 1063.85 36.7461 1075.02 35.2085 cv
cp
.0862745 .12549 .180392 rgb
f
1130.61 291.972 mo
1130.61 291.972 1130.59 291.932 1130.58 291.892 cv
1130.58 291.889 1130.58 291.883 1130.58 291.875 cv
1130.58 291.872 1130.58 291.869 1130.58 291.862 cv
1130.57 291.853 1130.57 291.843 1130.57 291.843 cv
1130.57 291.843 1129.42 291.915 1127.35 292.043 cv
1109.8 293.113 1025.97 297.968 1014.31 293.685 cv
1014.31 293.685 1014.63 292.549 1015.19 291.047 cv
1015.87 289.23 1016.57 287.503 1017.26 285.858 cv
1022.77 272.893 1028.65 265.063 1031 259.506 cv
1031.82 257.592 1032.69 256.396 1033.28 251.727 cv
1034.91 238.684 1034.66 217.955 1032.14 209.154 cv
1028.73 197.208 1023.42 189.243 1028.92 173.503 cv
1034.42 157.762 1035.39 143.409 1035.39 143.409 cv
1053 136.449 li
1053 136.449 1051.87 178.621 1075.76 179.569 cv
1099.66 180.52 1098.85 133.53 1098.85 133.53 cv
1116.91 139.175 li
1116.91 139.175 1120.14 164.02 1123.74 170.28 cv
1127.34 176.537 1125.45 193.226 1121.28 202.897 cv
1117.1 212.568 1114.45 230.776 1114.45 241.587 cv
1114.45 243.902 1115.09 246.922 1116.1 250.314 cv
1119.57 261.94 1127.46 277.912 1129.32 284.687 cv
1129.45 285.159 1129.55 285.584 1129.62 285.962 cv
1129.98 287.966 1130.21 289.313 1130.37 290.215 cv
1130.61 291.681 1130.63 291.972 1130.61 291.972 cv
cp
.980392 .631373 .27451 rgb
f
1213.25 372.633 mo
1193.53 373.011 1148.21 377.185 1128.67 369.979 cv
1114.44 364.724 1081.27 355.141 1057.17 350.179 cv
1048.2 348.336 1040.49 347.133 1035.47 347.03 cv
1022.3 346.76 1008.8 334.968 999.177 326.992 cv
995.276 323.763 992.015 321.16 989.661 320.202 cv
987.365 319.266 985.642 318.142 984.572 317.013 cv
983.784 316.179 983.352 315.339 983.309 314.568 cv
983.209 312.671 985.473 311.186 990.608 311.186 cv
992.039 311.186 993.508 311.252 994.992 311.363 cv
1003.95 312.034 1013.5 314.384 1018.87 314.222 cv
1025.13 314.031 1042.19 329.015 1045.61 329.771 cv
1047.05 330.093 1051.34 331.372 1056.88 331.779 cv
1064.37 332.331 1074.13 331.281 1082.21 324.081 cv
1086.43 320.318 1092.48 315.905 1098.88 311.57 cv
1113.61 301.603 1130.19 292.059 1130.56 291.845 cv
1130.56 291.843 1130.57 291.843 1130.57 291.843 cv
1130.57 291.843 1130.57 291.85 1130.57 291.862 cv
1130.57 291.868 1130.58 291.872 1130.58 291.876 cv
1130.58 291.883 1130.58 291.889 1130.58 291.894 cv
1130.59 291.914 1130.6 291.939 1130.61 291.97 cv
1131.75 295.083 1134 298.71 1136.67 300.999 cv
1140.57 304.359 1142.97 304.31 1158.18 305.047 cv
1161.15 305.192 1164.33 305.352 1167.6 305.551 cv
1181.8 306.413 1197.71 308.029 1204.91 312.515 cv
1208.3 314.625 1212.07 317.154 1215.8 319.925 cv
1215.8 319.925 1215.8 319.925 1215.8 319.928 cv
1225.42 327.068 1234.77 335.799 1236.63 343.007 cv
1236.83 343.798 1236.95 344.572 1236.96 345.323 cv
1237.15 355.564 1232.98 372.254 1213.25 372.633 cv
cp
.858824 .87451 .941176 rgb
f
1130.65 291.993 mo
1130.84 292.506 1131.57 294.468 1133 296.69 cv
1137.82 304.202 1142.81 304.15 1148.39 304.524 cv
1095.48 333.008 li
1026.26 331.315 li
999.177 326.992 li
994.021 326.169 li
994.021 326.169 980.57 316.808 977.528 314.848 cv
979.577 314.774 981.52 314.686 983.309 314.568 cv
983.209 312.671 985.473 311.186 990.608 311.186 cv
992.039 311.186 993.508 311.252 994.992 311.363 cv
999.885 306.353 1014.31 293.686 1014.31 293.686 cv
1130.61 291.834 li
1130.65 291.993 li
cp
f
1167.6 305.551 mo
1147.84 311.007 1131.33 325.979 1131.33 325.979 cv
1106.58 330.436 li
1147.06 304.427 li
1147.48 304.462 1147.93 304.493 1148.39 304.524 cv
1151.15 304.712 1154.49 304.868 1158.18 305.047 cv
1161.15 305.192 1164.33 305.352 1167.6 305.551 cv
cp
.713726 .729412 .780392 rgb
f
1064.33 329.819 mo
1077.42 327.578 1077.17 323.065 1081.87 316.807 cv
1085.91 311.413 1090.04 311.991 1098.88 311.57 cv
1100.3 311.502 1101.69 311.471 1103.02 311.471 cv
1104.26 311.471 1105.54 311.363 1106.86 311.158 cv
1106.86 311.158 li
1115.87 309.773 1126.27 303.987 1130.57 298.527 cv
1131.15 297.792 1131.98 297.185 1133 296.69 cv
1133.92 296.24 1134.98 295.885 1136.16 295.606 cv
1136.42 295.544 1136.68 295.483 1136.95 295.43 cv
1144.8 293.823 1148.94 294.585 1152.98 294.864 cv
1158.48 295.242 1167.74 302.652 1160.72 304.359 cv
1159.92 304.555 1159.07 304.783 1158.18 305.047 cv
1151.38 307.064 1142.51 311.067 1135.12 317.445 cv
1126.78 324.651 1103.45 331.668 1095.48 336.22 cv
1091.85 338.294 1075.69 343.875 1057.17 350.179 cv
1064.33 329.819 li
cp
.556863 .309804 .227451 rgb
f
1080.96 341.956 mo
1074.3 344.331 1066 347.17 1057.17 350.178 cv
1035.05 357.71 1009.56 366.266 998.005 371.116 cv
991.926 373.665 983.366 375.145 974.052 375.881 cv
974.016 375.884 973.979 375.887 973.945 375.892 cv
971.066 376.115 968.115 376.271 965.146 376.363 cv
964.962 376.37 964.773 376.376 964.585 376.379 cv
952.249 376.74 939.622 376.057 930.359 375.026 cv
930.333 375.022 930.311 375.02 930.283 375.016 cv
923.961 374.31 919.213 373.441 917.214 372.632 cv
911.396 370.278 906.896 359.83 905.78 350.75 cv
905.364 347.395 905.409 344.225 906.028 341.719 cv
907.408 336.072 914.349 329.333 922.802 324.218 cv
922.806 324.215 922.806 324.215 922.806 324.215 cv
928.257 320.916 934.342 318.292 939.973 317.066 cv
947.695 315.389 961.537 315.296 973.306 314.98 cv
974.745 314.939 976.158 314.896 977.525 314.847 cv
977.528 314.847 li
979.576 314.774 981.521 314.686 983.307 314.57 cv
988.442 314.239 992.295 313.695 993.661 312.661 cv
993.726 312.615 993.784 312.566 993.833 312.516 cv
994.15 312.632 li
994.15 312.632 994.15 312.632 994.154 312.632 cv
998.843 314.365 li
1029.3 325.601 li
1040.09 334.137 1052.58 332.183 1060.27 330.63 cv
1061.84 330.31 1063.21 330.01 1064.33 329.818 cv
1066.74 329.406 1068.71 328.917 1070.32 328.352 cv
1080.96 341.956 li
cp
.858824 .87451 .941176 rgb
f
1206.3 309.994 mo
1206.3 309.994 1159.21 274.396 1154.28 265.67 cv
1149.34 256.946 1127.83 198.867 1125.37 194.884 cv
1125.17 194.563 1124.75 194.249 1124.15 193.947 cv
1117.44 190.586 1088.09 188.864 1088.09 188.864 cv
1028.16 194.932 li
1028.16 194.932 1028.04 195.144 1027.83 195.531 cv
1025.91 199.095 1015.97 217.528 1013.75 223.001 cv
1011.28 229.069 998.572 262.256 995.542 267.188 cv
992.505 272.12 928.535 319.456 927.02 320.215 cv
925.505 320.976 913.42 315.522 915.886 312.109 cv
918.354 308.693 965.005 261.498 970.695 255.808 cv
976.386 250.12 997.626 202.14 998.954 196.45 cv
1000.28 190.762 1004.26 161.746 1014.5 153.968 cv
1018.41 151.004 1026.32 146.625 1034.63 143.074 cv
1034.86 142.976 1035.09 142.876 1035.32 142.78 cv
1041.51 140.181 1047.42 138.128 1052.44 136.248 cv
1052.61 136.185 1052.78 136.121 1052.95 136.059 cv
1058.48 134.014 1062.68 132.918 1062.68 132.918 cv
1088.71 131.227 li
1088.71 131.227 1094.89 132.4 1098.85 133.528 cv
1098.94 133.556 1099.04 133.583 1099.14 133.611 cv
1105.11 135.321 1113.2 137.714 1116.91 139.174 cv
1117 139.21 1117.09 139.243 1117.18 139.281 cv
1117.57 139.434 1117.98 139.592 1118.42 139.76 cv
1125.29 142.42 1138.29 147.368 1140.05 152.643 cv
1141.95 158.33 1147.64 173.312 1149.16 184.312 cv
1150.67 195.313 1165.46 232.864 1167.93 238.742 cv
1170.39 244.619 1177.41 252.586 1181.58 259.413 cv
1185.76 266.24 1213.49 299.287 1216.42 300.995 cv
1219.36 302.7 1206.3 309.994 1206.3 309.994 cv
cp
.556863 .309804 .227451 rgb
f
1109.47 330.122 mo
1109.47 330.122 1159.77 321.047 1171.53 326.169 cv
1183.29 331.289 1192.01 343.047 1203.58 341.91 cv
1215.15 340.771 1203.73 335.489 1195.48 333.294 cv
1187.23 331.1 1180.8 321.143 1158.98 321.854 cv
1137.16 322.565 1122.51 326.264 1122.51 326.264 cv
1122.51 326.264 1112.74 328.813 1109.47 330.122 cv
cp
.776471 .792157 .85098 rgb
f
1005.14 327.467 mo
987.271 324.486 li
987.271 324.486 979.702 315.926 973.305 314.979 cv
974.746 314.938 976.16 314.896 977.525 314.848 cv
977.528 314.848 li
979.577 314.774 981.52 314.686 983.309 314.568 cv
988.44 314.239 992.295 313.695 993.66 312.66 cv
993.828 312.651 993.99 312.643 994.15 312.632 cv
994.15 312.632 994.15 312.632 994.152 312.632 cv
996.417 312.501 997.911 312.424 997.911 312.424 cv
998.844 314.364 li
1005.14 327.467 li
cp
.858824 .87451 .941176 rgb
f
997.265 325.422 mo
997.265 325.422 992.979 321.347 989.281 320.202 cv
985.583 319.057 979.675 313.349 986.388 311.649 cv
994.816 309.515 1010.14 314.884 1014.31 314.79 cv
1018.49 314.694 1026.09 316.576 1031.96 320.711 cv
1037.83 324.847 1045.07 330.855 1049.7 330.741 cv
1049.7 330.741 1049.4 331.858 1046.37 331.763 cv
1043.33 331.668 998.928 326.788 998.928 326.788 cv
997.265 325.422 li
cp
.556863 .309804 .227451 rgb
f
1062.68 331.01 mo
1056.32 332.334 1046.24 333.176 1030.81 331.668 cv
997.816 328.444 981.507 323.05 964.249 329.919 cv
946.99 336.789 949.266 338.685 940.543 338.685 cv
931.818 338.685 946.042 327.875 964.627 324.651 cv
983.213 321.427 1029.3 330.341 1034.61 330.341 cv
1038.94 330.341 1053.43 331.686 1065.04 329.473 cv
1062.68 331.01 li
cp
.776471 .792157 .85098 rgb
f
1236.63 343.007 mo
1234.95 342.919 1232.67 342.407 1229.9 340.82 cv
1223.78 337.32 1215.92 320.195 1215.8 319.928 cv
1225.42 327.068 1234.77 335.799 1236.63 343.007 cv
cp
.713726 .729412 .780392 rgb
f
1236.89 317.422 mo
1235.04 317.066 1230.99 311.875 1230.92 310.452 cv
1230.84 309.03 1237.67 307.536 1238.74 310.452 cv
1239.8 313.368 1236.89 317.422 1236.89 317.422 cv
cp
1252.54 334.774 mo
1252.39 331.29 1239.31 323.253 1241.66 321.263 cv
1244 319.271 1244.29 312.017 1244.29 310.239 cv
1244.29 308.461 1242.08 306.47 1239.88 304.193 cv
1237.67 301.918 1226.36 304.336 1224.16 304.193 cv
1221.96 304.051 1216.42 300.993 1216.42 300.993 cv
1216.42 300.993 1203.87 308.097 1205.29 309.101 cv
1206.71 310.105 1219.18 323.04 1222.79 328.376 cv
1226.4 333.712 1230.84 335.414 1236.11 338.33 cv
1241.37 341.246 1241.02 337.334 1241.02 337.334 cv
1241.58 337.975 1244.64 339.042 1244.64 339.042 cv
1248.7 339.824 1248.27 335.983 1248.27 335.983 cv
1248.27 335.983 1252.68 338.259 1252.54 334.774 cv
cp
.556863 .309804 .227451 rgb
f
922.801 324.218 mo
922.696 324.522 915.813 343.926 906.12 350.525 cv
906.003 350.606 905.89 350.68 905.779 350.748 cv
905.362 347.395 905.412 344.225 906.026 341.719 cv
907.408 336.072 914.348 329.333 922.801 324.218 cv
cp
.713726 .729412 .780392 rgb
f
893.57 321.567 mo
894.638 318.651 901.465 320.144 901.395 321.567 cv
901.322 322.989 897.269 328.181 895.42 328.536 cv
895.42 328.536 892.504 324.483 893.57 321.567 cv
cp
884.041 347.099 mo
884.041 347.099 883.614 350.939 887.668 350.157 cv
887.668 350.157 890.726 349.089 891.295 348.45 cv
891.295 348.45 890.939 352.361 896.202 349.445 cv
901.465 346.529 905.907 344.827 909.519 339.491 cv
913.129 334.155 925.599 321.221 927.021 320.216 cv
928.441 319.211 915.886 312.108 915.886 312.108 cv
915.886 312.108 910.354 315.167 908.15 315.309 cv
905.945 315.451 894.638 313.033 892.434 315.309 cv
890.228 317.584 888.024 319.576 888.024 321.354 cv
888.024 323.131 888.308 330.386 890.655 332.377 cv
893.002 334.369 879.916 342.405 879.774 345.89 cv
879.632 349.375 884.041 347.099 884.041 347.099 cv
cp
.556863 .309804 .227451 rgb
f
1086.78 349.409 mo
1086.78 349.409 1033.01 371.753 974.052 375.881 cv
974.016 375.884 973.979 375.887 973.945 375.892 cv
971.024 376.092 968.089 376.254 965.146 376.363 cv
964.962 376.37 964.773 376.376 964.585 376.379 cv
953.157 376.783 941.633 376.426 930.359 375.026 cv
930.333 375.022 930.311 375.02 930.283 375.016 cv
930.283 375.016 1026.65 340.385 1060.27 330.63 cv
1064.91 329.283 1068.35 328.412 1070.18 328.17 cv
1070.32 328.352 li
1080.96 341.956 li
1086.78 349.409 li
cp
.858824 .87451 .941176 rgb
f
1077.49 45.7637 mo
1077.49 45.7637 1102.24 49.3354 1098.61 85.8721 cv
1094.99 122.409 1073.15 119.509 1071.69 119.478 cv
1070.23 119.447 1049.77 120.238 1048 75.6548 cv
1048 75.6548 1047.18 42.6855 1077.49 45.7637 cv
cp
.556863 .309804 .227451 rgb
f
1088.48 112.997 mo
1088.48 112.997 1086.95 132.002 1090.61 137.696 cv
1094.27 143.391 1087.48 151.118 1073.49 148.475 cv
1059.5 145.831 1060.31 137.899 1060.31 137.899 cv
1060.31 137.899 1064.23 126.171 1063.08 116.783 cv
1061.94 107.395 1088.48 112.997 1088.48 112.997 cv
cp
f
1074.66 59.0054 mo
1074.66 59.0054 1086.22 71.1631 1091.59 77.3184 cv
1096.96 83.4746 1097.58 95.3657 1097.58 95.3657 cv
1097.58 95.3657 1106.63 84.3135 1102.84 71.4424 cv
1099.06 58.5713 1090.11 33.5298 1067.44 41.2236 cv
1044.78 48.918 1043.94 82.7749 1046.6 99.5635 cv
1046.6 99.5635 1056.77 62.5024 1074.66 59.0054 cv
cp
.0862745 .12549 .180392 rgb
f
1064.9 117.823 mo
1064.9 117.823 1075.45 122.807 1085.71 115.444 cv
1085.71 115.444 1082.86 121.332 1075.31 122.169 cv
1067.75 123.006 1064.9 117.823 1064.9 117.823 cv
cp
.388235 .188235 .160784 rgb
f
1123.69 195.907 mo
1151.61 188.823 li
1151 181.536 1143.68 159.105 1140.71 152.172 cv
1137.83 145.454 1119.75 139.518 1099.14 133.611 cv
1098.99 141.836 1097.09 180.42 1075.76 179.571 cv
1054.62 178.732 1053.04 143.916 1052.95 136.059 cv
1052.78 136.121 1052.61 136.185 1052.44 136.248 cv
1027.17 145.714 1013.81 148.86 1007.97 159.326 cv
1001.59 170.772 998.068 191.905 998.068 191.905 cv
1027.94 195.922 li
1029.09 200.197 1030.77 204.357 1032.14 209.156 cv
1034.66 217.955 1034.62 240.761 1032.99 253.803 cv
1032.99 253.803 1074.46 237.08 1116.1 250.313 cv
1116.1 250.313 li
1115.08 246.921 1114.45 243.901 1114.45 241.586 cv
1114.45 230.774 1116.81 212.437 1121.28 202.896 cv
1122.25 200.815 1123.06 198.433 1123.69 195.907 cv
cp
.980392 .631373 .27451 rgb
f
1130.57 291.843 mo
1130.57 291.843 1129.42 291.915 1127.35 292.043 cv
1014.31 293.685 li
1014.31 293.685 1014.63 292.549 1015.19 291.047 cv
1015.87 289.23 1016.57 287.503 1017.26 285.858 cv
1129.32 284.687 li
1129.45 285.159 1129.55 285.584 1129.62 285.962 cv
1129.98 287.966 1130.21 289.313 1130.37 290.215 cv
1130.61 291.681 1130.61 291.842 1130.61 291.842 cv
1130.57 291.843 li
cp
.890196 .576471 .247059 rgb
f
1061.31 124.449 mo
1061.31 124.449 1027.25 154.748 1036.09 173.65 cv
1043.64 189.783 1070.38 179.889 1065.97 162.984 cv
1061.56 146.082 1061.31 124.449 1061.31 124.449 cv
cp
.0862745 .12549 .180392 rgb
f
770.657 470.208 mo
775.23 482.916 771.45 522.313 771.45 522.313 cv
828.539 538.62 li
827.742 524.854 835.299 497.743 835.299 486.307 cv
835.299 474.869 833.112 454.536 833.112 454.536 cv
848.229 453.688 848.527 436.636 843.754 430.494 cv
838.98 424.353 813.008 395.883 806.06 389.933 cv
801.644 386.151 800.588 380.198 800.803 374.682 cv
800.884 372.558 801.157 370.492 801.498 368.646 cv
802.303 364.291 803.491 361.129 803.491 361.129 cv
780.4 359.433 li
780.4 359.433 781.397 361.765 780.4 366.635 cv
779.407 371.505 763.085 395.932 762.488 412.031 cv
761.892 428.128 766.08 457.499 770.657 470.208 cv
cp
.933333 .658824 .52549 rgb
f
827.832 535.448 mo
827.832 535.448 826.484 551.514 823.6 563.923 cv
820.713 576.332 784.928 605.479 767.902 612.982 cv
750.875 620.484 707.3 640.109 703.546 645.593 cv
699.795 651.075 683.346 658.867 679.594 660.311 cv
675.843 661.753 604.124 713.625 604.124 713.625 cv
593.828 702.919 li
593.828 702.919 628.768 655.642 655.317 643.81 cv
681.866 631.978 691.828 619.376 702.506 603.505 cv
713.183 587.633 737.6 572.292 740.775 563.346 cv
743.948 554.4 750.875 537.95 772.615 520.635 cv
809.582 491.193 827.832 535.448 827.832 535.448 cv
cp
.933333 .662745 .529412 rgb
f
828.537 538.622 mo
828.537 538.622 838.906 542.102 848.688 544.488 cv
858.474 546.875 932.764 565.673 944.699 573.728 cv
956.633 581.785 953.948 595.21 953.948 601.773 cv
953.948 608.338 968.867 714.853 968.867 714.853 cv
954.246 714.853 li
954.246 714.853 929.928 658.698 925.153 635.724 cv
920.38 612.75 928.19 607.444 913.67 605.056 cv
905.874 603.774 814.017 596.403 798.503 588.646 cv
782.987 580.89 828.537 538.622 828.537 538.622 cv
cp
.933333 .658824 .52549 rgb
f
1006.14 746.013 mo
998.422 745.867 976.546 744.738 964.394 746.016 cv
952.243 747.301 947.525 745.441 948.38 736.72 cv
948.424 736.245 948.481 735.77 948.546 735.279 cv
949.639 726.751 953.048 716.032 953.283 712.466 cv
953.531 708.696 967.992 708.591 967.992 708.591 cv
967.992 708.591 973.077 721.66 981.407 725.139 cv
986.071 727.086 999.257 732.521 1004.4 734.81 cv
1004.78 734.979 1005.19 735.133 1005.62 735.279 cv
1005.62 735.279 li
1011.06 737.12 1020.25 737.379 1021.58 740.291 cv
1023.01 743.438 1013.86 746.155 1006.14 746.013 cv
cp
.933333 .662745 .529412 rgb
f
604.124 713.625 mo
604.124 713.625 603.273 721.026 605.085 725.344 cv
606.898 729.661 615.025 750.249 620.378 752.839 cv
625.731 755.429 632.185 755.402 632.183 756.276 cv
632.173 760.252 629.049 762.53 617.751 762.685 cv
606.455 762.839 595.575 748.352 587.978 738.155 cv
580.38 727.958 570.492 723.102 576.708 716.193 cv
582.924 709.287 594.146 702.499 595.195 701.105 cv
596.247 699.712 604.124 713.625 604.124 713.625 cv
cp
f
778.638 227.994 mo
778.638 227.994 775.708 220.703 772.327 216.197 cv
768.943 211.693 767.648 201.643 768.068 198.349 cv
768.487 195.056 770.05 169.924 771.504 168.091 cv
772.959 166.259 775.527 170.202 775.264 172.627 cv
775 175.053 774.51 196.125 774.51 196.125 cv
774.51 196.125 776.503 171.075 778.119 169.647 cv
779.734 168.222 782.736 168.771 783.433 172.356 cv
783.433 172.356 788.652 170.671 788.466 176.865 cv
788.134 189.218 li
788.134 189.218 789.422 182.871 791.575 187.451 cv
792.719 189.887 790.722 203.74 791.185 206.622 cv
791.647 209.501 787.881 225.922 787.881 225.922 cv
778.638 227.994 li
cp
.933333 .658824 .52549 rgb
f
778.824 297.206 mo
769.694 300.866 774.903 319.684 773.998 353.986 cv
773.095 388.289 747.829 394.505 747.829 394.505 cv
747.829 394.505 758.958 381.371 761.222 369.347 cv
763.483 357.324 738.509 326.937 749.418 303.086 cv
757.849 284.659 779.958 296.516 779.958 296.516 cv
778.824 297.206 li
cp
.458824 .282353 .211765 rgb
f
794.891 296.56 mo
803.512 295.733 822.881 299.172 826.917 321.93 cv
826.917 321.93 826.517 328.136 825.249 333.057 cv
823.98 337.978 829.002 352.072 827.901 352.832 cv
826.801 353.589 822.158 354.713 822.158 354.713 cv
822.158 354.713 817.856 370.575 812.365 370.7 cv
806.875 370.826 785.91 367.522 775.212 348.548 cv
764.514 329.575 760.083 299.9 794.891 296.56 cv
cp
.933333 .658824 .52549 rgb
f
826.917 321.93 mo
826.917 321.93 813.344 332.156 799.515 334.745 cv
785.686 337.335 778.204 361.387 778.204 361.387 cv
778.204 361.387 754.974 326.496 771.087 304.214 cv
787.154 281.999 828.683 295.116 826.917 321.93 cv
cp
.458824 .282353 .211765 rgb
f
793.697 344.436 mo
793.494 341.744 790.303 337.842 786.063 341.734 cv
781.821 345.624 788.366 358.156 791.926 356.729 cv
795.484 355.301 793.907 347.216 793.697 344.436 cv
cp
.933333 .658824 .52549 rgb
f
770.657 470.208 mo
771.979 473.878 772.601 479.775 772.823 486.307 cv
787.045 488.203 833.16 500.069 833.661 500.2 cv
834.607 494.669 835.299 489.77 835.299 486.307 cv
835.299 474.869 833.446 457.813 833.446 457.813 cv
849.075 450.67 848.527 436.636 843.754 430.494 cv
838.98 424.353 813.008 395.883 806.06 389.933 cv
803.595 387.823 802.178 385.038 801.443 382.029 cv
785.891 375.816 778.507 370.521 778.507 370.521 cv
773.213 379.413 761.047 399.607 760.549 413.063 cv
759.952 429.16 766.08 457.499 770.657 470.208 cv
cp
.921569 .443137 .443137 rgb
f
693.662 615.704 mo
693.662 615.708 li
693.662 615.708 713.49 638.852 713.39 638.905 cv
713.392 638.905 li
728.173 630.722 755.306 618.533 767.902 612.983 cv
784.926 605.479 820.713 576.333 823.598 563.925 cv
825.733 554.737 827.028 543.553 827.554 538.357 cv
828.539 538.62 li
828.297 534.688 828.698 529.571 829.551 524.088 cv
829.551 524.088 825.383 523.208 819.126 521.85 cv
809.055 519.665 793.919 516.319 783.513 513.722 cv
773.591 511.247 772.33 510.494 772.33 510.494 cv
772.055 515.249 771.948 519.228 769.86 521.614 cv
748.898 538.637 743.902 554.537 740.775 563.346 cv
737.602 572.29 713.183 587.632 702.506 603.505 cv
699.621 607.795 696.786 611.845 693.662 615.704 cv
cp
f
798.503 588.646 mo
799.198 588.992 800.045 589.338 801.03 589.685 cv
803.046 590.393 805.645 591.093 808.701 591.786 cv
834.624 597.647 893.455 602.813 909.871 604.591 cv
909.875 604.591 909.875 604.591 909.875 604.591 cv
915.624 590.104 920.139 564.181 920.139 564.181 cv
893.602 555.773 855.505 546.151 848.69 544.488 cv
838.906 542.102 826.945 537.725 826.945 537.725 cv
826.945 537.725 782.987 580.89 798.503 588.646 cv
cp
f
787.156 361.141 mo
787.156 361.141 791.17 369.073 800.803 374.682 cv
800.884 372.558 801.115 370.728 801.455 368.883 cv
801.455 368.883 792.968 365.701 787.156 361.141 cv
cp
.654902 .470588 .376471 rgb
f
784.978 425.228 mo
775.615 424.594 763.022 411.468 767.201 387.443 cv
771.377 363.416 774.39 324.206 773.042 317.624 cv
769.86 302.08 774.759 276.349 776.088 262.385 cv
777.419 248.422 776.226 220.29 776.226 220.29 cv
787.364 220.29 li
787.364 220.29 796.126 286.617 795.921 303.044 cv
795.718 319.472 796.116 365.266 798.104 377.996 cv
800.095 390.728 809.243 426.87 784.978 425.228 cv
cp
.933333 .658824 .52549 rgb
f
801.553 589.863 mo
803.567 590.572 805.645 591.093 808.701 591.786 cv
808.704 591.783 808.704 591.783 808.704 591.783 cv
819.698 574.535 823.798 563.05 823.798 563.05 cv
811.896 582.703 801.553 589.863 801.553 589.863 cv
cp
.690196 .333333 .333333 rgb
f
1349.9 407.494 mo
1349.9 407.494 1374.51 406.898 1379.15 407.494 cv
1383.8 408.091 1418.31 405.453 1420.1 404.738 cv
1421.89 404.023 1444.5 401.257 1465.59 401.656 cv
1486.75 402.057 1504.04 401.146 1504.04 401.146 cv
1507.17 410.949 li
1507.17 410.949 1446.92 420.078 1435.49 420.793 cv
1424.05 421.508 1387.31 430.132 1377.72 430.668 cv
1367.54 431.237 1356.99 437.042 1356.99 437.042 cv
1349.9 407.494 li
cp
.933333 .658824 .52549 rgb
f
1336.44 351.139 mo
1336.44 351.139 1332.92 385.81 1339.33 394.508 cv
1339.33 394.508 1322.37 390.814 1318.44 384.976 cv
1314.52 379.139 1336.44 351.139 1336.44 351.139 cv
cp
.196078 .211765 .341176 rgb
f
1229.98 602.176 mo
1229.98 602.176 1206.45 630.413 1199.78 637.561 cv
1193.11 644.709 1189.42 647.808 1185.37 650.429 cv
1181.31 653.05 1143.31 680.93 1121.39 720.484 cv
1121.39 720.484 1125.67 730.493 1134.25 726.441 cv
1134.25 726.441 1152.12 708.094 1165.95 701.422 cv
1179.77 694.75 1196.97 674.376 1206.69 669.372 cv
1216.41 664.368 1272.46 627.821 1277.7 616.384 cv
1282.94 604.945 1229.98 602.176 1229.98 602.176 cv
cp
.933333 .658824 .52549 rgb
f
1414.96 569.888 mo
1414.96 569.888 1471.31 591.929 1473.22 597.768 cv
1475.12 603.604 1472.98 629.578 1471.67 634.583 cv
1470.36 639.586 1465.71 663.832 1469.28 732.815 cv
1469.28 732.815 1457.38 744.016 1455.66 733.968 cv
1451.06 706.902 1436.94 681.542 1438.55 654.021 cv
1440.15 626.498 1442.3 621.119 1435.33 618.26 cv
1428.36 615.4 1398.51 615.042 1388.33 611.11 cv
1378.14 607.18 1414.96 569.888 1414.96 569.888 cv
cp
f
1284.85 526.217 mo
1284.85 526.217 1260.19 543.557 1251.97 564.467 cv
1243.75 585.376 1229.98 602.176 1229.98 602.176 cv
1229.98 602.176 1249.79 621.214 1267.92 628.006 cv
1267.92 628.006 1315.77 596.993 1319.7 592.882 cv
1323.63 588.771 1344.9 609.682 1393.03 613.732 cv
1393.03 613.732 1414.24 587.044 1414.96 569.888 cv
1414.96 569.888 1369.92 549.275 1357.65 546.535 cv
1357.65 546.535 1353.96 547.718 1354.07 526.217 cv
1354.19 504.716 1284.85 526.217 1284.85 526.217 cv
cp
.929412 .854902 .827451 rgb
f
1329.53 403.265 mo
1329.53 403.265 1344.49 406.443 1350.5 407.494 cv
1350.5 407.494 1368.85 434.719 1369.56 444.906 cv
1370.28 455.093 1365.45 464.207 1362.95 465.815 cv
1360.45 467.424 1362.06 477.253 1360.45 482.793 cv
1358.84 488.334 1359.91 526.578 1361.34 528.724 cv
1362.77 530.868 1305.4 536.943 1283.78 525.685 cv
1283.78 525.685 1287.89 507.099 1288.42 502.81 cv
1288.96 498.521 1275.74 449.909 1269.3 442.94 cv
1262.87 435.97 1273.65 404.278 1273.65 404.278 cv
1273.65 404.278 1291.88 402.074 1300.82 402.609 cv
1329.53 403.265 li
cp
.921569 .443137 .443137 rgb
f
1273.65 404.278 mo
1273.65 404.278 1249.82 406.779 1236.6 411.903 cv
1223.37 417.025 1178.1 417.146 1172.14 417.146 cv
1166.18 417.146 1120.07 423.025 1107.2 423.265 cv
1108.16 436.06 li
1108.16 436.06 1167.94 438.323 1179.86 437.846 cv
1191.77 437.369 1244.58 435.851 1249.11 436.327 cv
1253.64 436.804 1269.6 442.168 1273.65 451.044 cv
1273.65 451.044 1279.07 437.102 1273.65 404.278 cv
cp
.933333 .658824 .52549 rgb
f
1273.65 404.278 mo
1273.65 404.278 1294.86 447.765 1287.35 456.521 cv
1279.85 465.279 1273.65 451.044 1273.65 451.044 cv
1273.65 451.044 1256.91 421.018 1273.65 404.278 cv
cp
f
1469.28 732.815 mo
1469.28 732.815 1474.11 737.73 1476.79 739.25 cv
1479.47 740.77 1493.41 748.096 1497.52 749.884 cv
1501.63 751.671 1519.86 752.028 1520.22 757.568 cv
1520.58 763.108 1504.94 761.232 1501.54 761.143 cv
1498.15 761.053 1475.36 760.16 1469.28 761.053 cv
1463.21 761.946 1452.66 761.857 1453.11 755.87 cv
1453.56 749.884 1456.34 737.442 1455.66 733.968 cv
1454.99 730.493 1469.28 732.815 1469.28 732.815 cv
cp
f
1134.25 726.441 mo
1134.25 726.441 1130.56 733.353 1130.44 735.735 cv
1130.32 738.118 1126.63 743.718 1127.46 747.173 cv
1128.3 750.628 1131.86 756.108 1127.34 761.47 cv
1122.81 766.832 1098.39 765.045 1097.2 761.47 cv
1096.01 757.896 1096.96 751.7 1101.49 746.815 cv
1106.01 741.931 1116.38 728.61 1116.74 727.407 cv
1117.1 726.203 1119.46 721.751 1122.08 719.249 cv
1124.7 716.748 1134.25 726.441 1134.25 726.441 cv
cp
f
1313.44 312.12 mo
1313.44 312.12 1334.18 311.583 1337.99 336.127 cv
1341.8 360.671 1332.98 382.236 1329.53 385.691 cv
1326.07 389.146 1305.34 386.525 1300.46 373.777 cv
1295.57 361.029 1288.42 351.735 1289.5 340.774 cv
1290.57 329.813 1287.95 311.703 1313.44 312.12 cv
cp
f
1299.68 368.235 mo
1302.28 376.099 1303.08 400.079 1302.36 406.78 cv
1301.72 412.789 1330.33 415.416 1327.21 406.658 cv
1325.88 402.941 1325.4 397.923 1325.3 393.377 cv
1325.24 391.061 1325.29 388.863 1325.36 387.025 cv
1325.48 383.972 1325.69 381.907 1325.69 381.907 cv
1325.69 381.907 1297.09 360.372 1299.68 368.235 cv
cp
f
1338.87 345.414 mo
1338.87 345.414 1344.42 314.8 1316.9 309.32 cv
1289.38 303.84 1279.73 322.664 1277.11 333.863 cv
1274.48 345.063 1277.58 376.636 1277.58 376.636 cv
1277.58 376.636 1295.93 392.721 1306.89 396.891 cv
1306.89 396.891 1297.72 363.292 1301.17 339.226 cv
1301.17 339.226 1323.54 342.735 1338.39 339.074 cv
1338.39 339.074 1338.83 344.099 1338.87 345.414 cv
cp
.196078 .211765 .341176 rgb
f
1329.53 403.265 mo
1329.53 403.265 1347.19 427.359 1330.15 430.219 cv
1313.12 433.078 1295.8 416.193 1295.57 402.551 cv
1295.57 402.551 1307.01 399.869 1329.53 403.265 cv
cp
.933333 .658824 .52549 rgb
f
1107.2 423.265 mo
1107.2 423.265 1092.6 424.607 1083.82 424.131 cv
1075.03 423.654 1058.27 425.786 1054.88 426.242 cv
1051.49 426.699 1035.04 425.807 1034.95 427.563 cv
1034.86 429.319 1038.32 430.308 1059.2 432.241 cv
1080.07 434.175 1082.16 433.969 1082.45 434.465 cv
1082.75 434.961 1063.95 437.036 1064.54 440.057 cv
1064.85 441.658 1076.47 441.506 1082.74 441.045 cv
1089.01 440.585 1096.29 442.102 1104.78 439.04 cv
1113.28 435.979 1107.2 423.265 1107.2 423.265 cv
cp
f
1495.2 401.506 mo
1495.2 401.506 1508.79 401.239 1516.82 399.896 cv
1524.85 398.553 1540.51 398.789 1543.67 398.86 cv
1546.84 398.932 1561.88 396.417 1562.15 398.024 cv
1562.42 399.631 1559.33 400.898 1540.32 404.826 cv
1521.3 408.756 1519.36 408.78 1519.14 409.269 cv
1518.92 409.755 1536.43 409.73 1536.2 412.57 cv
1536.08 414.076 1525.37 415.132 1519.55 415.354 cv
1513.73 415.576 1507.19 417.721 1499.05 415.777 cv
1490.92 413.834 1495.2 401.506 1495.2 401.506 cv
cp
f
1305.17 380.37 mo
1305.17 380.37 1310.04 389.198 1325.3 393.377 cv
1325.24 391.061 1325.29 388.863 1325.36 387.025 cv
1325.36 387.025 1313.77 387.958 1305.17 380.37 cv
cp
.654902 .470588 .376471 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Set of people practicing yoga.eps)
%%CreationDate: 5/2/2019 1:41 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]Mg[E@(BE!Ifg@!!]78W-n2Z1K1n&TW5S,UOctqP!/NU1EbC^9C?f+RqRuYBKuI83@?$>^"#i61o]=(0)9"$f.ZDQo+;k$
%'.<hHcgK\>rT:FfDglp1p4*&=B"RllfX@9VgL&^U+8slbrKgU#Iei(I531DO:VZo,jdWIQqVBn%?[hh4_qWd]hgP=lRton9G]WJW
%(Vd<6]X[c%?G:mep0Vb+?bcC.TC&/\?a`b%^O#kLq:g+c^\I(@jkGdCPWu_YqUOoXrpoC$s7,3_TASu[;dMZH<WDbc]:<.E5?$E'
%q;pcdqT[3e^9YecS+;,ZrJUREZf$u9q8kl!qW70PIJMF*(LOk%qrWD+1p6cEm2)D0Gk]Nk^AhsCp#!F[r/9/[^3[nF\)6&NS"E^[
%F8cdWgH4r@1=L*o[WM,IIC.`ekADr`NS?Y*Eq?W%l>;r1qH6;j^AO=!0E:_.2ui"$MpG_Do6.]lpXO1grL`f;WE),$rq9^tqWl`d
%hu2r3='sXen!$O(e?@_Xp@>V^EEqN!lPF@ZIa[bq+7V9ChYlm(=4Yo??[n'diN)hDX>Bk8`U@0.:Qs\sYJ,8Wk&9,U2a4=VNP1fe
%luq+#mG#lZod1.)U=igM?[#5bhgTEI#a^AeFS+Ht>F5?>]2uaop#bF^j.CIDPlAcXhS&dPkj4mZLAp25glBjU)1VR@mJXfrlK+L[
%"WM+c^H)gnmIjVr_6"g:I.m('F*,Egpj-i\k)G@sf5H0%^HK=#GBShH^[QH@i01p'CF?c@K+!2,d9l0_j-.6,rO)Up([p40rP^GI
%r:]Nu+8t9gZa]u0o#;a:h9-c9p89i6iE,pN\+o^k`N(Y@qFAh\p@>[NKoQQ=pTio\?<[6pV:qQUl0!eNduF<+mE][b["%gZ5MMf:
%Dfi,%2uiI>p"M-=s7l-H`LG1krpIb;0>>];r:T@lDdL)gi@hq.U\k?Y3SAV?mIp!d(Y\8pC4CQ=PAAbdS:iCngaPVa+7.:&n`jKJ
%BjOmhI&k;rJbR.,:VYm\4D):D+$JQSX)E'[s(7&#I:nc>Z^\`+a8]j\fM),5G'r&?Q\(/JZsN1?hmWD8dW&aPe]uR^^"]rEq>0d9
%e9>igh7ieo0E5]Y]_Lca9LZ^Do@]Jf^].3`M0qSdgZ&"Y7Cq$YBt3'urptVeqtej0TC]UV5Ke=cn.Fs5#(-%Jh:=CJ;YD?)n)i,C
%8WUl4)LdfdNc*cTZ];go<gU5=*bIRf[i/sW61<\.eJgC<]<B!IVjkGHqtB^WDsU_h;8LiQq%9aE8V8bI[\MM:Hc"><4ja3nhI%B%
%K0F_Sg"<Wl^oRe%"b1oGJ,4p:Y@#'@h7FJ1r6q]BJ(PRYVr]%eKQ>M@eXo!H;@8E[#@Hm<T(cG<XA:iTT"\cn&Ur/5r8.+d=Rbt&
%Tl=c1.rQ&-%sfY%XB'j$HLI1"T6a=84ZAFo]s?bd)cl5gGg(+*ou1")rmT,!]_]Zm0AaBgq*u2A%-l`aH=M-nc#:=Fp!l\ee`kd=
%2/EeA'!35J1]i(>p9J!H(OghEnF7@_'/M>g#3=*Zp4lAcH#s#JI)I\p^%grZfrdQSq8rU$YH;mGq=f'oj(G]]o?I5H++Nnn++Ifr
%b=o6Dq[$V-*N^UeP0;'`a%rIKD%->!o;p'HZ$Q"STA72n>_9u)0#/QOqG!K.'.;PZe'1Xc^s%,:$r$(b^>DrY^\g:AnO#EmT&K\%
%d=osWhp=6qGl.?DRqH?#Tl5rEG+fhFo=oeQ;)WpOrhQ([-YHX-rU7ln2)kP>TA;_[I>3/^I-c`7rjfdk*rPVGI3.eI4?kLRqBZ)O
%rpe=T+-lW)()odD=jR&*BAtn7g'$VNQM^5LSs@@-eHB;tFg&JRqqTeYqQ)m3kA@Pl0K%9^gY6DJh7&15X?D%1;1$#)qp`=HI38@A
%n*T^_J)$[jc!Jk`Fl.Q7UX+D@n,'Hj34=t9jialW*;dO$GN4-7)is%TZpARm?0p]jmW6<f5Hk!lp"B0*lSJ=(r7pg`^HN2-H"N[=
%II)hUn:0%?`cGAYeFg(9h"LF*rY_'KoZnOBp\oHBcSKt8MYQqn5L8AR2ZM]"rLNa3F(eO%RXKAZo_<h3;6oU\f')?Nc$8ZsAfp@6
%a'p,!\\sQb&rl\Qd6@Eq_*7Ve\[0VhceujTq3_\DB/W/L<I@"0ka;l7%cCk>^'$OZd6>'rrk#YcSUIA`L4)*I]7"M*4kO.i./__N
%q"UV>A05S(FE'E%O2C?!jcB+K&,5hmGPC]Xgij^+mCqEnRonp(ZU+.qO8X$AIs6)qn&AYJg[Ej%]dkuMe(nV'ai91NeAJqkF,npj
%6oH!PVKAoM2B-Urp9G2eG43GX;;?"F2]L;d7X#c?%Eh7WL^+mlG;f;Qc%<X<O$Bof@E+fprO2%&[mP)g.sT*nb@c,+l#XU'BS0rq
%O8A*dH>`!ST+h`E'6De/D)P7tp&AY&qogDWSPA8&-FHtV/_LPZYUMg&0Eofs&Z#!QqZ!8EQ!oQER4?<j$9le^f!N(OIHKdlph3i?
%K'ntd-?8^nrH"Daht3o*q,>e]\(3oNRCrNHZq&rR+gZ<6[4^@=l\>q#3u\M;2C'><HYbT2M@Gk`K;RD]R5TlhD(n,Z61s#f?*Zas
%Cp:<cGj>3dTC`SbbC@1iBiJn5b^[b&O&gi-Ye.c_ZT7*hKSlNUA^TPoXGn-r"t#*hS0FCIp3C7KjF5sVVMQWl=q_(gjIXi=-HX:M
%fegMj8N&CZ75R;RRi30n_K<is^6DLY\B?8k;tsK?ke3f9(5;?>^#QVN\iAVh//^S85Q?fs^]&S#`M]IrA#-2Mf71MNE=$u8H.lcB
%SS)-M/$of?#q]b+ph1#T/qa1s_]Kq:0L+917i+@L8(1P#[W4U80l;fJE!`_]fk9JGNl>8H3>Q^Mk[um&)LJ6bdaG;;]j$!@OPg3?
%0MHD(OiIfq9SpbEhsHM>UZ^K5m5$0HDq4F91ljiMT)@4U5;XISka9Q;UE+1VNEg@/K[r=(,/;t#J^$42DTu#3ZMe!%L!E:0hG)<V
%9fV^cM#En]Ou8g$W&QD45;WSlS#mI9lBY$]\>F?gY1[lso6d[FhjP-2:(R$8>Yi[X*P2b#BM1kQE/eQ6JsWsLf^noBH^^g_pmYe%
%drEL\DU!>b4lHos<B_djX*-hIV.uSX/)bMQgG[+BHLnS5`HLrB^@RcMdJN^n2fE#MrpmCbhmph@./4r-&tduKQjp:a-B/+p"HW1N
%14>9S^Z1@2"T4&E!8n_Oq>d;7YXJ+J9L.it44am&%DkG1E2*a75dPCWgtQQ,'q0=cc+:e^\68n"U72Y[jSF_*a-27(i-!Js.@EoF
%7-_q+h`<u7\pkQhl'm(RmrY!/l*7]Sf.$,pg(4/H3Th?0Qa=Ep&?-`k+nb("ELg7rM!SCBn**k8Vo+V,mPe=@0oX>>4:S#[LNO%N
%F!_E!EXa6L%G[M]AJkth2ES4U90(5)]Xp.gS!b/;Yr$+!e%*,4pX1$T0'Jd-XRMehh9<=rmV83LAp2%D4.D_-c$?El>cDNC40MWP
%Y>]I.Yu5;<3`[c6=)po//!d:\>dZ%5*3<CK]<llmrSe.g$Zk!g@:b1a.8(>_-EU"KY/92R/h:;gg8*TjDQ2GDBCO=GmHD+:qej!#
%5W'Z[J,tS71,sUN+[QMW83!XRok<usHI_oCk$u-tmErQ2?hEh49euD3&O,F8bN`a42#H!Qs6/jghH#-$\(0A+O$>>:n45o"HN)^o
%$oqGY:CfO?Q1CHYY5gsSomZQ3SQdQSm!786C"XuuTcCcF%=JsSFoOsXl#(cblD*E'AG4%KH:`[[kA/)Nhb3/Xc+KEjRXNaWelUE!
%l'R0Kf7*;$W7cuuqJL_(o[Ytqf<[]k?e/:e=cV$JR^51n=3j=mSU9f-rF`R9qTsQY:LqWn,5[ANk/Cgn69du]k@pTEo9o]O7h=ih
%"$"O-2t,)_(dT76i=,QGSsK>QgA91Ha(u5KI>%SpJNrfkq`VfFG7==:aKMir(%+GmR>&aJhdi,C\HhnQe!tWZ025N:%SW`GW?G'/
%cQdk/H[7Z((.=qR!/k9\Saa[9P\5c:o'o3l[Sn#d\mrOT1XPcr"%`.8h]da7!Mm>G'1/uZqlPH@k7Eg$Wb46)m]@!6j4P=3.>m^>
%5g*9U"/A$.qQMd8;\en<S*B-,dfP@'gbJNO)?$Nm)R>?ZNA7)=VHN>([*3"*BOb\a0iUgAZ*/WCWuq6(:XiG^LM*6Kr*$^4hVdY,
%2XPMCO>c^YnO$W4^;9dD*Z&h2GsMTum.YnV!T2MJBchG:g/!!\DfB^m$?"RL\m1d!!C(ik/Y)G!-X2pb^f*EW3$3*XhXdLlJGJp*
%ltb@'qp)P8&l$$Y&W\@"h$51u7tgjDr]6g2cVG-AHL-S?.]sVN`Gn9^5NL.?YCU7pF\M+Oj_]2P`n\ikbru#VE56ZYn,!USrI]`I
%Il`C,ZGq="_0M)p*(&^EBWDTuC_-%UGr)cA9uYdbDTH`EEtCKN8+5bg-3Fi\nZs(:[kmnB2a9;ameHc=iX.aHrNeY#<,Ljef$VCH
%rQYV`K+3[Xa6,?_1'@3/U%uNdr&o,,O%6YNs08m`W]&tD[E?iI/9lh;2d8"k6:S;Y1d:EH&Zr_ean4mV_YQW)n.2JUbHV!.6b`!p
%*ZlB<j(Y=2@iWtX*/\h\f($QBg,$`1*^*.,f*AJ&JU*n5HXGC&fg@^um**I$++Z%FVGDjEi4=++Lkd@Xmci]go:-/7UJIEE&b#-"
%$g]S5]o@^BWf/gTMbSee3p6H8rB8lon6ccQB8a__:MV?-UC[d<EUH"pZhHMEY&i!&P$Rh(>`:U/]<I!b7\A'HHD!]Kn#\Wb)%Bb>
%Y`JMPZ?2Mc&jEP!2G_IF?h`o>EE+fCW"Es+ff6YseS&l02UFBuddM@N['odoL$=:J-DuRE4_&#Wf6:ugD[N`J)c$CHUOR`3oZr#.
%SFp)U=hf#Gn6<j6^LQWq>=Pdp"AtKWSc+jml*^FN]BXNqK$2$,?+0":'r?l2eRPoqR5!^HiRjODHhtW=9]7)]RfBkn$@heGYJ,>Y
%T2`FW$$uFH@g_;S>meN0!>tmBhueFL!,r4[E=gEIiL&*Cc2#3CmiEN6rlC&5c.o(1CO(9Xm5=<J69RMM2T_CF_>H%<o'[sVZJZl-
%Lcf_Y=$X7s`3n&*H6:5i,Dp*o!TkSjMdm%Q#G^IO`l*oeSc9M'FA=kgA*0kVp,-T\QS`kP4$C*6U(OJV:S5\nkJu*"^Rs!fBE!Oo
%rW7!r)fF-UN+]S"@$WaqEEaIO+.i;n:q/DWXUWUJ>BAlG9(]Ha#W&1\KHDCmJ-a$i0pM\+-^;oVM!sW;57N/e!:[pLs!Geba"d,E
%R.tYpr&?&&i0_#6o/#Kcd^E@&i,]QfFd,Y2@,1pfp^M-<^ZFfHWIt0jX!Gfl+smiNLRM$=?XNa>kRdCT:$oF7)VL^0hX1PE^".)a
%[agk;k,f)pU;ssr5C`^:q"JQP8cB?Ps*K1oYP.Sf2!Md/eS]hYo+1k2]D:f'T(Qk=&@[N)hg>puHhY/JMi2gCfO(/PnR:\T&uZ?>
%jNm;OIJ)sWV]^/.na?-15NfFmrquc_gXeAK\bi3^b9nd/rT*ssVuLRm7l$Q0ISH,cs+E3-2uL)?r',Y4X$"jHs-:;!^n!7$7a>UA
%1:C]D>Z5'BDI[2cV5asBhnS)`V;6$f&FT47g/RZ%J^bZlRr88[,eJWC->A27;iq-q.0[9;I*2'G\4r_W8Fu$OF?Y0LEEgn^-En8#
%Glh/eI`K\8:YV'rEpbjgbWW:abN?7/c)rkil?fejp"Q(mIP].6<la^aRFIZg;`YMI2F56%Rij(?N.Ops]p*r::YR9TY:8`$^q#r-
%PqIX4Z7/)]a4n#OFnJr*Yh!_k!Xm;&CTX-#E]_Lp^7!XmH2,"ZrH=p0eV',<d-P?0\=*:RS#NOYV?q*1j]bYpnSVuZ[9:fX9:_5&
%p52H,DU2%6l/gsTL+AaXbl^8h;V#iiG"J.*D(7NjbI?&:#pfnaiLlb10o'o%cFu,0MVhSN=$L?$egAsj#ujT@7h9ebQF:83BFn9I
%Q\)-jDnEP2ETV.+.U+ETS#ISVCY)1bgSkM<8S]OZN.%LmP*W2)5E53-f795/[O6!h6k"Qf$*KCE0okFNGXss+>'Q_9.X"9R[i85`
%]W:^n,h_=fT:0]1q*u-g?<2QN(&>Q'9l7JG0lUTjEFQC=Cfq9M2]EktLi1HVX)&DQIKh*^0<h;-;,`DpRh>@1lJXLQ?$\@)4aLbI
%)2kC5BQ*fVmE"_H9d(QXih"?=".R#FC(?juPjI^E:#*qS#<!WXH44)nTiE5W6QOe$9QB(%bo:7.3aR$7[mWdm`^\iZH_b'p%.hjN
%s$#]h055(MS2%<1kLHZC[\.dL#"F!K$`&H\B+rQq9AL1Xc>o+d.'oV?gAm\nQr%r??jrL>/<5*=cQ$Cb]/9Sl?>SUqkbQ&`Rgjgp
%YOR(j1gMi$AQ#jLX?C2/]9ka`R0%UpH]MSOj=d58ZZS!,$$V"/1K3>B@%(4oQFWD+m8=,b\NMB!`uIte&I::"ec[lkE1SXYk#kWe
%V\8/M2&`:A(AQbRZFgZ:4p>V3ghnR#S>u8I:/,$&K#Se-C@*INoc:Wo>1lr<J]EL+n<Yq2Lp:G>d0u_gZZq^?AfhZfe2Q%k*K?TK
%DNJ$P6HV:n5sZ%7qI%WK.=dl*pO0H+#u_n/dc.0A85UA)%F\VV\8gJ'UCXkpFQa]k.<P+:XNt^6aW7tI3jG0f$NYC[^L#@eHIiG1
%!H'C0<*71u[@rk%V:r&t9c%b`YPW>1RFDp<d:$/(9Ybe8:P9*AE'A.)Po&3M1/3Z^%P"5PJ5Toa\#u(@VPQo(.usa$\7lTfj4iF6
%Wu.2sC_bjp5jP8n8i@JAT"J9c@<&OAJ47fnT=mT<fe7SOZYiO\$rX^'XjCm'I-9</fV"F&YL@GG!PF4Ug\5Sq*7?R*<X$)S:;^Vh
%.Ug6G";>o>9BU?G["!:@.ni`V1)4VQR2o6%EZ+-_HI5c.Bb^3G)<Vj&,P,di0KZnUF_G0p>t0%m!n^5lq-)U&nCSq9Q-0r]>T7=5
%<+WI73c.#Hqd[XW?!u*T^+J+#;;(:QFsAL<9sA%p`=YpVbFFs;`rqVF"^$q,ok*n:"UR!8bSP'&j*'067:`HYR6lUo+6G"\'(enZ
%4n/o,NSU[!IlV:H%24r">Kp`bo//';(.-YuR'L<2mT>i@?)A`NU-fG"*lU">]=rO9K&gX\Q"g)2fa+#.nL^7h[kUTl;eeYQW`K.Y
%WFB6)0>DF;(>u8To3lRQ;hL>2Jq>R?)nJ09!N0%_^@q/e#U%UceT/\KK,:hCF-[j)`hrs3L)Ze.2\*16Ab5"1D4I'JLh8?t'RTio
%9,]/ierm"f_9ep%Pd(jt6>MHCA@t`rf%r?F5a-qBZ9_!Q^>"J$Gue*A0C3>QHT;K_',4-[N2I`&O3EgKF_b\GQd*>+$<6L%9thE<
%9H+n0:EA>JH>o:Z,FLJo@>AIIU%W9fURP_2MlK?N7b&K+[##6uA[W<oDpkc(9JXGEiuoh@VD_d?CK-g:Rd`:TDDl>Sm9So"C+@4+
%e>bVA]i;#_8q0!N/6eO9;E".Y"OhJKNW&08-VKA*K#<g7PR]&f9I3AZ#gC,;?qeeo*L?9SRQC3)N^/K"[s@2@PI1Z_ctGaMMp7t@
%[_lG?)IoY.Uiu+4MN)TpU)c:S'-&p(4njuAndoCs>J%H?A<*'P<?'t;8#bQ!FKB3&C/`4O^GsQj4u=njM'=h+^_LU*Uh%]310cWN
%N:##@70WpK*H,TJ9qUXJL7)G$`'ng4bHjsuXBE%q[F/q<J1_&3#UV4M_hqrUrKmrcd$tGJ.!C]Uaq/:LSH-NgD"t9'0I(45C<hQ#
%RoO5Pe<?Hc:H:?.Lc,E?ZV_;9h9G(@=2B$H)%m\-(tI&r*R1k;cF,"X!7_:qNHGhG%.j['rn;aJ9NXAmnClohA]R-jZ`1h,>n$h:
%2@)9!'6LuHU'W<.]QN)L`%n='(kUSN-sHqW3%i^Y"L,cA4L`e@n+jIBANhb)#IJ?&QYG'&Y(iNGA"(NMUE8.CS-A8,mZ,iS4_D$\
%jSr^15I@:ZGrnPW61`G1#/S(nPn=Sk:KDfJdH,QEK\Pdj9L6r@"LsJo3#%>%R\j&`mP'a]R\Gje306&:C%3/E)]efZJX:Jg)ekZ%
%7"qZL4^'a&g[s;,[$t._+EqlN)K5tf:!aMV/>S)=d#B\M(U%cgYp@<02!s&&rd37b;$(7RUg1[n>U$Q[ofJ@!ciZoY)?l\k,BLr\
%2JEI&NrB@g0Gc^e8#O(/o<%UV<suo_i-/BWfdX.Z.7!53G2].5;N`2>k!7VP<G#"UChnQJ<t#sT-6adhHN&]`F&)Qu,SEUL2D5Cf
%V^@MM0Lclrb#u3k]Z[07&BfW^K7G*m#\^rh=.#IpLY#kqD:$([B(R,I]8\3PPZ\aS@lK^V$a/+I?mW$PUZTU<Q4?9XGml#E6tO\Y
%KCSF6d-L6&HJ!=2_'<`TMTA8@NG30drQ>Fe/V^))03po06[RP@R6AE@;-5PobflLJ4>tI;U8^"02N)n#^A!NI`G%$)1T\B/*iIC@
%U[a$mLAR^mEeI(>kV9M$@i:u7AL?I^h2uI$ZWImbN.nhe[*WIkCkl$tBnf-7&-^W6Zs<1)@iOB@m:FIuBUG"db+s0XSXj:dVs[.k
%!d$ktF1+imnqcN:bGutL?P@*Q`q$WLW-9+`INIi9"C1#O,oc8O('uUH>P1'0cR^/YXfe+Xp+3ld7a^/Q<Q*s3G\0@%f(\8I_&#0C
%JkKOQd4G`0ep#Ts<02Ql$_,!CE5`"to]]lQWSr8mk1Q%j`g'HLYkq['lVR)(5k-)/PT,R#NV85u2cH22`Nlc(hh"hQ!6fJns1*F]
%#&7Pm1i4:(aQ!t!KQtQ65s9blK#ETQ8U@YX#RPG[P&0[b&8*tiQW%t,8o5Y2Ps^*QadOQh#=G$4<'))=N1l1I&f*qhH.ceUmiLcW
%lC_31\/>g!J#*4.N4G74,%oRc7nji7GVEAq2hd!;'rTZf+Tb51eKn`a/>nbo0h=OZQV!&HJ#@ru%'POc5RI?6/XlS$VY")s7RHG$
%3152BhLo[tRhSt(R"/\Lk=m>Y`)[#17+So937-&4+[c(AYV_]jL>3-F:a,>AZA)u"V2\Y!O28=tm_10<Sj-\c)<Sl5!nn@P2\4:m
%)J4ENA.@^R6(5?5dR!N'h)o?Y0bc)_MV$iV?kQ@ha!sYes#Q>Z,/aqN26TFb\Y)6m(u_'BJP]eX4!(lBb?qR')TVo$2d?nrc^6%]
%m*OGg`q>4tBjP5Q@13cW1.2jUe)3N*NL!`$Q#c[W!cHGK&FV[kCG^#J*c,*p4tGWFR"O_K3];g4;WE<G_(S7\ZgPAFNAh1,`JR<f
%Rn[*\'Mm\-)o$Ctk2_F4-3Z'\iNqrN_[c,8)(2X/+\7.!pY]/BaV=eZ?sD:b`)*L-@?*UG83%lJ>c;:5fTSu.m.33c%<`E6,bAme
%ENMaLQP/-q7f?TX)0.J<!\uE\(M8'"n&h0i=,=^oerOZIcCk9d!`5E<Jda066TIFW\r8Th"1m%fN2muH4#>M<c%m&\C>K7=1AUZQ
%UN6p"(I!hgjQm/6S)0g0``3jdL>%0,0L8#HA@fYI@CI[&4.FHO%"#]<`Il9b#u(Yir<'r'DjRer3kPl2:)MUTQm^l<)qnlP&hpZI
%]QM,P:`-!b.hV>.2P$a-D%n*<CP%:`G+H)ec@Jq5>Y/6-esHcd?4-pq\l4\co4kYNo.n0GGX7@UknueN-9@Xii3Pha#1F>_k1i)E
%Rl='^Yt<'4?0n`MB:mNL-J-P=:e:?koGkUjE<ZGb2%X/1Y1)HH(,^ek2Mt:PABZaIE.n%U&=e@0VJM!T=NHZRc%ceJ_[V[<5[e`E
%R77+fpRMa]g^X?_3/3i9Xt,0/Rb"O:H`[tg7(<JtYi^#Zfm(NYY>"BCpUQg>U&b=0gFEeE7+2;)<X>.:ZNp)*N=e(#$=KABUC`_+
%#?RTpOPuftUWk!`=Jm;\;Ur/W4s:&.@jYU9P_+Yfb_C/4FV^OK=d=HsARIZgJ7]eiL@A/QU&7%Ng'4X<RgcV'&'4em1C&UL%s&*q
%Bg#p:k."Orfs%'[Z==bI+ZjDJV:9>20T.fR?2!"rSDC+Z>!k?*G_EmY)3\#ZJ-1-JTRNDcl%g$+<tS\c,j!so&4*TX,fqmpnUAS9
%q^)MNPV3.>%9:f1>Jf>U7B6i!AFEq'0uUd@?[l8,]qJ]!3&%aJ$ZMFca2j]e\`X5fi7TeE&KfJ2[OJp^8YgZR>pBefAt)N=3&!#*
%1^8%A>6oFan.UuFXpBUJn`\D0Z<&t59VZAo7/1a3"YAL#CS&o0gu#r)i3[SJRJ(7ecmI!:Z1Kn/l\Yo"oKaT%K5<:XS>qamH$:?h
%(?g^2&E5T]Kk7*^18C^?P@rPm2!/4p6.4@e#WMm]bfN_Fr%XQsHd<-\GmI712*>FhcghWT(gr``\DD`jJY4,nf%dL9([$C`,M]OW
%I@aug+daXbT/93&(Y\gM/m,`H\olj6'*ZhFbKRm3L<Ib+h)n39T6qWK7jeE/*iqiP$Z\M_.Pm#$5\+/.cgNAclN,l-$7@>2CmnDu
%#,cJIA2B/QU@N=EeuK^"hrrK3cc3b-6P=c873OOD"B(7C,bf,%0L1CJL8557,Y.0LSAZ/;D&srZ!Q/o+'Q\TI)S#&5>j+^JR)&fh
%7)kFqW`@$S)8R6\UeE`BG;k86%%'"f66e4"4Lb:a%Yo!\7`^a#5\^'=D*A3,).3[dbOP&XKLJAREE#tlf_U>ZXX0p%/C1*Q-,c5_
%m:*9(%<`eu'1g/bRaub[=<U(Z6e4A4:MkoX?"[@M[;hc#0Fjmtiho;+L-pNr;INZn^]=q]&]5ZuBFG#fV?RuCI\`k9.FC:!Yn2Qj
%4=?jG!oQu*HE)^d7faZPaM^UiO(Ym+J36rA]Ve=Jg)qDXRS:M9Zmd+enl,;WKOC3PO>?Kuh4<e/3B\uq8WPkDF2;SFl2d[n\&q+c
%Y!>Zje&0dJP]pq9eA/`6jF2pT=>;;L'\dcB9joDo;-^2a$*Z:BXg.pD'IF0td.0#hX\=h#^>,UL(Bj>O)V9+"eeu!u&clA?*7aZr
%E?ST\PV:g#H;"J"'Ve!<I%X'3;GCt2p,H=4Q1tHe#>5pJ;@G=kP6D>MD@<$@:Ku(s+"Ok?LU%MHltY4=kba2ILH2#A.bB@$^/Qtd
%=O#%qOjaO9/D&$q=jIn!>ke/FSj5\m&\]u+LH27!:^:4_F#Nj5m8d.?2'uXX@3.39<t`"iW:CYS@HLeAIiCZ6+Me+@#p**?$EJs5
%@0idP!p"Q0*ioqgR$sVfi"E\#iY2)NZuM3]3??dS&H'=a%$MOo6(tWh<#d+8Xg?D0,31eSjUCNA@jqOOlh';EKlB)OOmWl7E"<i>
%;PE3pFf;JrRo7upn'OSn&\Ik#36Y=P<QH?%.UeMnVhQ'C7GRBt^^A(7OlSt!9!GU"eeALui+uiPU]>IZ/HZ\$/l=Nia#Yk(5`JU!
%65*rM+IH38LWG9iZ=YW.R(%7Oh<7PK.^+hg;KW\c%_*mSK1/TUpM,l^k`B8!KKu,tqc^p2_6_&lH.f6SBu5AC)F$?C.M@:J_Q'o:
%,EY&XBDQnCbg`piF6CVaR<cgrnt+h3Y\^'6pp^1u!l'FD\S8sEbq.+'cI<-@n`O4M.,9"li!$a3+n^FnAh4LZ+ju9&+$O%0-9ZR.
%;_^P)GaO*/#lDHJ%DhTMWSR[76mRf+b0+RtYZ!8;.bDlMfYH8lZ;p*l/RPnsFZE-*#".]&'PgULD\^Y(Gj!&0[<4ncX2:b,&tH%\
%rKrZi)dXOM!XP01LkIqqitPiGJdkd/H7U5kKS9[4?s)P^D8Ams;ZOUgQkD7#?ru9[3$JO^i'N%3U%m3O4`odgMIhM!&`O&*6\3WZ
%,FW;,S;u'S=iqfSJUlSd">Ja_J0I:<'41C1&W72M,Pb=OSjOX,'SVFk9m"<i7]$>n5d\dbAlKJ)-Ld]g.!LC9\#.LlJ1F.*'p(6*
%dDbKu3,R"TL]qRCCiVcHYc4Nk;Q&3N#W=%>j'Jl%GQ;6+RkiR8BuInLYVURS(+i(RK=c+=D@39<;beO!d@u!lpfgj+.=dhHm$c4&
%:C,<]j5;WS'/n'Nngng&^C[Y#54_a'C:0OUhp0MXl3o@I%,&9$7gYr.'"Cn9EBHcdrDC-<^BEKU?C;k'9Fq\-&e5^Ho[\;ijK&j4
%4:3qtr(_):6)j2o2YB+J1]N?Gb>:9.R57q:^HBjD$aC=%6hUD^c@]1sEi]bA-?VliL[H3C`8'/%#qY;lg53l=*gOZ+kDImI0SK9E
%bDLlcN<,!j-81-7jPj>J!X@s>=P9q8Bgs:TbRjP7N6p,[driMkS&[3En-,:.SDF\l0.[[E(p3G=Bdl<i*EdmQig<(<_@ClY[t>AA
%$".pMGT^RQ?l),"<TdfQirGHolSO2,+JlL#@/G)?5+.Lb!*2$UT?E73>o9YD"Df=2%7UhZ#7P@_Klj[)-bR4N:_F'5%@r?+"Z@pY
%fjRJAp]4be@EPn8L3mrc2$?hZ+``*uJKBJPX<C%q@ig^eS<et("PEEi*q^;PHsejVW;puu3K`AL!(@OjT&-k12qMOMiD&fjXh&c]
%BISOpa@\58\Mq(^J2Xmu'gp]3Jl_e[pGE?RAf=UPja!D:c?\G)TfdN&!:ZQY_#esMd"TVKjo_`0@^X&LNm);]1?o^rUX(_1@;&T5
%%Q?7.O0O$;'C(tt(P$Ui:+!=b6-q*'M(>hX*<Y]Gm+p67IjcHK*XEV_L1#_&2aB`IH:#\De`Lk">_h9aXp2HV/C:5*R@saGNTl!b
%.j09U4uL/XaRnNc?"NH29Il2S7G.sD:Z+D\#f]jK"0BaGWZ2eKL/.s*2`[iFm[Us5"^QZOq9ql(cmdfl3<F80")\;E=cA'F0mm?l
%6O;p]6HU%c"H5r^i#p`K6.LZj87Pq@=#gcY?4m4iTb4=\ILHYRRf^2CFl1e1OVQ,_o&R$rEXfSu\XcS&[-s+OJ<ZBR>hYVO!o>^H
%O+?&A.a<G51LQ-)Fo>*Srqn]^]mKG7G;has^VB[<e#u"9p"Q[[)uJ(s1Ipi\S0/(^Gu_iH+VmHH@bFpjN[Z8B^haLU@WZc:M\q'k
%J-09E)+o(e#=5_]CgQYLo\,FY,b+j[2TGH9=/JgQ=AFo"deaE/RiK&50ZS0s6Q[b[?!`jF_0-QA4iD(*3)MJ##6fPmZh65!)-p[P
%;`00BL?.I"-&4aZ#rgOQJoO&;>U!kVP;>-LWt5s,6OBfAH;oG@'rO;`IC6^NeSYhU4$5`e)Pf_,!:oTob<s#qMjS8kE_,gUP2gqO
%NbdL<$r`g0B6hdadc6m(YX8[5.Yf-lf+Op4o3e#jo9bE-?.hCK=>OUY#BV6qS_psnqqJq'Zj%MA@EZSFR]>Q`g4nmEf#:O1TM%2H
%`rppZ[4e"Rg/nD2pF3l]:u&IQ0sin0n;qCDHeeZ5]enP(V.">Y>5@CQ@`<#@AFE,FU*>25L[I]*U2d#V=<9/b%Ug-MHui>*aJe1e
%nuSo%_7@Z$?K]_h)P5<K>K"TB;jSA`/SLZ&4%IeY6`'P%Q"BJj*"HI[1AaoSHDF-IHo:20/:9"8,oXDC4@"jcf>2LBq_IT;D;O3q
%I?sr<FeBR[^r#q;.j=$\/'M@<./_6<GtJSs+?gP/cdh2V#X$SaQ0Ve4@DTqZBZ>]\aY6mP;Gb05N1J2l2]DkXI&%B:D$o>t\a6c!
%+;_*Df#oqS(EG4j@FB.YFjGr_h1h[\\d%.TNs6f&iERHJJ-.pF<\g8e@]Ne[_oc95!ZXd):2Wuo:>[&+=&"2Qm@@ZA[3[SW`+@]8
%m6qmRB(=gg+97W<qaBfRm"Mb#o32'8<QJeY<!$*sCaag"%Q!*ps&;c4_r2b@M2+e4fS@*peP9+h_U!#IFf(kVRq_4tKZ7I!1M>e+
%c$H0cmjGZmj+_dnqS,2836oI)$e]qBd/_0TZY^^`R^-he0u8WQb%pbC>WS=nB4acQ/l1[2k!=r!j?@0]M-0hl!V8hl'&-ECI04PQ
%V/1*/TQB<./kq#k?]fW3=cMbi>TOP4BZCf.CaqK+o5l&P0O0UXE&O@ZZ6faj,j;[(HXXY+\jh!)Asd&G>JpSNZ_.CJ6g#!-gU+8*
%'YN1T5m;$EQ)pK<Qs38kpXL<]^j']AkP5m]N!B2TF-spFRC>3abVMC2jm&7'`HSIP<ONkN"9hc8)!f`9H(^fEit#iik"!W"&3p\T
%HIcoJSo.&Oars_do*P;F*Ch@)>,`Xp"qATV)0'V_'<](so6>?O$jYie8TE8DTQQ0Zh'+:3%O2:b.2Fg-XH=B#-V58L8O=[GdcAU!
%itY^A$U[TY`1b"6$/`(6W=C4%Un@4ug[GIbHm+*8]ul7p5.j)rqunZ$JVA.6#U(qAX01!6`G;E/QX&`rLc)W(E]"ObNK?9`a"rQ@
%6<(T;+;9f5&o35QLE;g>)64"+JES3\/=fGeLgO]fJE?tNek5%T%!e$!O96K]FWG7s'kSO"42)KgGD$5'aLE`#VODWD*8rb`qu*bD
%0bfJk_0VE_OdP0.e`l)LlZOucPEPh^MXO^35J/efU&ih?H(J!CHRT7W"-]+6#b[t2F`P)&Y=FS)*pCdEN:Jd!2UI646Tg%(YW?E`
%H([#;_G;&cm>:J[-8Z*^E>[Yg.0U"^HoLR_PiFkqa,]cHXbt:p^dQRY2Y)#B@?:g?k`Zn)l!kFC&*=e9@WHcVJEHCVXqX&4+,H^&
%9E;q)*Lp.m];1q$DK+Tt2F`a0:l-l&iG;SL-'Ql5?Ic&'Bor]pEX5Ke_'E,`nf?U*7`3A)cF6/O]Q*`YP6YpIj!fa+(RW$cW!L$j
%/H]BPM!V>)5)@?I'_W6$"<g)0XJ$d+oGS%/7PL#FPu))3!!@h@6'$/WLFb_qd9*03"bbW<8E7-9Ba0cCii(Y5%f8LsK"O$MqapZl
%k,Q2SJ7_jW?n[$I.iWQIg$c`D4L\UPe`oH'%9^08kRZ'#"I4GE+ZkQD#ul#*-WEq5^2aCOmoiC$'U'`qbK(\32'&2-eb[)9/-pN1
%aZ`%+&R%PY+u-6<i_b6(7*_I'ds2l3mDrng-V0r'(`NPuHe4WL6>Pr<*aBahnY5*0>'L^_@LCe7Up=arkNo&GgbcZ,+H22WDk^X]
%q&IKqRpa*p10"jp7)AB6EZ5<5!(](V$6^N\!CtEbTVA)6UuPj2>_p[[1+=9fX"pgikuZo#jZ1!cZ[&7%lfs8h4GE9Z,L0uG0_3M6
%'Jo1HA4f%rbfoQdNId<2CB=MDZT)4o.^$ca<ZpCX3!/#>ZDoBU$%.T6Dg-A`;WP?5h^&GYb:YI=-r_gF4I([W5>"jODcbbR.D\6$
%E%G8eU2VLu<1q.PO<_:'`hkCdQbU/W=PU%=&P-R8mFc,:SVIBV9J=HC]iG:<i[dpLN+d;&[+GsYLHSY76h$P6+N6-s/<e*o1&]+:
%XEU6`18tJ@QuG%VRb.H>onZ:Oo<MAgjh(H*2E[.$G<o9`&?$NLA;Qc,^ol/INK0r#g.C)HP`t-//=4Vl2>jPY>*\4mBU0hSq@R,V
%lLYh1R8^caZDoLW8oAkfQ7YRETh^M9HWr_Tq2s0X97r"oVCRZnJ:McJ&0SLc_$[80>'6(Re)E91lc8CkbZYhHn^CSdl"ekDA1WU+
%1r'=[=GW*X9,/hOctT`;]I]-0=%Zf]:f]j0@2[$O;!U4r[S]4Z!L<phkm2]@(o>.Ee*X_+'M8KL)>=k:9lW[r[Q0q7d%tX='ZKm!
%-:%M:/4M5J,mo!C6HOe$>#?.UH&.h4UWX!j/-Hscfe[1NE-s%$2![7.)Gl`%]e"h4"-^Ia4(/0/$NT"u8K*ZZ8n<o>7k&$4@`k]&
%M\Or%haf`E.\rbI9r`,t&lf23DM72FQQP-jKK/K1'Ej@P-!tdCkc-6tf6Ad2\>hE`"urp6FEBDG4(SqYXLB.kq!)j5^X:mKGRZ1R
%X#)/X^>!S<L,l9#a\dXZ)g"j1Ck]FBm"qHfh?VN9Mo4#(WVC5YR@QMiQfctq63q_t.5us*LXUQDiHcn[8m'P]SOR,lMR$n^6VpW8
%'f9)i:%gf&<raP;jG"nFlpQ.Xe1dgjnHTBcZeg9PCi]_r'9Ro#!LqpK+[Udq&RpE9]iVC`gV(str*'';!lc)\WH2Q'P`2ZP&29m2
%:@8^s:+m39D[,Yr(kT*t@VmrAOfq0u#3?'t)oH4L0![LO1t%R*g2rB2.Kj43^'oR*rjJ)5emYn3Z`'*(WBg_5:tO)=hO98Y+/Hj8
%JqKgPW"Jno:)pcn9Y$9"=B]?WeK%tOah/icI=<":cnr8X!a$Rt#M5faYF29J7D#Ibe*n2t^JN>M6-Em]L%CG(,+&pO3Wu3a:3.kW
%(*)jh\lMs.e6/q7OS?*iKYZufTm=*WS"!m61[t'1YamI[90.6'WXsEo!$"l)2Oo#&jE$1q^F"r%drnOf_!B)$2k_?=)L&T!Mn"_#
%K<>ib7,q^UHGoc.4p6=@(KL`<!;Tah#"nr@#BF,Na+u,u[AV"jfUbXM'ne]u;2AUKUi489XN=#q!QC`HP7`43D)LG/FWX`\:(P_T
%q_;<Q<sj&qU&g@4GJn^VO%ca-_fZHL.Q:IkB4A(V9Q'KM&9$U?3.:WY(pdV((mtFE+>`3bEm+Pm+EPdmFE1I0SUjkWA!6O)^@(ST
%W$MT4nQHLN@N8]M^<U4e6]-SfQ#q6j>_mNj=bSWIT=4kb/:[msRYiVrlpn.mUmtii.d5j\#Cf&&B7j=3d1#1H&qo4C'Z^XFr<2lG
%US6uj%N.mk';S&'QS'%+H@TNIGrQnLM(-.eP_l-idq-+re_^%_^]et'f>nR+Q4_&_W/2)\.jg=TW61\&&P\-<;jf_7G6rm\,d&Q,
%4!EoTA8S9c(jd6_9R$JiUUGsaG/cO.ks8+Xa0N9kN;GT7W_[m0EE#u^"+ccmS:*ff;YPK/*ciHU]#*at%XQad:s<6E*oGGWAg1cR
%d2V)aAMs8[&:TTO0NK'"`i;mu5iXo4\V!7m+fG,Y0i_%[+F`%b$%CsCn'umu?V4:c<EWT_&lC#1``h,:.f4/#PX0Sh;C#nSi?;0G
%!-bff)0KTt,/l%6hPYZ#Fg#&P$1_!-m($.>#q>p4!:N^DT.3]hb7L4Z<qY#F^lTL,Zlh_YjH._\f\EYT;+#=A'S=j49S=CoFDCia
%"VF#oRG<14@6T1oi]t-Bb(E7,8)A)Ddcd[`o^IJPAcaC\:fmP6Mg^,kpm5?:o';WL]R98"bKiAW1]1,m54DW,?G60qiU%Grs5`Qc
%aaF#EGAk7qip#:^btie7oCm`i+5^]or\r7G5NRhnTQfhcb'o<&Rh2lH]KA#`%]X$WX?a,mG-!LmEIl(bp;MF7P$cn!O($K=[rUUo
%L0m-e=L?+fD=,W,ob]k0F*M?G@t9Z_GNbR;pl;6]b%#gsWH"dtk".<7(cK9sHghtuiLT-F\mo+u;)K,*a,&i/_,4a`%1"a`h\4Tr
%d,1gg7<OQ8d7k_q@T$;ml?'uMe+$R5%c7W*"hGt(Nb`W`h$_JI%2S*!3Nb'_F#d?_CJdg^Q0,S;i7;%k&\i1-8?j-n?YM/Ea2!=b
%;ohOjR>A'2+?;n.8/gI2EK!FZ0);/"7X6Ub"Hb8[4s5n6"NQ#pUc&^3j!L)=`GWogq\*jW$KjOMNH#i!D?R:#mah+.K\3dXiC<Jn
%?=VnO$iIKl225TgcA=?ZEI_4/X7>W=hi$!/*tGY=;]<PT.#t@fo%L]PZU&8`FkWmO&,V7-q*#<Ij$$9*d?nlMfQO)INZp&f1IcfJ
%E,oHO)>>73]5SY*,ZYE+WJp^nT.cRjHhE9g1Qc\Oi(*8RRhN\9:!a_QYLU7h(o+*Q#UdT1P'ptj.l`LX4cLtE1!X4p[g7qj(CE-O
%0rutZlPKEWYq%+=m)>@BE*e10(s`[fj2,(10GtjiTIsiE0GHoO(NY]a9AY@0H?2_;W/J2]3X7C=M\kaI6=!:7)i4j6jE/jS^N(Lm
%:@.)P:kA"SEJ(e=c&[s&0Gg5)_3F\^\9L']-$Y>*ZU"l_]Z"-p&NIDl(/$^SU)/Q7`l#OSau1!q?&4D!D@kfHhI7B`qm`08kiRT-
%G^:Ji=GoIf60+3(BMk/DqN\@2WWG9gMo0lK^>eB3WXE)eKU?#\<f@"^@d66[N9=kLE4aE[13&kb)"R_KCI!)pmis+P6rZ;-9t.QU
%ME-K/'K]#DQ;\XB(RANl`53H$P2\AgkSkedbm@3!*6$/GMnr7!L'LE#TI:#\"1E!T0GHI,Ws(dDb+<UN+=P8(9k9t'@j,k;!ruo1
%-ROAXN5\O#])n;tR@KWq?"kj-ia!GE?m\@%*TQ>"9[#9P4U3\ri);fM[.8Lea+]hhHIYp?&q`KQX'C4s%'g<0j%;q&PX-&#0i\pd
%&b]6A,r*,Xd9RjaSDYn+6=T(XJGBj#ENPrY^<dH.=.I)rN50WhH]SiWk%^c$/mQ>:X(DYfip=id0G-N,k)QsL6^k9=O1\hFLf+'N
%!0UH?_6Unq@9TUY!F*hp`5/Db*5kMaMSG1rO-?kuIoI+@#Ijs=1%%HHIjZ"L.-8LtFJ^-l7E@S^MHSS*?8`Nm,(0q+jNKcGK)F'[
%U)ld8]3:+P80ku++HC*kiTBR;dgY8>%ME6<WE!KG#Nmd#V@i,&b$f\TahaiV!ku!Eoh7?(oKS^PK5[-`(54F$&R8\hCr7Y<`.A_7
%_rc<.oddP,)^:!94$BNsO`cGE&5:""1#>>9XEoUJC4H]<0^KjJRmAh=*Q-B`ZOGmgk_onkE"gD^:^eR[#LbgQL)[.kEk;qm6g3hS
%ob>,-q$4SeZqA#P$c>FY4f_Kh"&=[J&^8+"VZCqeKif00:ctuR$3OTp;dQiJe[MBbYR2%XZ.28m%+Kp9Lf-Be";o;Y67E<Q99d$m
%UG,sY4KT8(K*%:$qogDrgg$h(nHkEKZaE4LN:1JH/":LL,0C9KiN+/3:^Q0Pd]Q!TV.a[,O"f#7VG\1hE%,Oe$]?^EG?NG^*5oI6
%"Vs,fDYCWsmQr(Ulpi[$#2fdC_]TNI3"jA]66L*>Q]*0K&&qMGY&_.i<odGVO9_P,U@j.#(p:d-&*i(Iq:$p90IZ=75DXs>7.m2^
%hPgE+Uqp0F&G?IV@,NuKO=\]88pB72(_#8.X;d'OGZ4.liX;@;C:_gs,E'&(`>4CnTXq(RZQfc0$SSfckgWuIk!::87);f@dOS+4
%Q]>6+_5QXOo+imnnbkce*5^V>Sr+";q_./7iNo-oJl,o:b@2&QFKm7/:-@/)I\m>[@B]j/a9gI(jM3t?0&47+RI%M`J\a5EK-lt:
%2`fHW]a+7O@A/8j(cW41M[)'-7[RBt=(Yja=&E*^2=Sq2>ERMu2t4g2i`*)9^o3&8cm>WA@>C,^R"6-DDXC%)$q<gm1H@+mN>q0&
%712eM]KBU+[b6NU&S,H\+(:0S8:dHl(g=J3!i&>$\3u=m7WNBT!be<G%"17s";Y3E3[fP<VsFd\@"`I@\.Sif8e"7Shua1`B58gW
%J>%r\)^?.W?n=9f2[('QL_s5F'h(Fp7$Veh!m\N6QSSZKlC7,E_?&RV/Ct7?E;$A;ci><H/TN1nTJhL`c6U1ZgeaIZ,f").+hACX
%#?2>pSI5U?#_N-p30l;I@K:#@OM'Y-Ka0.9_^>/.JQ75@%/O?/SkN[-qVU9e[UB+e?KWBj^H_c16Zjlq,?$Pl+\qtD&qNXF&]qj;
%9RH5%r!WB))CTi[U%(Ab*L+8IT`gm5k5D-]?Oe58h^@:<pjV3#>sd`QD-/ja>dV7Ac.p2H7RYt@cd&o4g?2utf&'H?Qu(1L!\c>4
%Q9!@lVW,_Z7Ji#'QnJa!?gOScI6'!f^D%>h*o+Gj-n>t<^PN,WH[\<Y$^:iWj#D,Sq%p-IPjiZFXM:_;#C!EOMRM&le!-OLe,u)=
%$gTI&hutkKlS$O_L*TlN8S$S.anUDF5qE(>BDod[_t-O.AbZA6>SkgqEW+I/OT+eSM.$b>?iDN8=n9BBQA:e=#3deI?sB**kq>,S
%MY'73Mc>s^@SZcX[Sd/Q8:NK"R"@D`r\?o48?6h2P%U(H,3SmcjoGmR?9!FS#@Xlio,!I`<*aJBntHQd?:]QE%V!6sr?Y-q<4,$g
%9*rZ:L%Ue1$F])u^Q]:](p(K6Y^5?PqFeD)*s3ee79l'g?]4WEnO7$uc`Fn*e7i5Lm4Z@I9#g\NSBZVm(YW4M<>7rS_6X=P,pB$L
%qMWV?Zr,\Jo67Vk\95r$*nK)^pkoNbQK$-_Mg,dp39Yf/p/2of1]HB6Pd\1Xrm'bf*e_9a3KbQ\IZ]pe::#Gsr?</Z^#Qb!IQ6t3
%Z2I!SB)2ngn&Q!Y$a*hB`5q.A^QCUg1B!r+^%I$@QgqWGHR=%]hgq;!SmT2j6,#YWb:XbUe'g3q7FBEhcgPC]VN^p%'#q_UPPjE%
%XQD=Z04[N$]Spgg!fY)Z__5.g[rs(m9q)g)"i2jEo,LhoZ,Z&W(<\MO0D-7*Z@h,&/^LB'1]4P`n='g'0>mRu/:q5XLWLA9^D&X^
%n3QQE'N"+Ri)_q-R2<[mZT)?0\.JStWG254_(Q1UY`K++0A]+@WFpfiDGPhn6nnO*j)a?B__9buFb==a?V7TA42ik2a:[kNMI-XV
%]spo:65n(`]-^q;@MKTl'Q?RR1W;#pRfi^O`@n]EBo6=,rr<f:X;)P3?f=$4I_kQt_cRc@*5<r$M(UX"O>=!O1qs(g'[(D=%FVbL
%r'Er=A<?^eJ<`8gIOX385A-9hk]5&e43Oi$@@2DGr$&1:*HkleKp5>"Yl$gQ;O1_dV1=j!B:`I%XXSkbQPX*7VXs^P^l"HdcS,$s
%^fprfY:;o$l)_&\IBS82c`]6*gWSUP`BH[pe:Zp#W:&Zp]Ecb9Z/25P(<3+1nZpXAniMX$RHBi6-(;cZ9>l'P*^S@H%Gq*mbHE&J
%=nrP:8[tf7m!rL>?0L_bb:a;ibu:P9772>G_.e?q.A.b81qsS0o+a*sOSJD.1r#8/5&d4k9l'V4BDLYsa>=bc^VKfoks]Orb:d1$
%el]0SEj\r^fEq(U!\mVuU%ouq$eUbQq8J2jljK+d1kqA?/hFbfkrX6sZi"9g$/cXO^T%#]U0!XfQ3i7K'!rQ#90mNejd3tK.;-pW
%^Qd0t$^P-kr%VaS]k@&2>QUkW9lTl[k#^UV\Lj7WkZqYsS`X"k@.%*b?V4b:"jJ^':4RN7r'J21lU(3d'`JYfJOjl@-_(^9?O;%l
%der*Rb]!g305$-O4DAtIm;TqO")s#p+"C0?jHk/?S/-`1'\(dYQ0/t+bnHW^Jn/Pe4]m/Wkann]8U_i<S;haV(hS"\nI*u(XNWK<
%0/k1V(n%)1h7:;u(jql;?0Qe3^(LdKFmMlMlb'p`=L]AV^G:;/D9HL@3l9)KC>\f8VY4:NVtM.F3X9:NG\gNZFCt76?;%sA'&.NT
%qYJf"WGdT_daoP3\-])**?5#='D`1l]+76cZ$E4bi;gb5BJ+D@_lKJ`c55)$qC^EJa/39m+nP*8\P[>AG/jRfPqP*686'nHng1DR
%/W7]:hc!fC^'JmL6!S)N+iL#a(12I0L^=]$7)[4<Hfjfd6p-C-M<R4B^l]'6$=CfkF1O.%mVY`%JM6.-pkj^>\&Z2nBDu5aEp^1a
%qHduOKN)9^p[222Jhq[*AYM1s.N@PYJ'=SR"e/E=^30m@$/Vqm[mf)1jD*u1H$d@feoSIOp(HqPEaEDG7ClT**/aBA\V8J8SA!_P
%Q3Fdmlp^lg!&M,@p>S(fp;&m*p@;Y-C$'fV]DIOQf1QH/@%be]]e">ZH?-;tQGd4%3EPZhOV:a`g:>_$H=Jo(D,"m1klna*j$18I
%6TUA#Nn=Ep9[X;"RYjT5TIHch.!hF^lpB&ll45TD8R^X0bh(e9%0DY"4n!>Bi1T6:\=]U&cHZg3@;,0=3U]ouH#`GmFlg=X?9B7c
%ccj$pk/=pjb97\hJV[r(rliMHSSTZEH/[(0s+#/h&_aAS_%'@L8-PG_5`@+UG*):C;/s&#doN@(S74KKfH@tfAWckIRiP!1;L9bP
%`Bm)F*2L5$7Z1q"=]@CD5C]BfKu\mX@8QOcR5Q)IgO*S_+C-C@Bj]ePK9B<5L$4I9#j+2W?RU2dFV0kN&248'Pe7^7h"sde9,!9q
%n!(J\U#<A!:<EC)On,aCQTlW>0*?@D)Ac"P8t#?r8m[5?8m`">%*F^0s%LPXO:*V2T]@D5"tqW%hW[]?(Ih`D3Sj[BjB\p"'XApo
%7b@.HaK$mIA`S(IdH_&'$6AQ?)sS_ikenRZa;_Cr+QR+a,G+<iaNNc^L1_(g1:R=f/I6V>*+:W$9ZXiI8gi]]Gf1:(6Jc5$M_cOF
%=fU\NLDGK'QP:=>?hnr'YcgYMMn4P2aLNrfhLc$nbf<B+,8Tq0itWA7)iKan4\;")_T.T2'Y'u*aGUZ]o#Rg(GA>ls$QC`a<R(hE
%h$8!Z.u3-u,Q%I.B.dN1;HS#"A@t7WC27\:=[:?*E:HOkVI74RGo`$A7@@c]]f=>K]F"kK'#oj-[b.WTCqP^9j`I?Z7@XV.9<dpr
%=)UCEbJKB(Y?\_8`oTV$I0;Ehe5KGng4b7tZD*4N_Xb:ieHQ=upM"X+i!$iT"B,XqFQY:d#2UC?X.9QA]C4Ger4BXh]rhk]6uY[V
%IqITW7N>766,'tK^>.-\h^(;HgooMFi--A6M0&-;!33K9W-:f=eZZp'HgI[ShVFa]S06YD4i_g+ga*_)7(c4]@t0ZCWdekoeO6ie
%@GKtaeO\:Pi@aHFdo_"0eNmLX\m7W'Am]AdfK0_%Os&K_MeL:0aEHNt,.eUq]5S&L0c/@m^&tHc@G1naL&2WFd4R@J8n7DXJetk%
%8TmrNMH">0lo*@Z/qRB%Dub4!nEWEngV2loJ_k+C0:#k9Hf3@XaE8GS8TSn;2Jk?u3l`:h>`!T#7SeiOPCLr(LND[d\u;PN>l2aF
%$c3BkmGaqQc$'=$:0gg$JOfQ'W='jnBgJ^+ZT8EO*Q.rhaI,j@@!?"*SPL'$c0k58YZS]=:pbSp6%4I\S[0q,?+<BA[m?mLMHXOH
%/mQ!:h4pXkS\?aU0^/Y@9Qn**P:hBi#hK<D0&Y:LkCZ8@n7tGfc8<+`dgd/Ll(R\kdDbjid3?tL4od5Q,e=St%h@FS)#ans/nu3e
%`]AhAF>CgCd%)4B^(BKP)*s)2*\hK7Et8uQ@a;OrkYd:p*sB03bbfY<!aWgmZNe4]TZ]LH&S2@T>qGj]p]Z:fMEN?4%(aKup*f'E
%SJW'P/6G0]og5?F$3l5iS3iRQ=mj)n'Y6mOf6X:?V1HWl4o/"Wa>Kfbp.W.:G"4OY#:@ih*d+u5kg%g2hALDIlRa1?Ud9TT5<5M,
%J\RVu'=[1HkDTkaS37\O0o9rpcXkX=<BQAu\^O2qK+V0N3B&Q$k$6G)[!XnG]65p<)r.toId'Ot9*=#[&JYYi>N07^22M!Y]]MP2
%bBRG\rOW:97hHp4M@>C7m(F(?_br2OW[qh\Rmil@$/'h]e@@[DP9d)Jq;*eQSN:tC^JO)KN(gebVp89go9bFsQ`7>A0&%$Md,n);
%;!1.F'\/r'V6):@gf*SdN%>g'_46G95PG<j>VQ^:,3h=YF88Y/0&kY#]0ZX?0'a7F@P>[1P]Ee-rn(K+3,pS$*+mfV31%(IBQC`/
%IQ(5Y2\uNZh1[hTN[^RUR<&\KJ0u5Y\PsFk?\rjgVkW.%3#;[eb@_CL.bRtePrP-.*9dAEc;jEuVa[/7bQ&UT6Cgc4'G`PcFY3f=
%!J<F7)25M+WH/BR5SP]HF"&N3b2''F,2/;A(F_L)G`-,1PfFNW\N$=/-2p3#$W%$PMF!cUbT@l](ib,\.46<FcWpr*cIYpt1.YX.
%]X^SHE1gH\F!5*Q:Sp0DQY:jREA"Ob$p7gOF%Q65T/DFG+^c]SLiY"q]lG:A,nX$T`*.*b1*aV3E8k,oa'tYsEGcsO]9YmUMe_28
%#)>)Gi#_@nAtFg"PsjBL,0o:k2d$UD3N5!_g4_L&;VfWTF&QdZK&jk\'YqVu&EcAPS6Z]hnh@M('Ber/am!1D(*I#Q(q4\f13>6Z
%Y<e_k";gL]6gEaC\3+7?_2=]fShB+sSr6Q#@qP&2m+tO"k8o42H1$h"H#<tDZlm\SZ$G<R9m'gM\Lb%@(DO6e9W2YMK**PniKQ3t
%$&ra>gmMQpAP0$PJ9_iPE6q[/5Z@V>6?g_DbMU1P][5f(;%1o,BQKR^e<[/o[V%6C4432RST3[>6/#QP/HI\[2O@@co@iB`6Rn'#
%kKUtI1'e)&/d/P<0"e`V&fDY,\J4i,[6d\U^c_L^31%l!"42mGRIlL.VC[;(q_$V>i`pT5i`/:79+lo\h.).Mb$Luj+jMBu+cFEJ
%;`m,Rn7'\^nDi),=6<bD>HAkI";]>U/`p;1Qlj'skOOMkUC?9i!reQ/&*@+fKOR$!F(pal-0rL[Zros/'?%G7`K:;]7%ClBM`@%R
%eas;feWFMuZG0\$F!9,uEoL=0Qr./-\NE9]XCpNtMV1ooS1Ea0iDdDJZcH$s=6<b>!1=$$k$0$/`/tchZP58h=6a#pL"Z)aS]g:p
%,,^qEQSX0\I\tDea-."l%*j\P@pFTnDseck.O4@Uiqqnr_>(!(r[4rL=d;GDNY?32$M)Xic%V9U0.f/)&M?P[qa-^_.u(;GF*HT`
%(Lc`.q>Z^5f7[Gr\/Hm5GVCZ.Cq1cKWB?C+_Ah:VkB,9X"]MSA=0G<..$?tqKVL-'K8LLPHkWK\FQ\?*(T;@.'KAl@_J1JO%K]ff
%!-=4R1J9?RJ?&oH/n0@c=;8<E+@*'UKcq6<oYS9d7?EGrPFFmr+;`p4=a&cE-.B*CNM+;q`ZANGolP]oe'C!n\M4IZ]Wnn1gqA6p
%bM9lE36B?lil2.0#Xh\@[KQ[AeClo;DV;SFqO&'7VFH<4iM=!=M/Oo&',Le(FW4+)ED$mM@56aCn.*0b<<WF)i_roF>Y(!7$pIp$
%#B9CULKfWoTY8e4(@48I7>?`E/?6Kp`#o;&QKXS@[rN8.`IuDGgFS6g(X>6:%F.)GLj.@$"W);>>+h,r!8IB?SsC#r+bX7j#RXh,
%1eGjL+cB'aSmD\A;7+H:F8fBA-,?^(qHMl50Z;9'[m8#FmM)I#H%7da#Rg')(mE`?r_+2aE%<_\c?tO*fYr0k^%Ch]HAg:cAFrI)
%P@+OR/^>NGa-lH5Yak&agTa9_>BK9rphkX,b9DU&k\fpJjOSI^>;Q@nOiK^!U.j:!n8NC[f+WEU1Bbppf<L]\RFr\L8otFa/=YS.
%NEYV?\RiW">L&dBDRks"WJfh\'uW/RD=K+D$caiLLKWu169ek]VH/?.(=?Heg^CqM.65g]r3kCt"8E[V^@8gqEFlV5&-^6CD@;1/
%eCOi4/aejnlZQFmLfsm+&BqR:\ah/,fG530oa.`P+VB6'33+Wu:G@]se/#.d=QkIf(.'8cK$kF)QjD7JUFg`+HV[^4gRtJO6<egB
%`JYD`i[^Z7(Hu%[$#J.bZRrdV,FkV7V%cncB/3]@4L+l[FX/pn\%JYU;,`1*G[[mh[0+;<4na=:5!O:.OX],`Q,OO79^)4YZ,LqV
%YQTe7^8&4#_I8q7C:+k3D=moT#2;W?o7XmpGnhtUF8ki#HTUG,0lRGN34%5*OH*^J\RFT1^=9]/&TNCoGN#]q/@/+WF_t\=lG6^5
%AN%OAin>_?TuC6*Hpr23=q$:WY,o$`qlcnd>!"^4&'e@[R=+*PAM(D=89aN][0TM35:q)7hEBD8@]L6lB9C_fa6,E`D>&:S.p&h^
%1=11qW`k1o/uDhC)E]=Gjjopoi2P8<Z<1l//("tGQ<H\fkD>uMj-CWN3(GPD533)>D39ek%(4d?mNAH>m;o=0ITg,Dp:f0niHmEK
%G:[c<PX00N.64O'6*6'7[W2&f'\'Kl'3QH'Tr-Y]8OP0OVkun5dPpP/\n,A#YftFGRhjCuEIEn@lVF#J.d'$BcS5@WD/\W;9]ujC
%/^OhA6:"<b9NAo&M\I(s__/m7E9q"@"YVGW`*pjo/T(+U_[@tH'\!g\e@?5>1PT3gKC<*\5(&EW7EZC([)c/I"WE'$jCR$1Q&iA!
%6"^=s5tM6>(c8Rl;=Q3j5t3r!-s/eAf,IbC;pg3pa3e?$'.nl>1kLR-q?@:%6jq^D.*`22/L'@s,(bObAO)3DV6p[DK:3Shg+cRE
%'dU0(IEc/dm@J1-:s^D:2c[:Pi=;];K:RQO^0_.Z6Q#a-h3h/n=111Fb_:H\TMYno>W@n*Qf+H@hp9fY+UmMdmU<.=T']9@ET*Gl
%Cpo4[<WV&(4!e!A]-D_WUpJl91Ch^`mZ<rHR)MlT3pDGUK=$ouM`Th`E,PC-Rfu\CW)XYo/>@>W]14To_=++_dRHc-+KZ%-lu4/@
%@%/1Nhbp]'%c9SM68gp\;g,=s&L^DPRZ4uHR;"Q=P(I@j%,VC?G\2^U5HZiL_\8i^1-:EZI"GlEUpaFrl%<K3_H[kq/5I101!H@]
%#?0\M0KY>dj;<CmI;e"q?C#.T\R!m"6-+^5;io0tYMNL=Z><7mhr^St*DVk;`3RI9W8uEQAaq>,cM9dW)uRO1<>Np!;TU&H7Hk8>
%'JH8f#XOVt4L;_#PnB7da#2/$Z6N89:+/2gjpCb6R.1tN=b&KN<\$)]&c%OHM!``\i%A9?TMm#Y?q?FHR0Sj*n^2bKiK4;KaL8"!
%7[?^mD&b+4h%:kJ'%mc5^R$4(j:5Kq*s[M$#t2aV@?B:W@IEAfOG2:Y$H&Nu?%Okflld("m-aL)Mo2pb5_bgYA;RPL@I?d]\n4`5
%+]!Q\.CPQnKe0J$D3+(l@*)3B,BWoe\1lT'P",im.Ag)B@_DOC2FM1-JUjTE(\1[)B`d%q\7:Y,,?qZVa7eFE^/2ioTuen=S2lma
%<S(*HTd;d3&^/s]I%W['GRG)3<jU.SM`2DXMZRp3g=V;@@`h3!6Vt)"J5[/6[O_9dZkYJgAGdu<@nFcsbG'rDC<\m=i:bT[Pd0,*
%17$[91%tpLC[0P\_8Z4.&nqSpjnJs$LL_l;Qk`eIoTuJbJi=A/=XH)u(:P-$h8#>X;Y0,Q7X&mCV$W+7]kJ9$iV^7S6(Piabg$8c
%9].@2a@L1+.7sRfVGf`W17SUkhWF&r-[Jj-\h%lo+qu)6,dlBW#8c!]ZLj9g!/48W:7T6'O2VI)Y3^LrK,Q2o;r:4lP8"d,6K71E
%]u="Cg,tmX/WpW`k=M0Y3(hF':E^mL!7Sd>$42lY:8^#<2On(3ThIuRQGDV$b1X/d,m*"7mD@4thf<TR%'LS1?`/'9/fS=!W(,<$
%_Kc.c5c$jr("k#k&?rZ;q]1$j&q2G,J_lH60(*9]3t5Cs(M_=QH.fFV2(<"F+VVOjE$m6p9,fg@h(:_G03P<k9EtlY*5A8Fo>\qo
%Fe1R$i,>pl!E[tU*sN4b`?%k2O:dX=b2Tdb=OA]hI">$_1K&`?2gq^]rQLP)MqStb'jllBS7poifkma^X;=kkI!gV%7kf6tM[@6S
%fi<"WYf?lP"Dli:m2E5/![7)I7Wu9h3P'-1Nn2bSAKB`47"I@*_cWZZXf$lXaDEm]rrS%O9"4n#?BF6ASkFum!RmBa3]c-dZ)cdm
%@tWV=3:j\.@NWZ)\n-+'9j:h3P!spX\$_g_XkS%._rMskNP\ja+q`>;3R]/u^$@rQKi-2&-/XtT3mK;Sr@XQ`#9*^jLbn2<2bK?G
%e]L[kLkSqj5B>-AN9XF:GUIB98j#uC.A)0)n'-b0\5B/IPCStEg@njNY't7rMHS[8<&qr-#7r\HE5T5s,IfR$C6)l5LiRI8FlMMp
%!a[uc><(O^gt%M`)HE+g'FHc)B3'7FLlupN;BI%rO,YjsbQ@57</&)%d;G$#DZ`ui3)^%lVrV@^EbcdW6n?hVEFhSde@ak`@+H4b
%%"0L.%q!e#U2?o4-]p:>cVm,LSEK5AlcPhh[h,=N)2=/XgOJ-aJTFR;VFLu+9ViR'/X,')r\D$j^pc%^D["3i*;^Yl"C?F\#ssHY
%[:'<4pneY'[1HG!D!o.Fj2F&9:fJ$JP?*3p-t_`K^fk2-+@2A:P+g,C17?5CeEjOf^ljh)"PsfkU-U`^r&k>s-qR%)\h4(j(#Pd5
%p5juaK?CA?q?QDk$o'5g%P7r@1Ke6ta&bD+()aF(ljdp1Uo]h#eX^)eQP]gO(Lo;*`-<PoQ`1.Hlcdf0A9:U([:-qj-A:0<#M0q:
%Ur'Vf@AgIEMCD*("Qu/9M&aUK\iqqC#@K7+65CMjYP?oY([:J#og=bXZ)_NQc(nIhQnSTsc@FZDNb@Di![3:A6+2Z_"1!:]P#bAe
%Qo9A#a2=g*KH!G>(;QqK6K/:[^jIgGGdTg=OYKe#22I7-6JhVL=>uQ`4Gu-e"bHqUE`/+d\9Bh;Otnj@M)$)X,6$i43^m%LI>?hA
%.q^%o/G>:@(p$6SeR?TW4Lds=[q4E+S)6BWSIgEO/F>`QKjZ#A'EVFL5inUiR=r]uMTPYo$*3+%"%%>D'&(ApoQkLle@X-@:YMI7
%<'06BF.Z6G#dubj(+!jB2;bZM*Jg)b0G`2A`F9WWZ8K#'lq7m^mp[uGZJ[nqUn$VVE7q]R@i],0,5h*=hL(st/B?&iK+dB!8Q5mV
%FY33\dd4Oh2`g&lAVu9X&Ie.G."&Z/*S=0*+;P,BG"66%)'_*DRa\C1,XWi*bE`nM#UU6eT,,%j_ZR*tL9pXb=5YeN$gb=BmPNSh
%I<(OZid8[Eh^j]***WuPY*m8/,IlLtH.192KX*k[MBAG3ro43uCBl^Z*JTk<<$=5D#g0smEM^1N6S5o_Hk42mq)jnrVM'DC+"D<i
%p9!&^CriqcVs6-1$,>^GWqbZK5=7NIC1Aqgg>P!_fK!UUeJ2>k4Z6MpEhF;ZHd:q#>RhAEE3N>Z2BsgsCop'QaaICLj4Rg[ql-(C
%MB%^sC?9AB\`HSq!)kW8QaL/eD;cOo'CK?4?@psoMe/@D5`c0l(=:Y(!8YV;3l;'iP#/o3$KCPS6GsF%5NY[7@6NuF'NJf4:FqHW
%s&cV:gRbCm?""N+ZA]/LVj4"uTgG.^"&-r5!d9F`_l@a_a+;l-Oc*e3n[P\aCsP$-_R63uI=<>57@Sq>;6i%k"!K"]29V-\!`#:k
%2+VJG>Yc$>]!b?G*$`AGOhMcp-R:tfJW$+>j,h^?+X7ub.UU"f%?$>[)FqU5NPQ]&>+P#&U)5!E2q>PDU(p*;\G$$]5e(MNG_a/%
%KU:,Q3&E=@TY)_lbpi19&Vc8Gic.g1p896,?9:dJg+,t>AP'm*`-,8$!ThZ\5BV1@8a(aKJq>-ZR*V[4Os72*5BD[pIZSPU7R=6l
%6`O=ngl-?3&,`['NW\*)URfrT3(np[nM<PdS<04FKtIS$5<\0eHGK^dX2FhA$V7$uR^KIphhNb@[7Qb4Q"[RK&.!O:+.I0B#d51n
%P7T+c"(HX$W<Y;A9"B2Wl.]c`F)H)!pWZ[u]:_Y)/I9KV)X9`X&!]Z[rc-Dd>7hM.]ENq,?(:iTW([:G:/c$)?8dM?#:i2%EBm!@
%6u4PI$-6[#22R5`H$DsZ<#-ABe@Ki$Kl]Ue?FsrF.G6H2:bYL,+&6CWML7%s<(l4s'iu4Shh/uYfkm5A>dV[5aDdI"6MRp$`V(u=
%P@NQKb0[(&Z]eT;fMkoE+(EbgOCKX`/IVoD@u?CBQ&1_La<=\=`rY*O+uH3"K@b<+j]EKo[`dCZO3.!9W[]?'!g5dSpdh.HaLG[K
%GT\9q4kKF;q:>ht<KMDk,<-ok15Z;M.ZK:]OHu:3%tr":alYCW7B8koWNXYXk__@Z+PsEfgr(=)pa>\F,Yi2A%s+9j#D_F':m0n?
%gEk8<c_;#'(XK]WEP)tTgc\_l3bXdI^^kGZ6X15=`[i#mCe5uqd7mS!Qr2T4W<uU\F\qCX$^PEA)tWl6ipfqJ'[:P4!0oP<AUfHA
%H?+t6P8*,X1`YCo%1_hMmp^(T!#]6NqY"WmfL9h(B/2Q.>K3C'r*f7"4<23A>jd)aC;!jl[Z[][Js9CEK34$@)VPJ-N$E?Mkq8hF
%BI<p+!Lk;QGEDrZJCT\pe7\o>)2Ytq8\@4TORt[LUuS\1FWq,O1=;>r2[25I"*/QT(%8t<.\a.P?hBq_,O7H'*(,+S:%`LoGUqRW
%p]gJ?MAiEhLdbdh[ij?r=)O'3"G@m0.6]\+=F7gu-d_#k-iWdbfLuC,Qe5:Ibu\b5C#Me^L8AUh^k$t/T[]qBL>eC8NUem=g^d]:
%4^g*\J:Nj#%teEP.(0dZ_\DFG:*lSn+"CuDk$4I;!nbOSF>3q:8as/HM29r'-EJ-U\Es*CAMT><WZl#,@+5/r5cTVt`.Mp5H*A3V
%m,1S\^]gZ-Ai`\_!=CRANP#s1:Irt>\0]:o,maQS-JTBcU\_E*N7g-3DkpV+.Odl'1Glk@M(u-BPE,cq#elK"SIr%ldRjdk=SiZ8
%IM(!/_]'5SC%41V-R=(?e2ZT:S4WJkUl6#Y3$=&#&_m9Hck]7)*Y3O#9H6J_;(t#I\Y>'oOtTi%jrV$#"Ln+rA?]s;4'4:^$Jm6T
%A%B?*B0XM<f<,`X>7!TO*%H/2-F4@2>gEFW,!cpElEWsb!FGnA,h#M$0\.g483GMcGX"am@tQJ`]%!]9"1'.],)/ugc=_mpAgL%Z
%mAr68"#QRjr?^-ffis?r')1MDMLrSOOrR=i%M\>Z#CXGuK9^B/J\fsH``4bJG0FcY4&Z5K'sG99@d8S]"7pJSkfg]Z&3'<upt2$o
%&%51)'GluDa2mmP<SIS>P-]5P1!,,/)4H*[$b4d-]nt2"$NW5%k#-Z\mP$B&l`@pj)^8`tDt4Df5d;;u.Ks#m`M;Y,%GiV=27a9.
%:ciaQ`0">g:U?!bEGR.&fF2atj$73K0r@AZZo.4Pi&s,LS)ih]Ch1mpO#X!eIPar&plpMlX+]Vq,bh<lB=&#ULI4BgH+CsV&V+ZO
%#On,&_=`\FS:,<"hLcYX*(.FED"r8YquMs.%D[qiF9'nNB(I&ZJhGofhb):f'AfWcpgXGVBe<l$WcsL7pT=\%l&J9fW&WP6@cV5"
%fXc]u6>A9Z]qAoPL`r(\15+Q,KVEflXueD4"0gUqenr4MS*sV-5XgD^2LMQDH5jCT2(02G%?1EDi@G\,3XKmX9"#J>^/1OKp/M>?
%@@)![[$-gXTa)hs!-ubRV,?F?Q;t.tjMD`V^sb%G#t^EPi;3W9q0@p';aVM:1O$YjO-X:bSDj0A$Q:772CfgO0fcTik'@;?<Kgp=
%3Y08E(//9QN`3?&cP.6n?JD;n;p7[llsc'F.[9X**@2&tD^OU#.-`N:+mp+-,?l!V:KWW.o)Mg]lPDl>1nUFGO?1L1YZkO:k$q1I
%B@!8Rg\YSi%'^4^qifhd'd,N')e;BnR>o4Zk/B"bQqZ*a.#q#rjLAuHl2`.][3en_7q-P0*.*lHmikBi[\L1b@(DpL7?`HeSGO8Q
%\0_@oDL(_pkN4a(.'%r=$AR>(,pXa0]BA"@4"0>+`B94p!DL+kb6im9BP&=K'#EM4"/"/D6?AepM'Hn^AkK3.[Hj\+0B2&#?lc2h
%-b#3i%tfRBS&/%X;@jK"dJ#=(Oo8qNU@5+DFD[Us6eK-MJruSd]DFKLODr%r+hc4^bUkolJ7U'40U-M3'hFucH,KUA/E'RcE2mS3
%6_?!jCOn'n?%Y@I]e7@M+5[`,+admI)cMIoK#.j,IQo*`63%'Vrr+m]f4Z:CTN%.2o86EG$<BD.@XNf1+@6Xq&m\%SSkTjF&HJc:
%N!Y<ZG/&C/KbA@$*X=HY`p3#@;igdSbqXYIf/(94@UBZ9/&!oF<9T<_+Ds60kAfErif!m\V%SLC!\a\P`IG@mcCBf(O#i</pcT"U
%TcfO,]QKcNm;uV,R!4NfcR!"!IPEGpi[XRLWL+VHNT=DJ0,9[fj-6<>RPd`!*>0M"*mEW^S@R*D,!LF40Fcon),]_UNtVj.4A$m\
%*f`OOA-M0%BQ=u7RbF?i8U,to:`-_T5qnN16Yr4u+[n/JDUBLo&_`qsT9mN1KG?0c"=VZlc[rM8qII9@W^$oKZ3*jT2(G`ASlpHN
%-s=).[#S)=(X+;OI$."%k]'T)Kko4-;2&:H)3R<UN;GCbM;&`HA(5g@SfJs<A@uLfiYsVSXBTS:9jr3t\^TsKJ1WVKROjpuJA>I)
%0b_5\"s%L22AN/lQk#:"51Oj25iQVL2utXN/`jl/e`T5=cE6N?C_:#Q+H;k61I1*a`+a(VNSRt4@SQ<_$\?q@FOuQd'PI$R"N@Mf
%2I+QYM[O"Vmgq:Q!eH"^n,#57IbHi(NsuS\Bqa+0U]`1L#OhIll.!G]>:K;;cX!;3))p7ml)[`KU/to\CY,FG8I&kRZ'&pgck^94
%?4tj=:3Cq(3.p3;F]AVX_*dPsq7,.P`dA#EU')eh,b2ZbBS76@SQPa?RDmj&[=c@JZ%l0L1cQrs\,c&dV9#l""^MCW9Qr9NV:_j5
%/-'8Mg7\EjSrQY/"uF^qcHKgMZ\>%[<q&Re*YpfaF<IC2S#emGkG8eVS[?HZFp14!/#HU;4DG.Q1Iq5s^Q?g>iA(!.g!Y'"3NO`%
%8C,M.l3QecQp_-s>b&=tSa$es.3bs*<1[kViG.-["-K;01(<VC,\F0==bJ$Aen/T`E6%#YAt[C@lj-DWoFO.:i_3t9iKD,u9+pA_
%Jbs"F_jhu09$u:c@!^>9&J19LlUl+_D<n''m-CpqVLO^46i[qHhg<r,_m7ekKJ^m]E0@P^qq)+B#/s1MmuDm-gb\=--n6:sAGSM9
%bL%'_$b4lLkg:CE!7n\0,c2^e6Cf)8ERP7GDDcER4</6Xgd`np>D9LYUq(`,'@W20bSQE1DCY]kSYE8m"0bc+/qTh-I3e5H`!-R6
%7=uQO09GPT.?#`%,3ub&Ch<,;UAVc+\Usqn_I]7X]7s0'HSB6N3d?Ad0k]BT4L#G]NFOfUG\H35KXhNlD!7p209d.2VY&nJ;9T`8
%E=lX'I8rfO4lgQRrNI8k/3A1_-73Fj&VhgtXt98T7c@H<N+hMYMBL,6(8f>^jl"6*gmq#qXZ>2l3oc#R"$EOS=*@pRc8AT0q#r[q
%Rcm!Cq\5TYKkXKQ'/rhKr6bdkY"3dCoc'mXa!pe\SDiUThW/*\-EBZ.>>jKKd[/i_"L.=0(b;A(/6di3aqZLjSH.m['5mC/+P#>4
%e(Msm)T!rJ(>J$J?:J*l;.E2s\e5qjNEp+0`HP<_h1P1'F$ql!ajRc=42GMS>-6Z4bc7sb&049@M>]Dt\k[ZO<0Y3Y%W=Y84Zn&-
%7Ah/Z2Urf_mUNgiNcVLbIWNRD0WU-h!T4Zb.\'&eX<pHP"%V.22\\NkHR'?4LQJ\#2X+sV457Ri<J_oCE9:'P4\!Q4,VO3K@P4Lb
%qKq3;*2KuseJ$&78<+[$(LmbmQ,J7_LZftj.NAGG5l27AP4MU*$@Em.UUV`n$91kPG0S,Ap]IX+\9i'q.M/pM]_h-:b\o8lf=b>q
%&oHW3`#$)3'Gc@hb:GbBdmgLnF-d$7L6$W<bMfJ"5/%;r8B`80.oQ/[fB>(W.Sd;0Y<%%e9R(2lJ9ES%Adnj9F+B+0p8Y$sn$E=r
%.QI!T_M;[56qAah&@Et0)Y+eu]9?JtgmSdsg9^6qWjYgfjU[la;jSk4!)D@oYrp]:5i#($;s[!E&2'(4$<SV_)M'DNE42f`?bmH]
%,7'E=`*s;Pmc\lI,^V)!7)'N]WVfr[$msW?b`/Pa"?j8^'4%mt^:O_XGkGXNd+&]/+,[5b'!a"gT-amH*.aOI)rZA(ka`;&o%5R:
%]oX=D8PKUGMH#\9r+1:C81a#tD4$^fi'WTKCfC8hP>kPI5O29cdY1C:(pr$[3PkldoAKJ>1[,Z.Kro)#382T_7"Qa?fZ5K?:pi2i
%B_t-<Onh\'\$<eYm</dq;J'eo;?QeU?jJGcI@oqmV:\1UE8]]]QT26S>$mRqG)GBF@ZTU0badm+RBD8:QTSe%9-I;T*5l+[&>pd2
%+`>,5WC`<4=$HaH`s%rgm2:OEm5mi<fG2ODn`N)i0(Z_E'SeqIo:?hHNhR[J:$+@PfjS/V.0kf+,'j9Xk<4\<cJ9]dn(Xs7@.OW#
%RATYo?+iNPJmcsg+WdXrRUPH'\_356eI,3\:\[&g^)3NEDRX??E(ChQ7jP]lm0`5t(5fMp(<Cc6eFbBmk_cqoT1!QA``SY6%>c#^
%]/D0(N`5%(X52hS7[=Y`^s-GimLD6cr>lh]Wb?M<8n&fL5^6dU%efOrbJQskljsi+cY)QX\g5I2eBS_':>J%1RN-368Q-nkMi*\L
%4Ft!1a@<V:&+"mco%2SO@oIVq8Q[J\(gid^65=%lkk$,*>;8o8]go\lV7M7]X%2EIZWsSDAST17#"eDM-;sq@*IBhB,nV$6WHjY.
%<LTRef1h1TM/d,$(G/DA#ie`7)J"UJ&d$F!eC)\q$d_8n?BUPGCaGZrO%2tlR'a1H"F35&.1/^9ZC<5?Zr87roH-!K?'DX2AT^W\
%aXPTb<-q29FU[I!+h3s4<5b+Pq1n(:',EekESfY>Po>5K!#7:^LI78X\Jp5?lVq`JK+5#O0?`-#3,q"^F<f^c<(R?#*r1U)@!RR-
%=GuXW8dTj33M`CR,\rL-4/l[n/=r4J&9NsY1.KB$d;0'H_(k#o(7e:XT?:"h$pZ\EQA"e4ePLn2"gKRS.cT:F6BIus4cM-qR$)6h
%]SFF(=$:^[MZ])1i]:k@M":AGLcC>a5B:^.B&>loR1b0BEA:WIW)M\*hOK]QE=[luW[JRT(I)CbK5=:]Z9(e^>;m/7NU8"^JdaKn
%PltPJ[#gB("Ii-&S)C9Go@rBMXA#lm:*_(288Ys(KhVn_>p05"8s?t>f;81X/SaXVRnQ`j<*MA8kG+6nYBo"5XH($S+Xk.Q9reVm
%!O11n77AsWeVd"[ICgrjGQ:#13hOGe$(,Vg`MKl?Jh;F`dh^_8DkK?\hsXmocGWt88$-W2B#9^#nLM8Lc-+&hJ7[:H35kiqcN9P-
%p>J%DAD4%8XK#Pf8Pk_d]]LN39pq9j4Y$h`R&X\(6^NYBdT/EAMX^u9&HVe&br<h5_ojNl'r8i9$SC]pe#pZ,8SJ6DooiB-]'2W2
%[da/D^>e4H:QOhXe]o_RBt>#QN1hMrRnak5741KZ^bC]baY5dIU^UkN*m+s)j,A;?O[)fQAQY-mT;9<`b0-3-ak.R9Z!%E^&WIK4
%eQ@7A(gL&L:A4JN*70^YS&^F6O3+[mJ:d#olT(dhOq8R4$2O7c9)92jNa"5ZP#][UZse*3,)2>KZU5!DXW+&TLgpNh20H)@-.?Ms
%8nX(mROtZCVshLQ>q:HQ:*>7bRRdibA`BtKiF.]\hfB:eVQoH4@DN_:E3;lQ#e#ilEN3tQYkWl&*?%ARpp(!-),0*GCBo1>_P4L)
%&]F;.iUHCh/gO&Q=>j=t9,T=$EkDo+9r7^HYu:u"AW43j.MZuD>c#6@>`1]fcaYPa0oHL!+JB%T"NB^_5R7UgXrE-V"9PDCZpn_9
%51`XEQ!2)EcuNE1jhE(;4Gd.lh8Z<>^".+a8K`Q'pG0pOINkN4gs1gK\)R0d8rh9W2G[c`G_g7rR_RI<"In&n("GIc]2tL)%?uO?
%d'.oD-huZV%p"gKnnDd1X)=1!&2b3^LpdB_KA7+D%O,t`J=KOaiL%!Bem(@A6^JHPRd@DAaMrK+dI&>Oo!LiF4fOp!a(uLd&sgja
%N%>MOo0;jidtJ578KdHCGao\A#K8hOnYFkG3V0+A8L<OS#"!42.UVJ@am]F,;OgVQM0+]CKa:TX^t]tM4>IIL*-eF\^/q:?ohoV?
%5unF([klLALdd^he`t-1iI5O"r*f;@G\Na1>a-m9qgS,gqZ=^qVG%OHmY?P77'aOuFZ;>bZ[4cWDV3_Y"T0VVQ2!)lPG;m#mLBL'
%nc)GrL6<);iB)B;,b&NeI",Jj`kc%1BWq93qEbM"'_N@mPhA27/F&[mK#ZZ(<rCI_ks3Is1(jmI^-EcDU;D[1*Z2;,.V4hjMc;$5
%\@@0TiJS/DqGqLX2'3-7OT1F%$qNI7`DOaR'W_g%D@YR8Res>CPToZYoma7@DS)/R=5)TG!56:a0jkGa.c[&HJhL)f/Z=/&&g[?m
%%2t3-`S+4p`C'STQ=]l80'7%X@:!@p#FLqZ);K-enZ>`#nkbT_X0hVuGKVS#Mij,6)%eCMnQVUUqT0LEctH!+5Z*r-h!,6XI]A,s
%2TgBS';GJuQE[&"0;?gD&YJO/jAEpPLH_IV"RHHqMeCh3;#jN,[H]:U,q!!`U1cGk4MOG!,F<b?$]rXd:6o!kUR[>e0J6ns,srh<
%@I.(BeO@>?[n\-FQ&[]BM;*$Q23hV2W#!N;+@8ka!L^U`KPrA4Z^!(Z$<^&N'm:e>_2@JR\ud6A9+pup15fZG-d??<<e$p'b"5ku
%;2bi*'sOFbQRUjDXQ\&-oR"$pP'>K`Dhl4b`;)hc@ZDG%3Zam;-f(.^`>f0=/Fkk^qoS?RMEo/mA[7MiR(i[Olm:XZ''qc^J"3])
%nk-`D_)%'Kp4J_8`=elO$+XUJLu9OqSo4^A1<18C&Jb0Tm"qft<ha8te:b]".1"Mi#Ed,4;&oq+")m*!5ZM3COF^2Ab=(T+?6gTt
%AETZigCT67'^mV:6,s>C7bLBn=K,U6E".aE`<S7N[KRj\ahsa5-eK;0(>T[]=d8b$ZNM+BWYX/8ME_PG<eD\V,VY<?Ik<J!9,<R8
%&\.<u@9\[Q=TgA^JUq,@3/NP=KtW?Nk^o$NkRXtr>)OXt\e[0Ii[9SGW(eX'Q`8:55#p%85c+OlTHPEp0#_GM6)W)G_N#"N1eKjT
%k7:bE#,SBqQ'A=;?s:+uL4XQj5U1oJE[[%dPbX4G>U(:,"f$bnKis>_5`8#o3D#R2O%5iX:*X;D(t\+O/jQ1WWuO9fQm-h0JSX-d
%OE^9D,1n%EpVtc1/,(1.OFmg.KC4$m2AV]1LrY.jDG^hs+9Fk<RX^nh%fp!VZS>;h(%N2l9XkWf`:E/3ia?k[]gPrYcmP9iP*]Zp
%Aa4(G%qu#s%O[^W//6:$JL!LsCIkucG1RuL\m]tB0:@a`^GP2;&Xt2fX`EPb@H:=V%/)aMD0!+Knn$DkmV/s?"ngKpbq7W%AFsF?
%?R.6u;i\D)+6bR+ht_X,TR@Arf:YuVJZUsk:DWFr<.t0D60/_OV_ctZaD?(MHjbZS8W<(-M=?1[8h:su<X^.?-p*A-qu%#%/?6ML
%.dXi;]GZ8L+PDBXfg/S,&n/C+#6XNFp!"r,T#?*gU)I13+j.TgqRK+p=aUNe!=kWr:.X[ZOBS#,=!c^S\jCtF@P9-mY"DGsg22Y@
%US0*e+T-cl_`)7rF_'tS\P@l#?-P>2JDMD_T.6N<p9jG(#td_C!3-D59ctrS%+e9AB2ns)`"s=>)B@VM_&fh>;%urn,\N>Y0,3R6
%"HX,D1+da-]Z+)>+%P:OT"$K^.mj.8M?cT-$:.poK=^ZN)$#Nh$V?(3ftf(OZjs1'R'W&phLf'?BLdCjp.^FZW.G"DPV//m8?%da
%GD<>Wj-IrXdZ>lqT$Y.S\^4u^i"4:q0jSs0Ne5pE7P-/Oc7kaoSi]^$;>kH+A#^.V@?_[C:M.l%)[$]Y=Q`7\]j.-5gPPiq8eF()
%AG8K187$tf5+NCc^CQMf5pOj3l0:XK3e`V<<0Uq/;8ILWT/th!"mZ1,8JadgCUO:uCZGURb*0XK9]bL]iWCas=W0&)8!O]=o[`"L
%'R<ZYUO`j8)B"qgC;<1'"Y_d\rZVRODqcc+.:dcP81T=k#,iuMOkA("`<aoK/pX`Tj,Aq^_MWX%o6LU,,3;oG&GjKqCf:ZIW,+/a
%01t)+:b"uqEkE'WS05\JA5l&':;UNYi6Wo0=-]QKWR-<P&A_S4-mtk`1eu3iUHC(tHc2li=IbTG<[Yb+'sW?3V77V[hK*$TY#^*?
%YU;GU!)AMO3K&iK8>uNq,Y_0G(A49i`6mnm5)9QWS.-GU%1$PpJluM9frDlVMTniR@u2t0MeI$/Zq*f::Lm=ES>?M_R,nSBkhqAp
%C-@ga+p^Phg'&CLVmJmrKt-J@&d:OtBQ'VAEYcf7=b<dL2;759<P@@2&?)<QN^1bK-<X2KMG[o]NXS=?ZVKn,C@QQuh3):uJH(gG
%7k);QM?)736ejld9RuIJ"G2dn:!/st*F#bRonnn[kt*>Z6"uMq/L+X'AX6LRG";U6LVOPE5>Lm%,X@!'jMNqdd44K[i,pK=VF/@B
%h\18B3t*K.3(e94G"YC1jHFaB+c=986.=T:f]/5&Itq:gKPd!fJ?lKAPU)HWN5;Yl_SHA`+UUOE1cr^dNEh0k;3#B*4*#NC;4f+"
%?!kDj]3[alW/2mhK>7b(G%J"<^e*3-JlX(O!XN"PgJ\(n7rJ%u&gtc,KQJ]+BY8I<VsZ>LZKFWr*cXTJB%H$XP5,+o7d9E:?kV0!
%P\Y#3"p<6l\5[-KJM\d47?LN>,]oA>,`MJ[HC3CBc1cbb,Uin^_YS/,?q3GnOLN7dIlfc6c((0=RD\lUUe*p0LZ.#-Fu`Q-A-9s_
%b</bt8/mdRYkttT5r+4G9]2<p+EQV@Ne%?oi0\;J0nV39]#QGJWSJVp=H#6i+Qe?\;oY)2R"N2KaV;X_So^EZ6O#bs?OX,cjGJ1^
%IlF``7EAO)EgW?;n>b^6W%'n6^.15/\Q0Y)m.)Q"&Ap,]'#Qbc0(2c]gEpd.!m1\V*8$;TW&)=C#9FRGrXH>!"ta@3p)DM:F,jIH
%h!uk%dfs"d1I@gU$>b"9.sVJ+NYl((5>YiN`@s]'rfNb<&fr6P3>k^\;D4tXQ6UI@>l"e1:=0f*]S0H_Q2&e[!R">?cNf.SVr.%b
%XINt3G-#`V5tEa<<K:-X"OmjZ4:,,b!L:R('sd-jj\R"V+?O[u?Lg`Zf3uh.5l;QnGoe97D2M2N)Fd#ef]_l01,)]i<J5Btirae:
%/r.hcT*:R5.SSER##Bc"RP-\A-eCaNK-r%:B)t"99I(1L]WYgX,EIkUd=P(f;8/V8(arLo7"nF(,*NhJ]GN>Jdtc$1B"6ot/L3dt
%n$(m"1I_CeVV$=\,E+e&T]GlRi12s<6rbo]73kCdZj@J/]Lr.e3?J!``BgSEjM9/nNbiCiQj6W5Rt6^ROm?Bo(-1L1"j*#P6S]A]
%@Aq9cf_ZfaGmoV$C4n:6\6tGO_Ch)k(:b[3gM'&,oTVY!r[8I@&NCVNS0@!*dA@Y9*-sRfU+6p<<$lX:cB-,J<4Y"2En"%HFp^W4
%eP+&e2Zk7:1;S,@>W=.%^eb0aDif@m)%nsN"Q6%?jAb=hO42/%*]q7_Y6).N0]ZCV8l<ZlLlt082[j_3-$Yb#OK28k!9A:P.(^r-
%32knk<VUR$8;cKDP6R'+,XnQ<`,:eCB022_O/),#Tt"j9FY2V?Qm%MX@4$bm!frD!6"paO*#Zs7q_s-JcVfPA:rcL7a\5OO/]2r?
%3h@Uq<'\J)?U@dD`>f,1$('b@6B3ENr$gWM&p.GI*!\dg.Q\Os4@,K7/9p2Y$s)?,.7BA_Br>Y)j:ZHq!=MhC(AFptNPj7AqeHBn
%%Smf#/L]%,6ItME86o5=[E`a2UF*N#c?L$ZPei;',;_ubBh'%r:F%u\VJg8\fH4A1686DF.#N"_7OID[;I0K7S=IupcPa\S;]ZKQ
%5plBd:^q-@'ODdY9[8M.FE%S1KMOc6(\bJ<8o]ZF>]p<'IReSJ2Hu#3LMT6?jYL:aj8k8,W2761>_`3W!\4aXJ9^8d<Et)c$riaE
%W*WBcW5,Mr+_Qnrd$Y0c<tWFA5#N75-_*dh%d=b#3;bG:I?[>A>*V7=KI3k`L?Dt(nG#iQ)oWGN/1ha&3#mMaaYEr2:LXM^e8U@]
%MCT/c3=7Zh#8'`5TOo&#+@&^\#]UCmV-o0'Nd-F,0\mG#Ja&>;?Lbop@1"*Zae4A0T%)c!i8H,)#gs\S4D@YJKan>KGo$<r1.ET>
%L,]8FVjnMh$PhH9k`kEj'%h.)?`q$I*Anh39"nei",DL_&em)`7Ichk&ApfaqicWS6#_Et5t4oE-GI>Y=?*"aG_$F(WC0&M=/^)r
%3&.YU'Ib"3@iDo[Kh$h"<h/[C'RY?:'-9#;7o@.^NFR3?!=99_(XFeP&K3oR_$Ubq-!oC=_Ll=<cN(h7L;,-%3""/9\UFf+S1<)^
%6pue8pW0d_r#>grE2c=E#014o\b>)ElutJr$4IE.;PqAf_$.m)Y**jCYi*;1n63GThuPCF<3a.n(\+),JnK);.<-J)eaj5G0m<`e
%'Id$:5m/PU06KPLX>u4J#<mt$E/k,T)7ggsHk;p;@=\sKL7Ub`%h+r[Oh_27IQJ$!`%ZBC"WZ,>VfE(LGbiKq*7rMnT96h/1C3K4
%N8>OncNrH]ABPkkGSQ"Z*<3X.4&Y%P8HJ,/htWJr04q],QcO?&rha:Z*lBUbaq;J!JA9&GBXlrfoBJF([h35NhaUVmmjc<eL%6R+
%Uar"O_b=P([:UUZ)rPof9^ocUW,UYNP$\sk>IW]&m(6.t5[5bh2j>nOLf:8@JaAt[l.lGTd0GGb1"8/"3CMbu^'>"C%HB%=mt!_Y
%.6L&'^(9/r'Bj-2qZbId?c"V'DhoiFJ,qWC9n5,1lJ!h<p^HC+3]f>n'^3/lN6?cM3(%4[#ch/`hoIer'[teKLkO9_<g7O`e2&Gs
%%-8E@'WXBSni[OB^P5sGb[r^>"djjg#6Gq-5X&d9pg-^i/I+HP'M:S[q"B<l?i]*#F*`T"H\7`+r6lA:)dt<4IAZ5b_2EqN_7bDs
%cJb?nCi?M"#Sl(J9;-#dp'-)$lPZq9([%URH6[e[CU=14(alSNbtu(s96(06@+%m.r5eK+4@hfoc/WQ!l"sCRoL?b'V-#7D2gm'9
%g3Qd&6,[`)=nZ;.8]3AHDmUW%@ts.eeAA/'hM@Agr,G0s`WRQCVPe\P<r_AEQ?T:E4;>rm_XaQphM@pO#,XZBa:9AHGX^g#/e^s'
%#38MT8XN>\i[lQXX:]&0hOQ,]hPlC/??*XH#i],h#@eB#_C:L(QWk@iN&QIc;;.c(GZ/u7j\a6@]Q&,ZO;X';)DZ?1icnth\RaG/
%a.'#l@%_2g]\<b9=UGa;5&U)'E4iI3(fSBpbZr^f@(bau;6ZdM#o%jIi*(d'7P(H=-pom6;ZKhU*8(h^9b82,\Y:e7'GjB%,DGY7
%I&%t%jHBRKO;ZGK@(^3I`::im@9u4fk:#1$=[TF5K&TKZ2.IXgMDmD4!e!7`k<fFSV5l)'2auO8oW=d2,A)`d,%i=\'XZ35b_"jA
%#\]XS-j7L.)jE(5B.2UNXR/XcnHOQ[+q2DZTr);4"lep><6m<2Do>;R'2q30.IrlXh(oa`O;[=^;7n>YNmO[-`L@.?k@ZL*oH^9`
%.#^)^@%]1jDc"O-5DSdK`!C*^;7mKj:?d@bj%U+bj@Yu[GZ49H4]ZANJ6@hZP_.p).gP%X:3!pTQ6UIU_Ka\N6+_m2NRE\hnoFll
%?'AlD$\gUJ.]Gd[US$gh!I.ZL,?Oe\1?Xdf=WtF4'+.d06[0g^M@P=aGZQ96V@)6Ui5YnHDYW%l]5e3O_='ii%OZN0HoFLY"KnWT
%dCW96ST:)4]Gh!n7htB.4;S1X]0ge[.%&Yr64+B/*@^bMJ\.m@4G1"9J\,XM?G%`R'H<hJQm$Yu$TKNKRKIcc_"hr$oE^p-_r;#<
%2q<f3gnKFEK,Ol,S*V'WL/#u&fhF?b"l.-0],_&M3)3D9;F1^WX,u.bb9V8\FNA@>g'^fFQ:fmD/;9`@0cg_<-&Ca1+M0r%]Pp1'
%-3B(t-t5+I'^N@UFq^9!Z4sR5hE]$d'X8SkY),2,m"T5D,UGhEVXt<!3DdY39M#eUVhj/n1I?ZG$JCCi%)t_7aDUiFS8gU/lm?b8
%81HN>\0:sbMV1]1*$fXM0Y8cn`o+R69IQ&iV3p(,iM)c>b\dcfjcCt.m%sh]K`7mBh710YOCSRLc!e&*X+GLn_^+07;MSR`8TW[)
%&q7@3V;QN$4KcPEK+J36];'P%b(6UFg._]B\P^joU2WQ+.;Ur2p_]M`.+YD1hC38")6SeQc!\.TXeH@BL$]'jZ7AOT]8=B)$rc)%
%-<$"g!-_@SSC#Hph&p\8N>Z[o't9n#$3fj0`Bg00"a[1jR/7BKc.*oB'HQ9DVBE0p!dBj"UG1FC\=:@]L$oRj2as\:&J<f9U@;<Q
%icYu<S9'P3JqZR6%CVb_ae0/CfPV2qpRFo-L.=3;V.9S(05*3B*4D?t8&k'8ghqKt%Yds<DDmDD9'dhA$-!S&2m*Jl*Td,rgho$8
%A3i:3ghpcdBEYc5%4r`FfPWIi<!>AJ05XX!Bhi*K8Q]M1].1J'HmsbnL>*.@K!TO+q@PP3:5C4KDM#KAib\%eh.0[NdMr>CN=AAn
%;1n7Z8P:I-@Cmt*N$<lg[[ZPJEa4gDG*D,c2%=0%h*`Se;.7))18GE7I913OBG=juKB>!-DDtg_S6`)'h2^D[W4&EmK>:b<4M;VM
%2j"bb-=seI32Bl#]0YD[q\a91aE\Ib%E=)?U]Q8/Fu+iBDH#>.]Te>7.;h(lUhor?fP\25'dBoXG*>R`;R@.G)^#[07hq+)r(m91
%*Om$m7s5FO'hDMu5UN_k3GP#2'X\n05qHAbpOL&P7=s3`@h3/>3^FO2O!/[ZAPLl0$eEiJY<,CNFG&l`ADJBZFg@"#$@A5YGI*6n
%UbJfHa23,]L=L-o)-1sZ$<HmL2nqXt"!3A!fVVL$,t[fc2.N_5_s,b0B.2S*A;or>-'D:`\q.fYdqXoi9mGcOZUt-pR(,_[<.Jit
%\4kiqT,Z+]@o`$/d6$H?-p75`aOZuWEu-F"VVp5p_;S:SK$=bK(Bt#56?<eWF(G.gfk6++<^ZuN/l(mdVmtM)d]lbRD@iOQ.?L;)
%#%[u+m\&?Hk^e6E,6bpmq$\"%)[$L(S3_1.O]`*T)`C^u,?I;$U8N5;a:63O65rugm]?)F'oj4UXd&?06fTMnTU8ZV!1os+^l$+e
%#]*P26#gPf$j;D+G$hE,-J0.>76\WJVU/9lnL$$GE5Jpr5Z"u\FfCnk%"t)WK\+p4\?i&!.g.d86lAKN"E#+nR&0q(j&6UM;#G/A
%8?e`'D_")GTl3k1ALnjLHeM99hR3d:$GB`pM5<2d`Z8[,gOQ<b4D2Ld/lF4:d'Q:pPW;+e*j^OT>I2J@U1%pa*&3^=i\nW2C'#+>
%Pc/<U!k:C.W65TfHW5f>`S3jc#C-RiDB#h>FD]7K[d,%?7g7Y%hG*E[_:l?TB2I?R.S/=0a3cBdPe]27nR`!3>nqi];7<0^R`N>p
%+V_[EjU4/m2TVs%WDS^cL!g*8RkuZbcgE*N&WT:n?]),u9(@Mcc".pBVNro'fu?1u[tg\of-nED$F1,[Lpk;3A%PHu+Bf1`Rg)>(
%=Y[>k!b#%rm%-9@JWo6!(u'^p0FD&Ff9CA\XaPr/9rgms+bHsngOoEXMQoki`X8;HCf?m$SHTta+X;$D9?,Vu.leW<<:p_U[`SA:
%?t(pND'DmuL14u*<AKf!W(ki4Y50llfHtYV"Z@gL2HEu;+W/r6_kd5dK@n0ki5A9Bf^AU@6>Z6bY>S)h)hG[*'cY(L;.p0UXJ8p0
%hmml/TPY*H)\bbu'ngErY9gV46eKCP3P\B%[]p2X'h].I+V8Z^g^IW'Mn^$,JaH'e^ERJMWlN15ZAu.P+Uc.FQ$4Q>T-A*(631s[
%J8IWr+Os]t[N2'6$g7RX,9TgM\BYLj)]P1)TG1e'U'itK=9,e7bac1+"5$)C*atrq_DZGc)!##Od4:Q&R_rnc4AJNOON%8,gl$MP
%Nf[m2B*PM5js+?tMQT\9,DslFFD[bJgYgdZ:&H8*V,CZb:p0$9oM2PY4@Rk6Ms.rDiUj`j?rNi:CY)ElcmSVB81#NBQ,7<tKb\8g
%f;@UQcR@Kf>T77'fMtN[&Rn#I=f'3n71pbV\Cr&<do9H:U.O4!Wa5629gQ1\)0$gEZ*k@c)HKCG!#F!74%%LM;IRcL[7emUEl$3/
%*ZLMt-?.\;#;f%b3-go@nm`4]$<@TYB5Gn]JnY<!NSl9#9KNJ:?3liT@ApH+\g(p%X6:cng?<1$U7Kh'3s3kW-kq6`VH=1_<YPNA
%aqhrQikXaj*C:]"'P(EI"DtXVal];tg/162B)($^0ip@BO^+FW?QcMQkh34[8CSVB)j+Hs(+eCsM!LtoDoL"^)@8-Nc:2mgJ[-\E
%2Uuu7EK])^=Qao:2&kf%%!!MafnhG9'JUP1'd_PY!4+uQ">Is48!k#ojqRD*JQRm/1.BA]P($kJfh%&S:ECafbrJ\1Q!7.ZCsk75
%nJ.R17)"bDEs@hf8T5+g6-2l*='\+tO^H+nY,3&h8\lhi,9&+_o,<nM4pOQq*DI-OERU"P6ijT53u('*VU3g<8U,<(Ce4J'^00F"
%0g+1KMN3[PXH=&j-K*NV[62FJY"=O)$8cqN&dLOQ`^YnD"n=&t2W-:2NhO8@KU<XA0_XF;7q"joMd==%@&V^#kj(8Z2YgD[770qW
%eHKETfSE0FbMs!EHRr>/6SPdG_ON)$G#cHW'G29**_mNtjoeMV"qB$.bpc2CWK)d/A28EY,.8_0@L3ea5r/ifbR>+'j@UO$$AhLH
%>6HaVOP%i.gWUeF-Tqe`2CJulV3oo\8cITe':Wr1B^HKIS(umuE1OMQ4<Zu.GRG1S`'k:u'GHs`c?.kk.e[.>Z^VDRAlNT&*.q2o
%m\&4?&jh:<@KU7nW\5kH2C&\Y&D93+$N;/g>:CUO#[Yr>#S%g"OcsU9L/")R@]Uk0lmdhB$?==&bF!05@1s\OTPRPD#R!o>F]L3_
%M$%[RL.t9/*'4uqBlo._:b6FgVJ;E6#IGhI.\hV((,cUS`"%Jq_KhBWRe%o[;lNUG6t,$#U.HqCnnk7+fTa4hFbU&-Rq?!*DQ.#P
%)eFbXN@,Sj7^91;9W:(*@:;P&MO^_'`PMhIlTQg72COB'>8\27M<oh54im_Z5Y%K4$AAqB$SJO)8D)FD(2a>19k,CP-qN"9.a0:R
%2J'W79:d>9'/`B6%E:=/Kt*6f@1t_u%%J1J2Mn19Hd,`Mj6Upk_?P^H)J2OmUde97/;:raPS+fm;OL#UL,/U08D'_>qj9GX2KWBQ
%HVl&)p+fQLZ7-DEfjP0S7$4]FZf7u,JqZp$FA]3qM2`UN%%JOe=P/9q2c^,Kit_7p\2M7AVN;TL]a5H4&V;-4B.f11(m'*%KFRCL
%/:o!Q,@H4`F=@h\g@.V%+^l%k-!="X$(K_O1g1'mL.i\dd+I=d)C;B(g>R?fBGLWcL<doQBEj,a`b^A0(*IG7UoXhM&iP[[CgNSS
%@5D_!oc4@.65TG_$5,6o-kU<NK[&JK-$1DK`Y'N#j/dBGP3h$C&iQ0='c=V^As!`Y8Wg5K$Y?:2.2"Q9.>Q94Y\=:M?m/(n0T-6h
%a:nq"A9fUK@?^MG#:E'p6m35m$jdk`7TpKOChh!t7$+XPF!lL`*=82L,=]7AW)3[8N`)"(S6\UOJRM?qJqf7dYe`dpY/paaYm"&_
%ChT8R+1-c/oeJtRSku:tfU]*WfVB.#,_;Uslh6m%@69#siQ+!/"].I:ia@rh;_"I4J5;n?&KR8G^l:p#(;jOD-^'\0VD-XBKeFr#
%d$dP]HjYL#D+J60iF$__26$p4%Q<'6UiHXn*FSU[V+,^M_'T<8J\9?]K2''-_TPaqCc[ImCbVtj'Nm7i+D_TEq/mDXRk/-(:GN$h
%-9DlL2CK1r;>>lU,]"ZD&B#7hRoY*qk_b$f*dB;\/P+MJ-ZEhd$jiC7`1hcJF1r04_aWkRYa48pa**Jr9q`q@$XaNMn;?_;:tT<-
%T`X^>-u=tO`nd;lM*d,s:tS10kfObW2YBTA6jeWB7MmV;Y#*b]V]!W/,]&Wo]p&X3A",_$)%nhf/K!e_MM0g-MM+^U?d5u'@FKE>
%6b\8-%5RB47D]7_,J+WrS(^]WedMkSaL#K8K[&G0U[(b/'EZBV=f,>O'\YPQ[!1I*3]!6[/8T>4GnI/?(,f=8_=A!BRo5_)H;Yoh
%+`S'tmi2_)e1N\R<XfmCGZ5p3J?V+8YeI("OjkkY9mK5:GR+'LIJG%gjtPG=^9_#]$9"3>$:l$?G*X%fEt%CdAf$*8c=2no"RJun
%0'3/dUDP!\`*2a.48ecM>B#=G4d)(KqA;R8)t`eOkqmJFCS]3P^m75mdsakpOfoAS6ItWDn?q6e)t5^ocA:.&QF*"&i#1l=L^^X>
%W7PuN%:dGk-5T\l[ihlfU^J("2$d2Sj"`k*KQJr]GP!nI&r6J(Gh8m66:p,o`i;)l'^ckW)?e`oB\/,+ASB[]bCe-VXqC++PCl2-
%;nt2B&4O/74Ol$Nl]>*2'U7pVopZ]WRN,PLGRNOMNcFcN$,e^L*iQ$G6<jbH4II?tK1M#/"h5$\WMfgKE/%4ImhrhsZ@AnCkgo6<
%YZ;lN#rsnC]mPQO*NPj4/$q/O%;Y1Kela4pB>E*f(rZf_21f?E;,:&k;>>]33<Q\7U(J6>24c%CC5'#aa(4q6+^-,=U'`e@".^S/
%cI\(hNVGfnJ290#e2X6eY@uLCZD%.n_5uT&-h2;5APGeN^aV7iTF2=7'ZM'+:^s-:MD^Vf+VKMe.?QTc$=Sq7W6EKp_AWUubOD/E
%i[CLV$=Jk_5VH]%4+9'LbF$ra?VN73M=("IrhAV<b4*b`,F='D_lfjrL<+6YEkPAH`Q0VlE]'e[fVu[:L(g5ieQF%%B<]oc)(2ZV
%5rr^Uj;-,-TKiZ:ct\6(dZpbueUUICpdBh;:4alN6`_WU)JC`)=Ig-09_#,KJB;I7<t-W*i%%tgE,<V\VdS&"Rks\OhbObeN"i91
%+rqiU.T/-Ld;S&E_du1.5)#s?8e<"(7B$b0+Z'G'%T^2=0WL7k_N:Vr;,,DW'LXj5W&B_b7ApEAY=3F;Jj@^71P"b`'`f#@)L-_L
%$P]2di7Vc,eB"TK]M$@468Q3W(n95l3P7.]C9LKeMG+JgE0=g<b:te$l3rss^1+Z/'UBX?Wdqm`e6YeEc9S@u*5FN:L.ND.IgIBC
%,5u^(OZF)@S,cIIiZJc=i_a38PK.\J8"Gb,2oM:o$"h<iB`Xu`[>GCY1GJ)dc<.P2/F"W`i!kRTE(91G,jKQBerb(`p-q$P[2"I#
%6>#C7e0F3c6H,50_1QH5+OhVZ0AjdB"saSAb"rB/;=m*WTN7!K/bj#dfeW3aU@fi9I+iAEh&Lf'F#$>-SsGa9K:XEV_]@fPEjTM+
%-4[Li=U$sIrS]#CYJX*[)31@<'Qk=`>;R0\1rKu/)sWg>6%gbBSG"EY.,m'0ndEsU!DXlu06?D-a]$QAP#R^5PMOe_.U5csVBoDO
%_57n!)I1=O*[lFZqHI(NA@&$t"c>/Ho.5[H.b6GqUCKo$n19H@eV9;:!=BW;<3YW!!rL<I'S&%sSE^5n3f7k%Ybi-RcCh%u(UWfP
%dPU;&N5d;3e%c=L,1D-"SMUe!"u?_,&<^N;AK"Afm!KP0Bb60/kiu%9@K[L'BfLPjTM#loi@`[W6p5W>Br\Gjkn3_`**$sQ;6O0Z
%MhWiI3^GM6+p%Hchm'#Y@tV]>=rL@4'2`H-Wg-^$=W/^#PWCT&QEEsi9.I)$ZI.;_.*_5dnd3T<V8lHuBIg+T.#B,P((FdbJl\7I
%8f'e-0PZpG;hL;m_@0:FW<Oa[k<5(C<L@I<-'KZ=K9Jbe0jBHe3][;$AMEBJlP)uqW<OYC8D&(O8CBrC=_9qI#dB<r09(mi,RJ-_
%(hjPg!96J1eRJ%U,$d$]8eIgk&pNUL65fi2>_AFVUdm#rTE*D"7u!(@&CP'OX<^5r-:5co5amYn0&=C**Yg8"i1ifA$)d:?<.7$/
%>NjIb`+5dVJ4CiiP^K'S*K:V.qN`r$BS.[2jCeV0,^5aY7um^P4i`OOZ52&Z/XAoJQ#7<o)Vi>j\\<\c'@hku),8G:hB8SE`D,Q4
%1W8K</XHbR8+>;eM(Eo!P^hoG/\#HoU6,mZd@q4W_"fD\(/8/fKj.[,UEJDC;D`4LS>.W#d25^&@?)#'#iPt$NBpERYG+G:^bNoO
%P\?RQarOHCkc1%9M@i#=W'`t6l5s&[k`O\2L'Fd8@1Eg-fNgt>(3jMC[GbU6k];T4h)GLl7W\\tK.7VmoK#9mVPs>hDZN5CKgf[X
%Jd[Rq#tn3)U!'+J"K/3Fn;N?i8^Fo2KA_5.-8_6/"J7],K[,EQq@!uTH8`U".OMM7At[MA.]C]sTVDpY)!\B4gaU3q7X5*=SLeLb
%o"),J*>CP8%V)&>63Ef0ai>ZV*:tSM4!6?o.PGDcmL+bM"u4EmTV9"EWDc@N%KmC]B5#Z-`$L@F"bR#8'3>MP/Eih<j:a*./0S=(
%"\i0,E?,CT:h<#(K`k+ZS9#\V=uBdlJgT;6QWlGrd'F%\7_a55$o(,##(_<YB->QOl(WL,$3EqX/2_MXkhD9JdEaFlD%m*KXeD:-
%m/Lt`hmM?*r[^21h;pG<,7tOo:HuV*r3B&\VTnA`5j2"phm_!,rpp&8T>.&6NVp75f<8LE\%[=iVp!8IMtODVro!``p$qqJ%BFDr
%I/gl]oY3D,oW\2Dp="LLg5i;EqSVUUs'o.oCCbjbebeeUKEP6FWa1nbcNP_Ze>UA`Km8!73,enij4WJe''8XV):]Pj?U,nV'<lh(
%$&D%UbK:t/'"cWohF,lOCiToXiEbIT\^D"m5TqVK`tHb4-P'#q1k\4C_qE."dS_"r;.GUOcY#S=$&QSoDk]ae`j'Lel(POiL:Rh2
%40J"a^HMN9G5r^cV8!.V-!_?.7RVQsU0\@[;KrXi)Q>mA<6#OAF0)PFQ:rI>1];$Dnd>/=o&,m1_,3nu\7URgOY6R[&N9e(rQ*=k
%9J<V7nmG?/hJJ@RNJ7\q=JT"ZFDdr,4R*lDcdI*S20\MVm>F9.*NCYZL7.HrkoN/50?#?g6/Hmmo`==m&Ljf4H]Zuck_Z5%fFspr
%;2LJXOF"`2+*n0pD'L>C05[0u>*YJ?G\[r@q9AfNcrD&/504I!]0><VpA`jOc,kB`7+=5Y^Q<,D+-b?:kS.0CXRmG(J:o+b7='-B
%`lM&DNna>rf'Yp&c;!_%H>"_KT8@"+Db!ieH\Zc$)0LPqM@\AOCt*ES-D=ABg9K%HPU#C>ePVN(beuejqjj=VCK&'SBKR#WkD_-k
%j!(!9B`Ce>P#IHO[$d4&kM8-6O/6hpA>KNLhoYsP>399ulIOUb__1Z&!E"T[_KgrDq;5"jCI0]:2mtRU+rq@=1OA8sC)gb0&St'_
%4<SQe,\+utHcL(^@8Ldm,t8#;ar"*3#h%oBr>9$W,:/B(5#(9Oo"ragOhj;MjOFZl[!1sHqcNFMZpr,n(J=EsktN#W:R-2Pb[$<?
%-cG@^UL>7dQV)XnE*IS`Ng3@ZW4^(mBZ_a-Jp^Z4rGqARVPB`tdg"X(+h`%1>'=`,CNYg]0#X]:3;E.fQqT_o8Jbf#5)Sa,.RWs#
%oPI)AQU*Y.&3BVf2k;T:%aG^T(2PFmqa^JI"*DasV3f$?(JZ9P:;>=TIg'9Ia<QocFJ3e`odmWn`YB/.jKFCO9co'[^c5Vg3RSt+
%#R7e$KsM>ROc4s:%Z$@,TUZ[&`d4S4e1gs\6Fq<m.8.oX]JYV]8p0\Pg.3#Pa&;/F/lbA-*\$M)b5M(]n-C:/^M52Y(Q(E8*hXV1
%4,0NP&eAm04]hOMO?T+jnR^SWKp_q5TPR"'\)H?l3:BOb9g.$uh.2]\m_@+9et-r&8ka,Fn(=MTDLIHncGdoNI-@D8ctgG5@Dg%I
%N8l-F7Ym&;$8HUnJMsZ2)[iQ5,\0d3kdB/LA".KF]cfMYHlAKISEG?Jan,fQ5\^'*I1pH;X'R&%lVtoeN3D%U5p'?@@iYHH%"3)O
%_^/DsN2*[)-Sn7N2[f%mh@Ib$-q2]HDb=$4"^dEMXsu(8BRK7c:++q:FG'Q!Cq?t*TYi!SgfUXqH3E)\W!cO+Q.8TbZBUYB(1I]"
%HLH:BnT5qD#UV3AT;N4^mN^.D<Z+TNZ5l0Vc]g5O>%IF6=@8'(<hXg]P\j5J())ZsU'&kbm7]kn6MM[T1<![`]b>-\:74TmEN!Hc
%<cc]1d'O!oSF$#/a^0h5-87Ts[G!6fEREo,f^cPL!(]>,&%>=U)8`,>4BC[!m^rm+:/>U(aPP*8\2+7,*?h5I:kmKA$_n5YG5TFE
%+P_bd<O3?/0Ctj;njn,sj5$S$a5JQ+846-H`J4BaX`7&o92<XP+p9RrTWpPCFQ(SW@]1c@ctt'sRiJZQm!CVs5m<ODD7PjZjA9?2
%_hOkr-h=]C)].OOYo</`,c8%a29Cbe2nMNE0ZqX@7:dY+C`2'%Z;p"^0I@Q"\O9(j!>=]HS`V%r4DDh0No4UAn]@'7I8:QsE?^h^
%8_>(1MosTf@PM>P7>Xq\`jqhm9.'-fB>T)AH$/QmQ42*-RR(,`aBbJb4Y&D'IW)UZ9eR>D%l?><T3?>CG?U3Xdh(mS7:cPINa=q7
%!X@dsQ'd!PE?.K?7?)j@#:h-%OsR5uM=%1fL;bUF6m?tsdPqq$RZKXi?<bC(2k>/&%YX1pS!Zk"*h$i>Q`M-8midNo)beXIc@+c5
%"c*TQJUiN3=A#*&%J$1rf#^Bu9Ne_jbTSI@La7b#lnfSH%GHBnq]F4%5)<h76rFJ'Ca7r,a2nnT.rfB9+:SuecP`JCRS:[g67o`l
%M>QQOR_O;t]]DKE9cXs\6Df<DCL<:]?TH76V6UK7jnMY]V8Y@Wpa5<b.bc$-cQulHUmIV[j6P>W,4(;9qUrsP1HD&2^Cl]4"N!Q`
%+O:7M)`d1o]N;qijL&a>+LXt6n@oZ-&^>p]lk"X378k1(e/mg6&QOe),LaU7NS66"5H#Q7G.>[L[5,SV-=[mNR<sUJ<'.'e/k&d6
%#D=#<%@UT!8>n<sP+2kJ&)I@GggTjO'i^[qD"<ie;lsW5P<%]=4\mUT;`Y*X.FAh?i0N.E)@lj3HfL6sS2hJUL7Y0`<`Gm:`^>Qb
%2mX/"%,Nm@F*,FqWa,Mpo4Z/k5h3uEn[RcMDH&Rj4A>n+'oLjSQUa1[D]F<>UQ)Zs--f;B%t):OGd-kc-3h_\k+;6o%6O)<LVVLf
%WjrgT0so9q4i0#0OiSXXc"kIThYrXfAsAUHVQrd*K-al(jr0r/aWt[]:)(07)0[(^I_IUil/7/@;Mpa0$nfUA"N.2g;JHPp?1NTE
%R$&",WoAP.4Z-/85+9a7l]j0O=Wa$fi0)=&2IPO?H@FV9c%\.AI5r2j8&)mAQ'bb,*(B"Da])A<SuA\R<h43=K=X,=hK'G='(1fX
%ViaGKR7HA=G<YJ#DUYYYUhl7Lg2U/?lB"]+7.d%nPDd0(CQ\;oig.su"-:JIShhr]^`s)IbIo-gkt7`9P=%+W`C*dJm/FFT^G@K`
%=5E8_Y!+=cd2`AC?9f65jTWVkV$AbHb]7K#XOH\ArR`V#d$'mF9:3YOd^-Rf!B[(%!=1n=$%8bbO<BG,U&`=iY3t]14re=]anCLh
%c)u08`PtJ@\,(pmk9X"2Jc!i40?JT*`I*A`Ha]7b`Aa5W.60Q8W/P1,f.sX&6cE_=j7*4mI1W`Q&sIU*&k"j#2lJ_VWFrh2LT3M8
%C`451VL-?q_p/Mi/&G?p0]=XC0#ijkVI([IWa'W;Cf^\CW/0>#VuBWA`S_:fZ(?eL"M`$@#no\nb]jQ0LKM3J/VurZ]1lSrS_ZAc
%klfPM9>ON;"+`ZcIN1bpk:Bst,LDp6)hcO-*FY-n.MJ*'hsK*'$AdK3RjWA\)?MS2#$4p`5?9fK4:7Vsp*c2uLmZ/MHadX7Br(Z&
%'d^G.,uPp_e9dPX%M5]G26RKR73RhZ=a!bD.47_1./,8o#@;&o'pV/TNa[5`e`#Vfc6iT;R"?AJhBFX`-]M&5!Kgd%FNgQ:*Eg^#
%ilr[!J/D6H'H-T3&GjFg'5&`p&mm%MA5eN-S]g[_oL/8a7$:@e9]RWP5bgl*<s`.-#]an.$pn%glb@l`.@"o`F9kVE:LZ"M]JU"d
%?Q)CglsPS61pDMoEAWDCf-q:D36T7F'1E$N/-WSGM(ZHBW3(].=W<8)H-[=DGW9J9m;H`k!nA*0<Yn7a)A&HFF&Y)KM$%49R5jE]
%+M+O%@M#1RbS$N#)0fcsAfO<A]XM+k^)Z>hWP=AhXO:3!RD&*6+$Y(EgO:dXY<`oG*.hKCTSmXuI"XX7+;T)"'JTpuJq-Z>nAJuA
%7!9$D.JCDZlA,d[/ou4>p,S6&P-]+HqU-0L0.or^8lXd$G%l0$$h;;a#hFVVKg`#r\F;Y'G77!*e`mJCAWZT81A)E&UeLC*(o*O]
%P!q6aJ)Ai#RltUrIY(<hqs0g0)SgH2cJi;JpB':c=]`F)(?//T7B$'8k\Cn[)FpC#CQ6J47WE?FA!JF]^^cdEA!d`Z=YN[3(.^pa
%+NCKLd*ED`7^UYZl5RHC5_Q^*AcXD-$S+NPp-g&c/]AWT)agu7*K'[+G8@W0WAkI47Yun?U%BIi,)NW@L$2Xt8iCGrrMW,^l4Tf;
%A.]phEAW1oAj"jfI-oc265LaX_e`9Kg`8=A+-P(J4&Pf]r_<amB'V(*WG2qelc5d?`@9V'D(OX\a?elA;jlX<7/1;R*Z1A$X+UIe
%<\';nDOVPEgI/)t(U7`TWgH,MkMVc[]X3^3Iut7><F!<97NMurKlP3:)eda%#6Nn=dT+g4,ar5>e+<a:1S$58!h5dF923)%kZQtG
%`,Qh]n2_+0[T`f&6ghmdkZ'^32npJHFHD'9XoDMfA^KbkQ`Q_ln"k"p8gC,=VO@Cf+ApD,/RBr#D1r>oaN(`OAMZY=s0CsBFKC^L
%fgce%e.R<`Ju$>sg6bE9FpP%ZYc1lUs,,^=,gJd8FVVMI3llpd4%"NF-42#+2oaW7IRqKur+K_nN>KY]P:m&D3`.GjQKDb>P+u"5
%(sR.Wq/QJC.GBF7a@4BVPEmJr>7[`3Ap299/"OJ3jAZ7&>P,L'FG9&HP4W!o8A41/^2YEU<h2dCJ;qbRX<7QUEKH1IUC!@(X"V$j
%amX5NFS/Ih/2]00-f+Ao<f_8sj`#n#U*fra.]/Vr9>,9L-)t_?$CeQ(=/S\0bW^jD3p3(%$Pn'prcQ_=;2(gsgs"<sC]s$(Dc;sf
%Tdka'MDA%WA$@_AaTP.K$DrR"QZ83L&2o@VjXV$'"u7pp,\%k>aB"g"71uV.OLFF.6aVek,KIPtXZ^rSYX$4F^hWddP`T%J1s*[e
%P:(rb2lm7lg)qf6<tViD"t0;Y$J,KRD!0N(LB@>)e.F'@XVA3$[)Ner.B>=0%jH-1<+U6dLGBd#nUi:LUH&c=bF_+cW3^=2+c&uQ
%o8-g*"-m+1BAkOXlue*1;.QD-adHGVecY;5^4$]5&nJd>rTkH`Q8?GIF15Ybmt5qgEr:/6Ejk1@N/I?mLk?>@q$$j`?^-c%G%IC$
%HGuf'10k)li#kq>La.*8-5/n4!&P;iZ?2gL@`_;ApY&W7?;-#J@X<VhUoGqC\LB'W,/$h;W_!^e2B(THZei\>4E;"VBe<(3/Q=*P
%3`26fCTKukoKraH-QSZ\WC;fk6*E_:gf3.M3Z*I[=ol^f1fa5nqiIXQ;-8o@=sfQ=BJ*<:9iOtpdj!He][h8'f*ZhIrVLnDTj1_3
%"OWT!8X\/IkY.k=n;T!,.@@(2+86f!7?Y`)4_1gCVaK9hOX%n7cj`#g24EQ/j"`S\cT16(1BV"tDOM+5/rO1AJ5g@e@.&U/_?KcW
%W@Em*;MEK87,k([1nf8;^1Ya(@%nI6$_i4=.;'G9_5A6EEb:2])CS=4e&>+'LOeSgKHZr@T,5guZDdQb-^Mb#8m@#RX(Io,eelNq
%bpPo!cdGjtZ-7B;-H<,/LOs[F&>F>A_6q<Q05AHW'&eRj,TU&$P9HSuS.`l9?NZ;r<q$;3A9)YS<V[8&09Ul(X=u-q&VD]e#nXX:
%C$WE5:?V9F,`+=FD4:G!U0[q]-;N)XN(%l%U.-u:a]4:ge&E!c_"UPJk!=hK:gJblF^B^0c^Q1#RX(o\7Nec[4nDAapHkZ\8)_T6
%p)XDSolA1j7#lR97:j1UgB9D$Z\j^[HC1Ws?@[he=W-k!j\$jP4onn`W`DSdH;h86Xj#u=VM[5C?]@b$@dO1dA)TRJ]ECL5N2iLq
%n)'q1Whh2'71'm"3U&^@5o\1T<PM9M-3NR\;UVUDZ65fND?Bt(eFe[@B*jr4=VjX19H:\,0+OJm[C>5iQGGo7[-j6=NQ0?[=1JU9
%ba(#pY,%aZjIg@RMq0ebAD#sMm?JkYj\4B6OTMH+nBA36-55/>=^J$>&/o1k,Mq\N1_#5k_#!_5aNA6_#FJ"=As%c]#M&Ee1]].Q
%o1ilJ#L$s`#<UOoj+3A'XED5^onuCeCF3L\Qp8fQEuMc]U5bX#Cb$ss%"oLDFk[$tjjIPa&HJB`n,u]u%8eC6/-3$gr5*5#[^SLH
%jBYgpa%g5?!%O;%=%Qpdf%)tg?kB:h%45ZmngtM:QVPN&F&Zn^dn1dH9T3,NA?n-b[ncaKm1Iquiun_k`I\?BXdKHho"BSpd7hJ"
%Yo[(m6D"PLT\"3WiWi_UYeJ=A5XH/r&pqK_5cg7ta[kLDEDraIhKca;'d8Ni/!chQ'ouB]X;Y#tKOD!-1tuZB>`nE1WhcGRH?%d2
%,.8G..blURSM(_XMph/UqE+Q_eP#6;9EYt0^`%=/Oo;4L2A`8(mNB6^@cgk?]H<m(\H&\QWZ3:lQ"MnEQN"S/\Yej"@m-W^XBre%
%,JfMa"s+/-XJ$h3e<g]F9Og5!;Ie$iNQHe/^os9T6;h02liEIV`N@<AnEh'dOm(b)ZNiP!Y7PYZXb5\7I<=aD9:WK5h[r[\6L8oA
%Z)\IM?=%2BJq),g<3D+iGB!ZJ$(NP$E3tdae614!!#6pp@,S?7HD>F;Q4QNL/Q(?EHD'"lLk?#kSgT73UrtB&@>WA?'M2f&,&no+
%N\p2Ip=.(&M'_;/E>BstfhNY"Wqo:Zm_+&cck3+?Uk9l>#S><Mr5UiSbC\KsP`<M$2T73,!utGqJ3R"d(3R0_!`q9/X6ZPA3`Z!G
%=;)?h*q^EmX*Umj1FL'8[LP,U,$Fa]*3TuXLRU/)Y>0?[fl*sI,_8)"N$5G6[`Qsm6][I*/C967URF1hZGBke/*XuX'?#!Nl7QUn
%lCXaQ=`m:@Kh(!fkU,gITlP/T+5L]*(_fh?RL?=0>Q?@WH3`"D@De@mVO1:A];U7o,3',;;NeX<7)$GkgtY1MUQT6t]6"&/_U@jB
%nU$OXqQ7nD.$efo\S?[)6(OMOM<;]C-o&ks#0@/[,KFFPENH_F:b4Pl]Y_]I3Do-o\\o9c0_7]dMe44>>-:tG,F`fB"1pkVW7f(>
%igZa!Uj4H3g_'VX[2$PRe>O9#No>1$"s&<"D/uK;!M7q6d.*dG#iS`'.pW;]0U/U:\A90,'AoE3;1ZX[Xli!E=Fp]QU*a3Rk^->?
%6T![s?u/ncA!0I'RqbJ0_\OiE+nT7Y9hcb"[e<DZp!V8d$iprB[>,l"$c'N7K>iF-JH[UuWke9AA8&c%=4*%k2ia.EZR53A&Z>dH
%:XrS412-<n3f6$Ebt?<R0fK0EBbO\uW)B182-M7P<k0.Q]Yf%l",o1j42.sgNKfS$&^=DkL.V\&^^#nbTI')Pq.;e)?W'ch[)<E*
%OViEU`@71jQu.\+f_rV-:p4qKNu#teSeUN>Dp`BrSW"_,SfWG'9X^SB\8-#\@*"XM.lYAZ5'h(I&]\F1R."e9[VI&[ll+q1oH&nO
%RHO"\08=.:P"d-9#;K"=K-b8XEUX.3pT$7[d?\F()@[E[hbRsLl>AU.mEfLj6YrKpHJli8[3#3Xa;d39FNpSTW[!s9;k:Jba/U#8
%'\mOg.%ih5PL$M]UP:`?15KmsY8N@hUO\Yrp+pg,Q_;R8DA/XPB?cmgml3akM6Xsf'YAV^$t,ufai+uOTV6&ib/jAjEWfqI:rofY
%?/"[=Q`'7phbe5UcPk^/9G%b4(/d'LB]=m#"'V8:D%DDf,tfNXE[sKC)YA-),Z6YrP3"3LY/V)lT72]Id7%tsJ&a0bQN"ao+:jpq
%#bY`8/HtmK':Da.\d,Z3+0`P!)>#rY5":MD&Z?[BgErBPOEuS:WLK=GU7'<H=K!WC:Y:b'*NDKTodG7:!.<<JH-3HIX\<f^7T7Dc
%MN+\WW\%uLZ=h#'PW`#a]t*I&>2"9H+J*:Ud&l,F_1:<!BSai"gXXY?5`@a(nV\]R7c+<%LWP3,\2HAEk."!Q>#t"<MU!Ipd%eT1
%7c@;h#*$):1$`4ZS+2]T!G\[gdYc^FDpu<L8>$rYQ;0c`GrP/UT(D8*10TZ!;XX;;JY6UhS1T_)j.B<Vp4gZk@^$Hog%1Lu8mmlW
%9QoQn6nfba];HeFSG^tACl_S?Nd=K!cbK)<qA#`Ylr*hA):d5+jZ'JrM*8j585sbq!%d*QG0NopbG$Z\Hk2!3k_\B2<Y.']EVb(T
%RaA7r"Mj:C1kq)!BciH8:j!jE9oB)dI*oab;>;2kRs)[uU&ZkY/K9=1HF'#_KH!X4L=+Q"0%K?EQ6Jdac`sgF7*fH@?oHk(N/"qU
%eaBNY@&b_<)+-:R)00;U76I#PRk92EbKS*:WN$C@gCbqT=gemCPk=fI2,9,*.ZFVTE(?"T@3:jG0jA0iR)0_l*j[;>-GlWr0&"F[
%Mab3C`_T3+@@-Ia[Gr=qj:?D5+=f$TrPIoAF,$^S)4Sb'2[Z&eA5?*#"bYs"XMI"^=-N,?.]&eS]!t')?kdIphbiG/Sb[peT@QKi
%9mN(tR&E[EfOf4j5/nWS:A;Pdq&X$Ak*H)R:?e5SF!+M3f?df^Yb;rkM27Q[E&B$]YL/6LUD"/HY^=K3)*Jj<;+M_tA`Sl&jk/D<
%rSCECMT5(mmXb/D]A?O.%u_'14ifOUB+Dib>`7HG/9g6*FqD\V$!.sq-;CK9#lN2F#Zjd\@4'9:LmN7SoFU\S:p%nC%[i-a4!lZu
%)Hfh3)f5ut"g6l[/2<k!Cc.0:XFV3<:kslh-c>t_.I9?KTuCo<@&?u)*208_FJ4^e1FR#_1#Q0uh)_?o76oQ:rMW3qBSf;fQ]&gK
%jc6-iTIpV3bB8ud2Q1P>j?1"-`D8m)?-?]TpmEAoU"EeO!!2DRif4+rNslqfPUp<@F$kkTjMko",WF;4&5^XJ0i3AS/(T5#C5BPY
%2PbR9Lu'occNcOL71P`U,!Of$=f+X&TSqj?.jfR8EMThEXQ$JJ=m3[S2dqEZ>=>d[kc3K*epB?5c*<'i(*r6N-_[a`DN\N:=S4s3
%#F>)s-93]I>#K\9#t+pNmNl%=[H@rj-MDh6$DD!>Op#iBOuV^"p.Ii;o2.S5=f/Ctpe%.!"68T](3uWLNPd$l7u9\.jFd7mGp8Gc
%-:T.HD\_I:hTNiFO:P<t?$[p]pRi3>DHnQN$XPB^+<&s6l/$bpf:0$Ulq,Eo><Z@GF[@0?Pu9K!'kIK+g"+5'n`VOH-lhs-3E0`N
%Qb9gF7VAk7#Sc!*8;89ARK,/?M4gtI)'bCt](O_W<,]=['3jTIV1JDYKB^!=;0.%FW%4/6dZ]OWCt9m\HP6QE%g:]&S0Gck+I[Hu
%7r+pC`7'';3p=[J_,BbmWmr>la@j%e3*M[U'e-@1+>QftP*es8*!$5HO<7W8f/Rea1@LIK:4-I(Mf1InW1NZe`OZ\]((E.(*$\88
%MX>PfL?'6iY+p3&oSt)VRU`1T6ba?R'*e\t^!8uR?U5Zr?PB:NpPd5tK7QsW)@`cr;neDsK5*75c>u]_koieeEtJSn6^o?""GTr5
%HHc(LM+jlSKMW3jbtP(XP4NtlO/uip)cf6gJ^1GcJ4*=g<:pfb*\G]N$dJ(M%n>(YT>RV&;BId3Ug3@R71Q8^Bem"u/CcFV%X$#0
%&>2@FY%CV?!b_$ZYlm5HK:R<&/hh-KY@SCrY,X''&f"RgUS;jchSZ!E:5q<8jG#Q8.5pRd-:710K-ODrVG\"n$m<S_f?gq@.A]M;
%Y*uH2QJFTBH76+rC2^39Br7ZAU+OOS3jhUO[S%NbW'jGr'+i2Df^5TnmPK$l64b[Scnn'8E.eRSO:meW"cK2\h$o5hc+X8+a;;fn
%aH4(H@i6#F_*SDnf6BT2aG/Zn9C7HG1E$q+W!n/^e%DZ"l>T/o2i^foT>^sFUZ!VtfS9HbZ0HFnmqQTB#J8Ve'OhqsO35qnJfG&m
%J_F[Y.Iun>5BYuj(=2=bIT&;#.N2GCQPcQ=1"geZA7TFXe6CrBD[?`G*=FO!!Xj%Ro1E@`LaM(N-[V^G*!RK,mBo]*=VAIN@TQ#%
%)37r>G`V</l^YdYGQj(%/:8t;p6'!EcjiE`F4GS--M9_UPTCB2WUl8Un:rf*dmTi?Ih+DsW`_DD3$:7D$g)q6*5,j\NZ,Tq-s9X%
%T>70nU9l=Ac"4XH;!tspV-k(o\0UaiH0Z9o3I,pK\>_DoW2)Qh;1]%NOUm9m>V2Cpj(LF6=7\:;KhLe!fAIQ'=G#t37bYD7Uoa\7
%A.;!.Z"O(n[DYj%Y]PYOH#KEr(*0U:2C6u"9:<VNU^).(23c-orAY@r1a^PR)*cN&VFaI5e!p]=6N`ds&:NH#\pG]9k#gjs=Q$*D
%?0*Et&rE=6BNmt7m5#\*k_%LV"3E\t:ntZ-EonWOc*;,E(G9FS,eYgGV"Vn+)bsHFm\!s4-E<CX1TGmgZrI@4T6TRGBP&-HM8<o]
%,afCK#B+;m`G8-tSc!6=7^-nNQPl=u9LX,uJXA$E8)-j-Ph?ec#`X83n!%S_Ane>9^qpr9%qWm6"&)%B*2CUQ<kj#n^dmCb`R5Bi
%)g`*aZCI=5*@l3^]?IQS_=A?)X&'4V?7tr2c1;7Qg+>,$B--BHV9\>Dg+O,[*ep*g]hYW$T]M2!7c^M9?<$U^=QquC=Q1&\lp7gT
%K`Z0.TZhV=orNtZRBIKj$EAg5HDd+@.V<'KY"KLUS`#;1b(8S,=IC+\((AK/gCnqJUkccsWQ`6EZ-osL&b+RJc\'o@d\0p]<$5>X
%mY'Ue3%>hO.`_q$[KAF&6rm#^3t5M_K#6A4b,]+S/s^S-">TR0><la?q<$ibcp=TQbQSH#/u#&j3m$p@`4n@%P7-EV^c"$8b7_WF
%?3Ni1#`3PpA.6?@Ac\PA6e1BL1@m4tUK,hJ?*fr914.<XYadNO22N3>Lq5t7XsRR;BO8kM564F.N!7WA7Hq$_WKnM;SScAUCl/p`
%dD"7@g/)c]PhR!B`I@qn2T2\c%07rb$+6f^=[/@0kX,(`p%->H7Ga.qiam3)5mL(%BUK%4!.(*q+A`^6_#mj/9HPf,fL`.\\fEVD
%:Da<#PnlsGUS167eD"%J%PS%o;Q&8ToX(:e"'!O\L+mo_McMAr9VNFQP$$t;fHnZlTu!Ap8Q\FqS%U?6&6lBHO>O3uF);kcJm(>e
%NR1]2ep,G6erY+jE3n%"gQ01D_=Q/d7-3;?R"\H,Ng63!?>s&QASSGa5q$t-C8&*EX%ZA:;7:@=h@KfR]mB:P0TY:L^+,2@#YO?s
%Es`P`Yn[29SupPmX+i?/8.&4MZ'_ScU<\Z,+gKaQ*Y_bQ)#er[==Jk10T06(fW.G,I&OpE-lj__;=.][1:;V*R\(FbM@'L96\isL
%I#^6]P*IHueTt'>YB35fTH9(>3=/)[*DH&)bOC]M3"&`(U:H\kW-k@0I1)'=,>L4=iNkOF!u2U>E25WbbBOolg*Ne!;!(2-]$[);
%hnDH^Fl[8T_"0WX7'5`s>-hDlZp7LIT?Q*PP+F>OEe>7TU9Q"@!<lh#(!p1r72^H'Jf`2HA"[EIM%@1[>X)K@gs'=`LE-@*G\<eY
%@o.\#Y?`VI.+Z7%QLH@;cta=8Y@>qU5qEUF"R]E55*`D_]%Ka'kmk.OK@m7qn;q2!3&-5hMjA*Mkj(';W`YW4^4J-tMS]#O#SG2>
%U)l4MR^,d8k_j8%2"'TX&qgC_CpF.%Yp3o,g#MNG!W-B8:co^8p@437=m(Y%&EH\%<X.Ai#\R-ATjXB-QWG4eI9ujWL!(V\.pXAc
%q>h\MDHGIob!`W]@gO`U%n0O\fT)8Z5B]8,cQS(k4=d27BGaQ?%gXed4[.NBeE.'IHq.-Q/]2G$\3/kdJtFmnZ9a1Q.hB]uO<f4Z
%&CRcX)4]M,PalM!$jF1,m8hn&NY@V%C6D<m=%Cc9fODq=n;LK3^?3A.=5tJji[;ct%62$!o>KbM//R3%gRg0'Pb!pOQ\g$Td[!t<
%:ISHmM7A<<&oo^CLoSBt+>64f3TF/4W$b?R4IJJ909dOSedd:K-]uMZRY_29%&[f.,b(9a0A3UgKAgae%LJs#.<idNA/L-=!lbj[
%mMAJ;-$p7PMbX(oRV#Hlk'cQn:(1EC5mp\W--@dh!/3.sP+]qBGD9M#UYpUoH;XV'7Am2k/k?#C8L=F"R?gHQiG9Z2,!'3f&E9XF
%"<j_Gchl8+YNM#WZF6H:b;,1;KomrR75I/bW*ZVLU(rL+@cb2b$$oUtS0B4%^=@#(),5Gafm&qJ\iSE[k`q`+e^kOW!%T\^SOq'"
%0@`G@a\;!K5VL7uPWePO<Y?flSdJ.d.Zc9BqMjt;b\otA;uOQ=k89@rpg`_/Uh\-B.;D9#$qWc)3-["^Jjr/fR^0qU0O04^_%l*B
%31>GE)IuUI)@/`3#p<1Z$\H?('K(]]L:<YJW:9t"O4Phhr:aZLhD[+jj['0@;e73J,8G4IWJmu!#/k6oOg:0XQZ<lo-W<VYTSHAr
%VWuC>4,/4DTg*5X`8#,cKeUUXTEGKmZ7)KYk=&,Md2.cQeuXXP&6-ufJNl^6I>q.U0n`-31#\jNLXnsYR#Nr.hUK^l3"8@!4t0<R
%Y\]b5j;ar1[O+N,?3_'aYHD??iq0M[!rbQp*/ep5JAT]35OXVLqQ[^K:F4Q-5.4Xt7=f!DJe/()KfJ!!Q)p"O8T51'(2+P]=pg)J
%Bh^qYd@n#j%pD4gNXB@C=La\CX501/T:<;lrkP*I6a5/&WF2DW8AL@,q9V.1[sTZqZC[(C/6RTB'NPnH/G65;73T<"L8,'Lib5%(
%5'8tV7>:5c0FVF@<.uNZ!f1<cGH</4Bb(QFin.ij/D`ua,]>ii7PNX5MRjc&aOmY78V-7XT#Zk!a.H/@0&bW8Ni,^DFp'5Ic<s='
%3_7\M/^$fW]-8UX$di,&Wh`W-AuVAsC%bZ6+Y)m_%766Zh'Ab.2R&r*o]ier)f]B7$=X\a@b"[X^CR(d?27g<-2$>^BEk\S@Jo=H
%l9TU9,484.o1Z2[5hs^%9EPH;ndT:t`//Q(%+<0,o[=VX)E&_i*OnqOC8HHKZadiuc,ig<l&j\7$,W"M=?/@#M&fP#YH(i&5kF_H
%KgaBHan]u7\GA]59hQ2!NshdG6PRsXO!%%lMSoZTR&C8rBo;U#7ROqPD!g6fhDkI]RcZ6t9_SF:fhXJ;,P7F+fl6UN8#Hr=`P,:V
%QdM27d#jerLNgEfL80T!:oboJf*QD7ib1HKO54agajhm-E\+*_h<h+MJKeu6!=49cmj:@i;?L+K9BfPpC,\CQ7dAP\6NVBD)eg`*
%QVTRr66)5WS8(Nm(Pp)P]Ku%D,CiVcc0$CoT6KF:1n!1%^282Dr'ap>(JVh)!#MU>c,:YdmnAV^Hij]&0N"$`E,'ur>pai_PYZY"
%o]ig-;P!USHR5#86g\bEa7b+.)P"qH;%'oJh(&AK`(6A5hnh)_g'ttAe^q`^p(68S=[:GDE<NaWB8ZcR`aD?(^#gj/P+5S*@<-1+
%F0CUE!>KI@@3Z+*M%cpDbk09bYFCid(e:u-kH5YfCuS3`,^cY/Tia.*F'XeJkf2I5%L1*;E[K4gdacl/;?@`be80[n1!>L/Gt-'s
%3I4s9RYKT<!-^rK$dk3J]))()X)J")cHj9%pp9MTmk14q\UO5Bq3NHf2s]d&U*`^/IXZG8jn7<gc.V4Q#7!SFZMsjiEr)-shu!<T
%rQPfLa05O?VnYGXDdC'VhM:grl<i7`hu)I.o;cM>qY?>]e!m\EbEM7ahXIG(<knXW`VF*Bj$=XBp"?gXDUpI*=T,*Sr:p-bjE@$A
%k@`u(Y1K#i_QQ0$m..%R&c]H<l,B+jphMes^\V@2iRb3\bO=VRrd8bc8m4AbT7-b;k(.]B-PtR>NBeH^Auhj$j4Uc.k6klHm5?hi
%,uaW_Jnb-oF&Vl/Z_nn;^Nb4ue@g,WB?q@;"c]s94apQgLS$I`Kr].lF+&B+jQb:WZSo`L<tB/?ac*qYhY!eiZ^[9hju.#RRq5OO
%2P,0blMB7:kNg=?op`]+5P<%B@\%FJ6C1b\hjiMm5/d"=ds4OPrciV#?F&4ief-]9LI6CZ`4eB[\c2R#qL?.mbIZbnhJ0g)an[mA
%m./]G(T02>IpTKke&IlG'9:\6Vff\%q<E?aaIs%Z17O'=ls;X52`&SK+5b!n-=_N'Qf#lYI!t\QqK2]#ouW-TB;Z.*lH:Jtp#Y<o
%fn0Bs9]G?VqYK:8l?^9GHIM7F2.r6dEK'_1pl1o4UT9:h="hm;Q5u<91^XjrhE6<!5?WKFqIm(TD;fU1Wn]81b/M%D[o_[77$[Z;
%qP8t[kFZ+P^"b,Z4/'kM0GNoQ0"6@LmWH(R0"9Hop:B$cQhtFIjl5=KjVCR'7s)9Ds#@Br-gO"#cbFpXo'GY^8)^%D[P#b2\m<g0
%q!'4ir=N<4$RFl$2pXZjs7u!aj&r2=9Ufs8?Jh?hHK_6[@B'(OP?0DESt0+MH$FMe/N5?8DU4WQok,6)lV$BEKEXQoTVB*cG\fP;
%])(j,Qg:-mS;&%JlX/#oG4Lli6PN!Hhs&\eeb-]Tq#"R6ATlDtFM>[O..&q#k8$HP]R4l#h9"pXldM&/':Lf9Z\3gA)D>I!:VV/I
%d(/rWq8%fuF:37sS+WiRPO%-)ji,d3qJs]bmQRq]#qhk-dFI@%S!1=M?[lTV'oo/5[JtUF2u;ilO7Lm3lAfT+/@Jf_5B+d]j6+sD
%hj'/jjji&Gc1*Osf5KO%0YWjJH7X*S:'s.B0:o;\66DaSi%7Y]DrVM`m]Ep53mZQ+3OXnL/<F@j#R_CMNODq)qdIVBpgJfqA&7j9
%_aF$cc,"8k*$-k'c/oQrc#t1iPPjM<m,n,_qI[i[G3XO($diPOn&Ft*RkIR_*n1bqQfDs5_/EiJI2bY]aT_X\qYL(H^>r$]43J/g
%j'7Xh3f8?McT]M7hW_Pj']kMob[nubJKKC8o]YT*r5nVXrRV3:Y3h;>=`e!DGoOAf\)@f5A3O@m4?IntjGR]hc0CaY,qA66g%i`&
%QhaBjR0sdBB7.!X2VD<=qMe+\=4]*s?_(PP^OW;%Tc3L3f[ud@D(5(&7k%Qp3gW#$qLta4`t1o?#^Fq0$iF>CF2!.d<0L#tn/[O@
%I>!IIMg![[TCk^Gh7l2phU1]h"d.CuQeh]/'('7C/tN61fp.J.`rQMgMDL]A\#&<q)pV*$%!U!kPHk)&(#LXr<kH8O(//?+rA>ZM
%E7Q!l5InF3T7=O<?_8sW\(lCB;tKm$JVWa^kBHZ_%Gs(9S@s;iIWE$6=C9q_iT.sQ?9&fLXh+b>[[kceL6_bE](;\drV5L]duR-)
%;Jiqo*-(;Jg''CBh79;0AgGGlo!fni"97>&9ObX0gS2+.p=$8lf5`8/4r+t?G3@@.R*<m)lF6/fICCo)lFXCoo48LqkF5]&o<ZX5
%ab%UqVJ2\%iG(palD3[A-?[!KOnHu*3dLGcm,mZ\94l_DDJE3"k<GR9oT6:8B-oPbf*f+q\(oJtdXp^G>664kXYr%rbH&f4S*fk?
%e]"T@6m0^^gSFAZ<bI!'FL=MD]%YpZ(5NCJ-.8-0:;_SQ.a?^d9I3q_N4q_l\g8C4DR[S_i-3dS(JF0rC:7!aioK[s@aT2qc+=n1
%,62=;)#'.@>G7^\5,Ll8-'R!so>Nm+AXi%mMg![[TCk\qM=QI\"tm`&gUUFNe&N/\Z=G`&EqSdD/BS%AE^sS9*lY7fk[\LZ/B[3e
%MFCZ'R=-X/4r37H\8CrE-sNS7]HI::EQ4_(ieUfgeNTj4PU2OH'o@7g@o4#D`O;D!`u9kVqNt_hQ:tml:ArN'V:ihTRRM#f(0k@5
%CUr3XH&ElZp+*CpL`<t4&FX]TRiK8>_Cti^Z_sE,T$#NSfg<'(pX^%9hl\+#4>q0FGE)I*;9&HU-o64ap,7:Mn+k[h:U'"tHbQrO
%CHKAaIWsTrHZ<mUY&,t!>@Wlb\_<XU]cC2/$Yt)tD9pc+>j\e8[Ac[[km%(?g\+2SI"Hjt-+d(c_#6!6qdWV!a(W::fH6me0q.Kt
%1p#,W!'["H=,UP_->b[fOYu:jjk4"lk?jgQr:KVoc3E(FK_Dg-(4;qDou5I6GTXO%hK!f8D#N2Cjhld2B45(!egEDK/-=:f[,'6]
%?G6Cpc'tW=a/.JLdes#AE_?s$p:rMSRb!rRNBO#Z2BfZ5gdcfq\^^UAXP3](e:)<8rM]['okr2E2Q),=%H>R>M+3Q,:uO(#k\__2
%G>Y((SI+:_2P#?;0`GoqNbq#Y%hA)AE4,%e4)FeXjKC1B>eOsRlPH`Gi`#k"5MIG.37?LI,SsQj%K#+X&=VimT[Cctc388kE_(Z3
%i#,[*FT(0lH-YR1[X/Jpq=\EALqCO)[f1G4\N[WNI^-UiEg,kJ/\+u9fr7((*J#k-MG%t+*>*5#[eib5IAYoYs81+>^HXM"hqnCF
%X_`4Ms4n.an%LErhZ(2Rj2'UPqquqXqg\A>hm\mmi;rYi7ggWb^!Cmq/LF\>f\64MpHIKJchFPqSY]QVl\/1!ZdtW"A3[3Bc`_eF
%o@2(3^41U\)B>7KG]U^fDEk?[)0LL`HM60=Y?nAmXtH2+ICY"ggj*@=;SrQ:rp'?lVG/YuQ1O-BcMP'KVNlT#Lb>OC1OAC*@XAL9
%hEnZU8aS*?]4)r<QgW[A$eZ`'G&J_^+u:,&.j'1h]j>&pe>1%U8+#_*qu5lU5G)5PYAZV9?9e>NlMBT46,3-MI^TP@3%cmtT)A9J
%iml:@[1m8o8m?1J(ZknM=eE1\(>@(]D)Z:.q;dJkg1)hVNQ.iC_MZ@<E9NkJp5KqQB$8?Rpor;gLR0[FVbOn:IV5&NgUlc^k.gf:
%M^GncZKU+mA7H9XE4>%EhnioLpQ</JAT)hH)d`5mQbD?hDg;*>RD[nNZ<N&"0se+C7BA1RJ(YcI[TEXf)d_C@n?P&TpiteG[`3ji
%[4".!D*`Iu*Id<+&s!`FipgR-^2oLc-99OmK2!lt#hX=)M'[5qG-HfLJ/N^<M-l/55+]n5NtuSAH,SY7hiHr52d`/H4_Sck?]J@7
%PdgU3g`nQ@0?7Fk:[RViS^=cfk\f0#0Kh#kVRK[Z4o3SJI;)X7o]+8hIf93*g!u/\+uTBO+@V>A.t7T.eikU6CIEcF:M4$2..Z%Y
%>\=fmo9[^=XX/$j:i2I9D>3SQHL>qKh01O(2`M8ulXpT.nuePZ05-CGN&nc3Zau2r);)B_H&$:!h-#uUL:.I.RL@$:hRl4JYEqZf
%=i3tiGV1V:cAuVa(.HeG]1l#^^nh3u=X"Ao:`SgKJB*1=]PL0*Lpn=fDYJ=5Il]Y\hV0c.8>k-d43%%$lkiCXYd\+YXer^GB7=d>
%f\8-hD.WEaN4g6A8*h'h1N-#("XIruP.B2j(4;qHY"qf2:<l)=3a36:bg3um_cZXPRF:?G*6kg`h"\'kc>HB!19\q:::0oYg%hAD
%j&t\B9l;pq!-Ii"aijAGYLig7eb\iYM1T]IrMJ_c"QJS7e\r?leGX[?MG5%.lpr]^3pmF!dZV`=&YAAVg]J#QJVNk`6Z8RH,6Sq=
%is\)\h6m;rBK06nm-*SHM7e;F\QLHqo,[p7dLqE2]BcMU-'p2@>:=a/)l(I.^]qJ&_p9E3?%;b:]^;0D1^Yju6FU5nh1M:M=WbE;
%e,$LE?@,'(&iK]/"ahnjcAi$T/XacTLO8^kmHI"&rOZU"?a;*WJ?RdQ.,;I,/DE%+_BZP.&!,<V^EE/^k:H-_?B6aSB?,/*AW*kG
%k'lP$mBsL<2Rh<#p=e;FBlaXbY.Za&fB0Mn0g<JDYXbkB/\m@u;0?cmbkC>W?CfiOF*i%IYKm)fX)mNFWH3upZQnbjJU8@Dh7m6$
%4o>6TA-nIUH>RQQRdB^Xh:Lg2>@iWp3l)l!@Ikoa$PV`JU^Z&(j%A\.1&&0j4,>Dl_9"h]k4S<GA8K7&IGSLPY,_CQhk$I1rp\<m
%8QRQ?:=!g,qNjY%c^-RTSM.6G9=mpc]7n5!GNKksSBn>XUYfSAmGo^"\e*VFlT@6"k2-F%Zh:_I*jp+ZOt\nW*Z&aAo_%d"f6i!m
%Z:GOo[GKD&qsjKVo_*>T#_)8(/jGo^m0>O,^BLYb`AWd[/u]3T'&E!L':YHHJrlUkYHGW%3F+;oPk4$a"nj%,`o8bV4**&,0228a
%JPKHPE;!'+H?SgnOn6e#DJEVO!dLF3H2DHP\U2bJ;cBD@BEOVamn/!(jG[uGj(7*/hn7-`&/.$h.t/kB\]6>slm7:dQ42WMOR:=a
%#>6c9FQU@8bDWFEoceDQmNYr;:$?!B6CkX`aBg:K$UsM\.,)j45Pm^[Q8?2&6IB#'=5WR1p<acKhdN&Gp2@EGb>m23A+tS5mtZ\F
%A#>087[r+<9BNJ>N;Tor,I0Smr8F>-ZT5P_?AF<q.qWjYRqB?p-bf97qX!A?`HkBIL7Pn#QQ)m4s*d'p]D;$Ylp2A,IlVC$;r75k
%EQK3/rGl.`Z0X-aD;nLkHZ:ETXo7)N)",CLZlngq%;r5no59rnm]=Gj*Q:eALe!9[o=1fX5AET\`sa[!-u6N0&\Mb3A[WTa-Fu0N
%h(?E"fEiVe<eL<khbQ^eo5*[3-)XBTm_[*"qFg/'p@QP[KV[uhQ_8Gl5J6EcD)[r/>gh#0L%ooe)0)-.6T^?kEUXf11(G)@hHQ&(
%na<JP)k"tf^JI,\-;XXOK1rq3>dO*-mEnARrB4e+#Fm&Y-"'W#I$A<[],a</G&+GW/AWne7(\ZRoQ6cBA/"Cb.GB&uqCu9WfPBAl
%\%_k?g%>R:+5=6@2^dK8=l#XQ:AWKBgHJ@,^FqH/c<>.RS,E99jloi.a[R?#-9EcZ@J/9^fr+^a[cqYk*^;H-ZI.SA;K7fhr5\,e
%bEq*<WMHbPHiEE.R]RCS*hDuaXclt4_XPCJg8lR52gsJj3Y_/YnbMue_teZRlTW8Xh1SnEUCk.M&Yrc^r0\LqrpK?F'gj0K!pSt4
%=-m:&?3k')5j2"phk+1Ls76/9T>0<5,6.3!T.[jk3eu2Me]l@hjTk5bX,l.fDchGZj88;YHN1\YjV?qQ#q00=?Q(Thbtn-%?e\BV
%fk<UQgp$XmlJMVO=?UF?I.J*Pf\Y`1_dOD1lG0s\"b*;?No,?T@.IeE%_\Xp%YA%.e3cIM=SS5g3^O4h.brOWnE5tgTD1-"*7d0Z
%2ma'!%nH7)mT<iA^S1HWdVmQ,qh7(Kcg[uqq$.pj5(Shj-dp^uL\\?=&mTe_K)RhQjtu53o!SFX"$VMM@*im&3d:N/N=1Jn8]3M9
%mO7s#5Ki\iN/iA(hd`W9Hha7V`ns_PF26W+61_981An-mV34p8rK5=$214sHf)4-L]#5)+[eg""jOm\"1fr]B[.FS<gV?P#VqgQ/
%>O6tCY8`5ISSt:Gj%9UEPpN63.c]Gghd"B0VYaToZ?gQ&[*L+XqJ8m*:KkCY:YO\)e,/UaeuYunhpg,9Fts#cqU<7_5>Kg?[SlgQ
%&+gO](Ac</i!j]`h(&0t@(Ya;0.sH1DFWGK[Y(IC52?au=e@mj!t]pmF:5HV3R8LM`,`CM>9M_Yd`4FRi8Hk<Dh7f_/>J\QJ[PZ0
%osEOu2tQqE=&0cBIr][S^A<!4Pi9f/4g(tAIs226o[?lScfCPme^Gf1J(!V_``6C&>a'*cO*VK;lD_PQ&u\g^2j6.>Q.qWF=-5]2
%LL7/Zc8d9]J"/Z*^HOkl`3mV65J97-p>=Fc8LM"pSml40qLd<Ws#.PHK[\i!r0s)Dm1h*Qh.$DfK^n)iPbkHG+5684+0joHX1n67
%s.&QRBfpKZ2VN)W&Tp=uBA1`-JTisLUg%"E_cuc`7h9P$qGt5=mDhsMU!R38h9U?;rN1Kas1)cD5M5_$IJmR2GP:b.ZKBKlqP(La
%U:<98PjeQjqLN9d?5>qp``>PFDR,k>a@F_@5,eG#aj-!?SaDD@5E1FeY&nD,QTG(=6fIjf@/*7*g>tWE><g,C[`R:[HYo(T`>NqM
%n%JPbDgVN?pL(c1gj]"+]lX5PBu21Mk8Ao5@$u"V\JG*>L/?5q(h7R\D][%<n+kq3'3o7Y2<iQMT8mVjC#s>#l(=#N!8GJ:gIddV
%nD1;"-eG9BDf]3nqY5au?FO2!DKi^:LFII$,&(OFK51kXb+\D<@e8OiL*dbj:Y97RX/l3&#EpMG-@MJkeDfcP&5s6WoXX[&kuE4J
%/bPB$RQNRu&naran"2_Ws8:sh/6Lf;9pn0Eg;O$DDYCNNl_05RULk>&@>W+J_$p8+%N<Y6L3BNL8SI-9-.g&%.j#`m%/4\\R@_1i
%nFN]MYL]UQf?`1?B[IWVkK]ASqY7BmAU8k(mcsX8A&!::[4V.>lJ)!\O$B[@gRu8M?(e*D,kDJ#cgo>e]3j"$iCi%dA,I@QmU*R%
%Gooeji.2gX@qohX/Rg:6WB[&@jH@n#Yh3C.+H/%$,5<hr&@2%uL"gQKF)!IG4q':p(8<$k$DP*)4F[#Re<N[^eNln4+Z/oB#heB/
%gCc?8*G?T_g-[LqY+'Mm[.U;CF0&1Sj5Dt0QGqUDd-e%pUr+q!dHcM8p1Tr:@34GoZ@0>?;O^5;O"&Kl;SuTuiKS5`*(lX-$*gr/
%pqu+h=@$n?BX@3qiR#jM?69]Q%jBBOLb&%`BYH30he407(U8*gdp:<K8!iK7=E0m4?hm5N8ra!+i3rSRHGkkd+ihUl"+H<<->ejT
%<1/%m/>9%6=H2#u_(jDRE4f_XXUl8uNQFm1p"%8-/N^]2K2oMfg'<GD<,uen`h$sEE;+3:]X@r,;[<0B6#!CIB%V9'>L0`:MQcXC
%$U[?e4P.:h?%1Wr/E)5LgUD+fVJ1AD8o('VnV)[nXK?V)Cr/Gs[$*$6CC*JJg<qS[D+@Uma<mqF9/hGUNNL9*Q5Ut.caN7oY%:Ps
%$L)$leNep>JM=YL!u#DPTapJa,CQL>0CAP1ii#TAhI6(^c".#dCg.1g>tYi>Nqi5Um?5N$"J8i3U^rgV]L@U$1dW$//T8;8RSd*!
%ZkR#?2/:%fVd^^(d*<08Mmf%Dj*##Ac><BhREok7E'sNbm0&Hc,s$TO;BS<M0sW4^A3piTC0f#F%'JT"o/VmWg"$engYn7QpL.kW
%I^2<3AS`Cc?AqqY2a:GSHHCh0N1`5%:@AEC7DYq`g8AZ.$)Vd>49j5F]1m6%$F=IhK;L>%B`<uf?"6M%&f%9p7\Bk@#c55!-eYq-
%P="LNV8@&Pd/lLupK6%ihmp+Hh[$]WbKlJi..(",7]"@?Udh%t&0f&$TPfL#N5oMm?n,P*IE]QrO)6CJYeRW"N=[$BTH0SCbI=C(
%jP.L!LEkB)H>8qEm<e?9Fu"XTo#$h>BKjf[BZJ*"e(VS1m3Od(B:2jmKRMuYb[5>*g!)oTI:AE<lE*g1'=?ca&+>^1&mrZaCrXsM
%P/](,TXOXCYn5/:kM"V,H#3]QE:pT/<of]@9p$R!Rm3]_*oNiI`hJq^<?7*JH^l#%!<=YAnu_F]40\kjcc-8HD6:'.bB<22*?5%0
%)Rn\4hj"`_F.;\*DUO>X:i1j(JD]+pR@#Rk[aEi'&su81:td#s^*?)`)@pU6#VL]n[I]hV?B$Kp#3O@pVNF99[_GK8-?hWnmK,Cj
%rGV(r2=ZGZ!h<]VC$dFhTt6ApkYQMZn_c+D,!.?`*s]AB)tW/!Z*sP)IJ_Mr0#US*&P#nbcD'fjeq:.NR/g0/#ofPBB3][u>C'a4
%Z!A\a.`%C4:/g2[,gWo1b,N&]bR>KsiW[W)XM7-;`/W[BG9sYrGSaa<aYi,<D[3Y\5]\1#'[O/"?CF.,(<;KMZ2-q'WYq5`%S733
%VbT8#RO%'!PARo<(X,2BJ[SY7.hTu-4J3!&*kO7fM++UQq4>>g@mtVZlUWPb=;=SZ=miBId66f@]_L?=&mA2O6GsG>?F]bL7r%Y/
%kN4F*;PW%Fnk0YM`rKumTts(pM0/9;$OKn:\8&#>"S6Da)uFqpf0u0)+dRRCgaXT=J>-ko[&r*6]Fc,h^hr,`G.6K^0LHN)e?n2]
%Ni8jm6%$GLHYrq#I(u3c&R5R(fs#dE:E@n'kG*9]D*<>uXZVbO"-o];ij#UEFKuVL'pBQ:LR#3ZQNV'iN5h,&D4;k-@>@:-Z^!,<
%`:V.U&H[]@UXOAi%beUW2V"YkZhCeq*6]VIPLI;@X\Y7s[5$ujmBNdf/P`pJQ<A!YY2g+o;n0VM>s;K+I"(Wq]t,=6j&BOZ[rgn>
%f?;M4Q>TkL4W^[k/9hXPie!2"q]m^"2<IVl57`d^*b)e\kR$2^='`GZh:QG$'t-7<.in5iE5YtJmGZLuLhj)gcu";S0T^,(IV;e'
%<jV2j"?t4DZN9&uj83=`%bu`m`\Cn1b"[4+,p\3gA+A;Z6U.sJqZLg'U#d$ZF[-!Ze9sEqj9KDA=4?s>$>eK4PfhuS;n+S8fi*3.
%%(O0ij+e&H6k]0jI@q-B.W.<+OQinR9cRRnYjp,\$<cS4Y]i>JLs5-R5NWi-,JkmGLh#IBP=BCh^^c1IA.dh&.3uX>g9hR8^&be"
%M5#ns!:-iL5\ZBfC`4QEk=csHd)A=I[DjgSN>M`(imoF#UIk2$KJ8F?0>Y`X&QX%1NbQ4U8'aL3'4>k]mg4i_+kcXT7#Q6)O_qG\
%:4ZqBH$N?XE/5HAFEHJ"fjXA"OQ<iYBGtA!kXqniYUn/hq'Kb0hT2m?(IcdMg=eIt&6pgIZ>RNmqnVT&]8*<CR`CEpD/2$e]D^)_
%&d*X7868s+%\S-`O>DWMlT5_\o5qsYQ4]T&K%E03`l=.04pAE(Bu3`ZLmb=BSaV!4oXuDXc>=4OGo7^2mGSpmK?2"5Hs8.g87[=r
%+D]@]h[4-'?e&uohuJP8)2ME$iKQ<Z:W&t?/O!<u4c(,>>r,&O?5EL(KSu5=[PB['e>+;T?"+6;0U_VNo*:'pRFN.]iEZbe;on`3
%$T:,8#O8uAjVR*)0a5dra@4ldSg0L>'&qj>V4-V=Rpo(8!o-0(k(*]u`YbtVp)&GqhepCp$hhS=i5Z*r+ARK#)cSmq9fBZYDMO@5
%>l:fK+VLN?Ds-B^[fb^5VVbtoV8%#0I+[(fV,I@K*]L':",2JMhilUTc(8=\BG)\`J\UNA:DUZ#\'5N<=5.sbNq;Z<lAh"3m0f!$
%e`?`kQ6<&mKp!:upd!ttVMSn^9BZ8e5nX9p:EEi,[Tp%!i^sWQh/W1j<e)#Ya..g2QH9M+2IIoXZ"-dA0$b)GTZK]i`?:l'amurf
%l,_\/Q38]$$ojK2/LT[aJ+%`V/:DFMfFO[_Yr!6b]$C<V60ae\o!C!3<Y=c65b<d&HFuo=(O,`REW)5nO0@._&%R,0Srj6jYhMp+
%J>;gscp[(+='X2fU@Vj?\3DO&N*$@4pi.$e\Vb?f<tQMW#HRlJXM5e>YP7sl^V$?g5Ko<m[jr$PT@K"kPKT*&2SHqU44`:!o[eG=
%dpHF!S"gPS'f^BZr'Otj1"55Ms4P=[qX!dlX..j*C%ustP'^jM5rA"6LjnYo8:S>92uVj0/OUNXZ:!M/oNU34qWg;Zkq?8ME?K',
%0GGo6U$9>k?#Q(E-Rs6!^O:D,Wr;gQDuXm,HIMR*Gp?BdY$\ki^A>ahjiR8_ldZg'cdp\i]]kJ-rp.tRq>&_<S44Vqs4Go\_c9gP
%\2dfB"\&:*]5?:sh"mC&d8]Sd4`[HIm\;r8`LfrOhtXu/Y?mb`^[l++j5k?1]^;^P0&%R5T07Pnr8d_HlK!>8Ykn=0rGd8ai<QDN
%q5eE^jra7:/C4L*qLEN0qcBQMnK$kDr;REY][r5?msI@'1R<RK*nii<'bs8Wpn,4t*PQkUFhE)_n_kK`r;I/uo(`NB8(\ZpF=;U[
%:k%h\F5M/\q!N%`%k(6L_j(SRq88KsK,+<'7=bWFDl-Nq?[4$JWr+dbP%]7C_uFn*p#@@s#(HU<Im*]#qWXnbJ$Ae=o/:,SDJ0j'
%T@_ZT_]pntEC;rQeY[e=\`+sNQQU]cf@#Bus8VuLbHlA1:oF&0o(C8Lkmq^_achpTB;`'WY-3:V^J,N9rcJ.Y[64;T>Ic5-@TYhT
%L@R3&%grC37/4+$ccHKopYT3RHIA-k0!priF^at%QRCBDpWi?nlLNW/Z^YM>I!o(`qceL=f7+`]f>#NGZCO1h]<bT=:6#c#"Rtkg
%eMOTEV?o3bi_Z+:4k0L6h2/"S_Zt@o5HkTQ5-O3JIsS[)h4N;c?T`]/(8(P2Ik/GH_X%=W:`a[#kNj$g!^4bAW:11S9pctFSW6DQ
%FX'=eD!W+Sre!?o?XH"o)8@$]pNIUia]s0/YFSX>k');XT>&0MplCS7FIQM6H_[4G3ktKO.DPfWm,H!0kEk1Nn,2"`U62l]SW<rJ
%Tk,dCi_Zt^@mK6R/MUH@q.l7T4&^=6bZ&<7oi(Y?s7s/(\b`N0m;N$nhu;frrh'5ehuED"rU'X^g].4Zs2PUDM(Z5[),@?B2rB['
%St*!Rg;*=To%UVjpoj^GWnI<j#P8J>q('2@r"&82pZ:Xfhs&bmp)FsJo&n!Ll\*P_]-D[CLGe3"XgC-0T^2?J[U4IZAG+LLRD!73
%X`oZU4flcAZ(tXXRfBSWoCK")m>2fU,50foGh2N9lh1,&>,F'>&?'N66BXXhK^lk*:FEi(%<34VSW4#:g]!>:r=c"*C&<'$^dpZ)
%B-kqTDVk:%9p<0$3O'r:*\53=^a./Edt\pKYZJtj.H%%R`XJsj5ElT:4SS\V`)_<_>M*eB)q4_cB1aWjP:'GVJ,hs("U5<\)t5f<
%pi@CSFQM8'Iem85[]VrgFB.%a'9-lT?NPF)bWa[`k'],@Vn]@OmCq$,g)SMV:oa6>B'?Lb'$kAZgeI[FpP!T1ZCuD!9KEPPFt.Uo
%<.qn\B4F>/(?.2Z%RHa\E1mF#/7Dp'l'(#%g,E>5*5kAiXDQJeT=ai$EZSp-`H8d*r=09_:XF[LHe7nm]BOam]D6[564l91MU2ap
%+c^G^UH!RSJ)<ds"b8905d8@[2.n:GqBLh`AlVl4]#q+KJ:Z!4DYH3MJ+)H9+e[d/QlT)KJOnq5!Ws:Un46r+B?3iaV:;7ZG4??6
%%8e458?lU6lqVjqGW[t@E'e)WH>u$gC*^dbA24kD'M]VXdL5q@0X0>_p(Ycf1A6lN;N'?@k7@]iftpLINWS?0e;'kK6+?Fm$YXsl
%MrZ#dOpkYY!CPK*Cb7?7T^NH!*V@Y;Tcp/U3T1AXbRAa/J7e;!LYWFrmiY#bfBX[e7o2$]_Vt\'8manS"re`r8`t+K_f`K%AF>9X
%/Mn)lNLn;YE(O*-+?>tDdFrCf=9N&"KZ9Q8(O@+7"h/]tcl6)&DC6kKDn6*r@tK4V$nNML4Dlp#B1%<f!PMd'BVOfH#a/_;g&Z./
%%FRhR0C5=e:,(1MrBj.:@$OXs2i(d8aSg(b%_/.WknpYb5fYu.7cLsa0$8-c`JZ]YET08n`9)VrGOU5$c7^uaFMA(]dYW_DUq;>V
%^)N?=TP8PCJ_=l][gT;a3'[`^VcSP(KMAWUZll"I!PUBX4dQOgl9Y,/aU_?(E<O)!a@FTC;QeA^!f(P+9G6\81U/Qf(BJU8Ft]]3
%=E935DD%e7"t_Je/T\c+>sUKd66`b//5V;#;;2AcK@H1i:9pSr^rEPt!n1Q+5r_?;K;Ab-?F!WR#>?d?Ci;gI!4UuB,meJ*,H8[0
%*nf5I33gr^o<Mr)(M6?dd(6X&CgsPV+QY62Rt=j[*518q'4J@);@_j(Oc.shTS,#W*8$Ar`sH/J,EY<6%H3#5i!2_kGnDENd->"9
%dH-&Y%1jH%++]t+!;5`8F)5_!=rVEQ.+.%-9Z0Va$`ZR`_hlqtZf[cQ_Vq1<TMQf:b>'Nj#Nut,,=O+>>37n+$4R7CW6jImHe^1?
%EB0+'Fueqb[$4iK5Rn>#$QL@$$X*a4'4iPf2[.h94,h`H_/Q4kG7ktH$"-EA@%,%<37Nd#MoY'Jb^#KP"RILPj0Z.j%>oX#$5\7/
%&0klU*jW9\d+*#(1]]"D6j#O=[\8*Qg6H`BZ3Lj@!+PR.!EZlBkphab[/b_05]bs.#kXRT^n#-K*Ho4:?C'_od!D-Y59.q%'GjDO
%!^U]o6mZf=N>.7&.,E:Xfj%)=;LAJP(WC,Ih?6.t7XC]38DqLd'>6iM"bd)F'?hkn8N5E\78lJ9=DAGc$uLaC?:YEda:+'Eq>p.(
%&c`fi^oh`=cnr<7kp[sP\ne&W+&7].$7qpU"%d0Pai.).,\`[9hFTMmA[jMs?ZtrM[lF[iHFKKY-SD='$n+eR%L?_J^XlM9b(+GJ
%8cfP7]<EENn-[k>]&GhI-RktpkL`?:!DXjRcq*(kCuo(Si]*I#,*9)N-kPu97[^bk:=99<ZoTZ8_).fbi1ae7S#,BM0H0ur(4.FM
%"U:jMKkAa>1YF1im\G0mVPfiT/JpDqBIKNsfL$dqq*6%l]L]^GjYTV9Jjo)rY7YY"Bc,mGZ9UP:EKcst]l2!l5g+YuMK[)"/;"%l
%fApB@2O5@R/)00.PP%2VMEoC(^]%#uP0eGn6!<A[oE\kq2%)CdKno]d5c>k^]%ooG>k^,O+"4(*['66Ji+>PmQe.)TV:,T:4ITc@
%b=0Pt_F#Y(?iT<A#k0J]R>bMU7[:mYTl^pQrZ!!-Aqi<qaG+]^IH,gM6/.MY7c"mTbCI%[Pe+2HJTlgZLGHN92TBUDQVr#17sC,"
%cK4!M::gmj?(d+g8BV$t&(VO>iBh9&pN;[epONP9-Ijk,DVQeF!L=JkDIN6&JW'aC:>4qdpDXu3T'QD5kMT*GKKq[$r\BM;NBgtX
%[O#(LN!&O"14[&[^\AnRed.:`0$*0u`Z9_8>bo+>jX@DfEKk36HE3jiiVn1H09N*lKTcoF;?4lp-:2d5_`YAM;-9F8P0kdTFH3c6
%E>pMS62gL^+Io!5!($Q:S<OcNTHNs-&Y*)/VQ?3#027"]kScmT`,9tU9Xj3'n2qu^E2ao^b&Yl?XL#G?*fHY4KlR<pZ`a;6^q9r2
%fTB-,7Y9Ql<9h1mZT\!](`lKP]B>$%`pgh#o/X"f3H;h5:J\"<E]X<>^4.ROBF@@7S";hU9k9?Dh;%Y3)!lFT]mms?BXciX=4<#-
%6./J7aV<&76LrVaF^O!104E.fXHarAG5m&ar5XMCmgo5'!OhrR0KC-9)#,Gic/1earC^;CG8e>(/uV-gTTRR"ru(."G5nkFs6Ta_
%f36=pfg#H?r;Aj2,X9*jbPs>=n%kun;Mbu=VT\d%f(-F2rEG(q)^/^1s&`%A@eZ=4a%!K7>7Bou\F*]$87MUgN5mK)&+<g,M)t.h
%hdf:0]Q)?hN-;ukh@uinF6U3)h`lr8FlrCo^Pr8F,U7U0F:>$)r]Me<T\05ZrRafi_[/$!?I0SYe"'?2W;)0"Sn#1j8tXa^3h=cE
%q^)]ZMgh%"mmb3;Fh5>h:\;>9r-,2<?*N5K5)*n!H\r"K5OS5!]L6Ao$J?$hj\?iXk,$@(/+8eY1SU/;H<F%)S@(ap8M![7p$g;e
%n@54Wp<Wd1TE"@Es2TWe[t"DOJ,\@*r#bt:n,Mp-]Rq=*YCHO9i8ak2+91^mrqCV]UHrD%*!7D5KOq^\2L9W0BU,]r)#8r5<h6DZ
%].2J_ZBo-I83[q&H>L?>oRW?FI(>J)7??WZDKq[J@DWNu(8T\-i_iRC/m.L:&uduVT(Z)>&$Y,jT3C],7l!#\920k&5btHS^n31`
%6.9O4S4jbbAB-XHdu$AWdscN'[i;K:Zj:d&_KrLp>3Jg[5E0mQ,K&ipm!JAFhS!!GVt9Pjr+jH1)U6uPn+;3V?Yt#Iea@I,T-&9D
%]l`#jBt#.TVsbjtKF'Wu[^GjX5MT%qn#,:0Z=[u)AAf!p18JOCI11%Fk:%Y.i!cf6faiYH)#jp=[@@5Af5\Tj+-.hWG<>$E7<[EG
%CS'uQ5$m81n:3?^GZ,Qn%sQd6qf'#!dg$fmNu+U]dc'3\E;R]F<+F!\j%O%[3'BusIn\a.o_L^2=e:DDja)3L(P_@Y31VTRS+l1^
%bk6Z^O1\(e"QLDg"tntJs.3E3iiOf"F9MO>cB]6KX#Pd-.8EZs.pjLg@,[ecET!?g8sf,j0^#!n=9k,HoWKt(c7d*2oY%ol?Q%Y\
%\ROMNCF%;ks*ba4(,9@7E"n$d0IZtsYiq\4q_bV?j)AIc]8=li`SY<0idrJf?>c\0B/"<,9aOkLiV'p3#I7i1$P+7?H,d_8TP>4d
%VCq0l9r]Q(2P;CA.ONMe-<P,rc4&%WotkT/>f.FDZ/r#gCG>DF0q7+.AO!B9a94m_^q<"P32,o$'2KZ9^7i%L%^pBq64SJu9`LK_
%"TZ0lCR=u@nF#N]AHTT3rg4c$E0l;,ReW)i/r=\,Z9W",pia-kYT6AlB^>G8]k4HSQW1j^0N)hV<)B47[tU%D.`niirG]sd"EY?R
%nF0lHl;\h74C4(CU1K9d06Y3M'@X\".9lV*pQZ^7Vm?lFRrD$"Ff)cpS$Ml@jEb,+lbF_q=oA\Q2gPO94u$WL@LPA*0DFZuV=jK<
%JP;[<kZ:L).`>o5E^V+ur!2F6cih-<*H&na6D"/$Seh&^R\`e]FtpTg()ph(nV,p9C@ONcLa:7(G'R8A-&#Zuj"E*%b6-(%\I/ct
%J26?^'_8E"<"sfc'q$1=<BC`;fAI0%9$%P6qW&k+eip#3&;8+"&-u/;E1dd3i)?+qFY3qgOHOLKE\*-3E037R8B+0@DC<n_Y>*'L
%mGu*M;Tn+b*[8NN&i1m.hK;B8:@o:JYNP]giHC[GnFShGdnDfO!jaF(GS"f7EBR.9R';Q!fTmh]V%"NL5]qsa+4N8-*)E?aq0I@r
%3@"jE[JUnnS3VFP1b*L7X1=c"!tZJ4^LrR_P_"V&4.@uuXPB#cn"#D4>6tHUVeMbZRuhJggY[SB-=ohkXZbn05r1/$briu\@k.T`
%0b+pmS5M1DNhX'u>GA4!)TSkp`L><p99cQb:`Ihh[l-fh(#pep:>6Cg2p$&+P3(C"e:OgkOc+lAP?qe[qZPrf';68r81)G,LjYZE
%fKT(Ra!gl[jd&$?Oh;o9(+V2J[PG*ild'HZfu)8kJ4%<EfM+G`HFR;Qj;>YbBsl`W^d(tFg)Yb/IQU>Kk`cP@VSH&81O;E4)pI<V
%5eG[0%#]Ri[6$pif9#"&h'fn+mG;!+bWUi)l;/cf$qE6FOLR$US)0a^CWhA6M)p']gDu0epS\m1+]LHTm3hBod.LFg^\/?:i5l*+
%jqXTS#>Q8h:8.ip&_-nc,C3W240;3O:"al**iI9B&SoJ@34+OZ>Ah4`ZE/U<PhG]A@q$2`nU?X\O/tNii,r\,h'Lg>HSP.D!#>]8
%C@XRbo0%'r3q4U]/J--l,B7X!NVPCFDoElm"L&p$Q'D?iDg0)*W#5q"h@V3#l"N08ZD3h2.JYZl[Z2VAU6`FEEm6P%Kgj:$Zoi8]
%HhgR!4#+3S?QUj=:=)S:$#gLW)k:>Q>&$=,kuH]$aN=mR:2[o1a,+AOKP(f*"_)`SQ8>1r(VA^7oI:Dd[\pP@,T-\-Sm/"YO_R;I
%DqT*WAg_7F?D61lprAqfT#U[#peM4L75c'&DnIcQU[rNN$."Ng&kpu)\<fJkWhIoBp@HPO1.B6@8]k`!luYD*i@ZdYp7tMt/J^?"
%JQ6YqSsf7_Z+C-m+`%N#!]88KJkEQE,8^Qtf4]QemI.H6[aYrB$2<-o=[s+[`=&H_UZ(_g25SMNJ;e%)+rRN/luCisbZ75eB_0L<
%\2s/+,,7$E',ce_4V:k#ZgHF$=l5?tA>B*C[bFE36eLgK)-p=C6YNo'@(;_OZqut6P'-_gi1utrgZa+,g-c]j"^M*FikE;tYT_@d
%gH3d52@+6BKX6B#iFFr#L;7>l8l5u)R\!s3EXV`acpJ?cYF/Tc)uTTi_MsSMmKka4*r-aHBZ!H@l27EX84-!\ZF4J#k*B^PDIM=7
%$<3ZT<k.6IjSH;//U.)sPf,j>:/]Q%>"gQs^:Ju:#4LG(:4P!@P+bKEZe8nOQJrdf&JZ_(o$&3RJR074\(;XG@>>[W]BaEp2f),[
%GCi>UA<V"8o1m)"\aMM*)di]Pm6i,H'/Y:^)\X5*km+mB0])^Vj`.V1ma*,%dM=<HRL60XHhr<RI`RW1SG%OYP6:f)RO32fZtV&W
%W(6)2frd@tI,eZoPKV.!T<?Adj(um):9o)Qa]K=,a5Qo74/'*p,r`?U[gFfK'KqUtTq2"K\%&rh+OJ$IaOas1H[%dR)Le]'L\oX(
%Y\S7Q#@Q]nBf_%<?8MCd90*7iXi7VLO"2r=XH/r^(m_gZbIL^sl\%TbKXI'7qGTcS0c6t9MTUOgs++V!(63+!R;0ZAMO_B'<:Ti=
%:T8D<Ubq>Qria*9_D(p2JRJbb!lK+?"T[k.'p>E.R/[.)bT8cFZ8V2<FbF,f;0R5u"s;>0n42G/a!/thfd"`C2K2*Rh1Hbrct^t[
%jC"M&_68=[2<OE'_shGuCg?u[qr$'\qAT$+*..0@VguPb;,@"##!V:(n7s&;8S]nT'DQ$eXVB<mHM-4sT1g?rojiGqWa"F`e5]Se
%;Dk)^#I=k&9uX$N"8pl'?d6\Ykb*PML>\-E'sfP_8+`&dN>M5HE,CsHWVEP6r/:=qp5A"1N[n"Y`$K/<'Z(&Eb\Ab#l\CZbQ&HUI
%JDRkTEhr8S-"bki3g%0:HAH<lSdk`Ac%%OK`"r&7ekre%<*qh:d'QgQqFe.r*?t]L>L&):\asN2@cj&#YmD<43<?>$J'^U$.;[5,
%.5\+iaWFY]<C]:pV#o*!fLJ0Cf>6o90N;o'#C^#3l,F&PS>&n'4NUWl%_E>%`%&1!a79+:Z)(s$cYBgJ$#=!AX3uiNUpJ8U4_#\C
%$77XB[NQ[g-3g`?DdnSD3m/@uUDU3]aDVVFMZa^<l4De<k*K$iPq<S9Ib]l8K,L:9=Y/2LL[`r59GUMJKL9l"s7M_$Q-3[Wd.un&
%W3jhFU,>k[)dgl<E8SOGq$pO?do4nir1'Tm&`:XTb*nq?SaOahXhj=!d@WR59$%Z_\jZ-1jUBArO"k8?<k]4"8QH57`R^0Z,IVcp
%7rGg/1il'Gj/gM8noitY;,hQ9G@;;i?*K#;QF+ud;;9K7N5W-!W5i^O,\H1W7j:tbLA2ETc0/MjRK(-gHCGdN!nDlO-CGqa9=14>
%H&lqR$g5g>V[@1UoS0LMdsn_8R).rC+D*!6(GqgdYHA8J.9!gK#QK]qRFfI"8O)sb7qTj'Qj-K&\irf%8pk"r]5`M'h-^t5JgD4<
%"^3">`cU24(T(!ZG*jHA[p[45,)2MS]d@@j:B"XeO]d`JkK>!&Dorg=G&gA5L[qO`*1$k\\MSjW7[TE'b\cYf0i+V/^q;+/#4j^V
%*p+Q>j'Ap_VWGfaTj.m32hQ0&ZF(RTR*Ul0ia9hlQIHmS=K6b)?lAY:)p=Q@8h=np7'XU*h8_^r7Qjf'&6Z(iMCu/;[ckXJGe8Ma
%00]fF]e^t>c[Kg6d<rDBDQHoBIq+,BbCkkDeJ^>[moA"V&h7:Ih=-B*1jB5Zpc8Xr=0eX,_mjj)c6dm-JRsTQKlS7c.PrlV7\O%n
%)[^(;N%<+"og"'ELOOrp<nm[3$J1=lVso(IFUGm%qlL-<LB0j)fJtA>MeYtKlK+RoCcAt,'YZ@L7;5YA.]VgW<m`lcl\Z/^!.@Ah
%$:V^aobF525X"^Om>>HW!8&^o?,aPEa[.gsD1bY7C.FOeis[T*qW4ZP1tRPBdcTb<PV.s5W:Xn\-Y6]DT.)#8T20%X,?IcTC3W?R
%BWZm/nor'PXT&FJb)TB'<Hc'&KlU9:*gP3"D57$6kC3IMjgH(7-r6;q>brj&B.C#45$&VKl%KK=kC6G`XKbWJ^\\79.)3f%nUsW;
%auH,-<RKH>WN)go:t;lHd].5$Z`G)AP[CFn0u$Pe#,dAoInj4tR/[d%B[iLE7mV")BYW*+O5X,6S>/Pri'S/Ua7*5+SR,82l=)rU
%=4c5nLq9?@\(/1blCaaH/.(uFIo'27BB+sURgbi+m:oPH=>ZM\`p$P!286B`9+tGtFT@CJ9f2I1@XGN5e2=+rk-L3lBnlE2WL6Of
%?^bi+A^Oc,qNb0'C72KlWO8jN2S0a,^Z,:E`pu3h2I!1U[,paQ=PI$Ep=eA7;:NmIN`!D;AGb*P.M@Ka:`BaN3m5b%ee)6*V[NKK
%cFRQ/hprNnN7?Ce23%&$HT9SNEr1H+*Q&3>3L3b1[B\suDiG^ZH?Z%odYE/sM`uP[SFgC9C8,Y0i[t+:LZS3P:`Z:X+4_L"6(KtP
%%2R3TdQhmf#=CK2>T#:,e^RFCm"U8?DV?n*f#)FDC>&P@S9OobUL$1R)XX,%hrrB77`N@HT,BjeM7'TgC`eX(`CXqE.=*PbZ_H^h
%BM?"O11mhiZ6,roH1tlBSl/3[Bm`gI3o.*Z1`eW>VTif)1+Tg+Q.`5K)9m&k3GOS'**VM&HF>Ug?/H.`i4DuGY:S4Xq(hug/]QFE
%d6_M9CJ/3CLM/77VQOKE('5u/0]0rRf"(2%WlR1%<cbZ0Z?diiQSj66oW0@rfjXhqjEakBN\9Xkg`,35>r7'n)Tid9Fq%ApmT`fP
%c$?%;O"(VU^'0=0lE%,gd+E.VHE/W"dk>Oj+^VN5G&Fp/A;fnmgJ#.l=!*`*]03)Mg-`L5g7FB"3qg"uP-tIb_ehUPPZii+;;4,;
%VgdQ[]*8^7fcA6r\mACTnPbg%S;L>R#ABXYF55sf#2C,0Y%(EjgBQ3]3UNb?cBCV<EZ%r5Zch*D.pV=`>jZ9.97#4B4NC_4PJKs1
%%'_MFYmiHV.V>dpokLU)N7PQtEU\-.DSrrIE-q8A'\%*d?G>fEL?pGbjL@"U:D9[CMPZUdONHiPq0:-Jq$d'`4Ni-5a/^a[lsBQG
%?hVJrc+UTL>Qh]lW=#_S:Vc$I/3=T=0;ZI7p^3pIS`sVP>LnE5JB"e8YBPG.4Iu$j'&&PaT'-sfP?(HE57d9b!7rZ*JOo]O)(7/X
%ftbu+XUcC`T7`dsgkc8'L5A+h0jKZirMD%dguhq&O=?_bL4Y7Z2tW4kA4-=A,%Q8OI_"'`c0"dN*;VX<_khdT*$1tNM=>LLoL>pY
%Zo&J=41(-=:5q[hS(0][ot%3&A,*Hj-7>@0Zo)dHU-IAj,,PgNIU_0VAJ<8UnRJX:9.ONLj4FXa`%<&87m(N>K]9E23>\<Id`mHF
%I@2A9V2nP!=0bp@h:<d=fFNkIUfA(3-=\*L52#_NU<06?dn+7X5Gsb']'uR\VQ31$<'$Z"Qqnet]?HjQ3ii:2B[U2Z\<oGsou@L/
%c,VVsno9q/09W$Q`iu%I:%`l^)qF8(ZAl&-4T"/5+*7::r?E,I.ZLuBIF6:kRaY)>=8Fu>K:fhh*]PNR+?Z"RK$JH('S:`p4BeOW
%dmae#7J#iCW4-3[@V?X;([I'W^%`94@in27I.7dpP$]:_Qh'0H'DP=e/B*jgPj%*"d[/s&.NO[&D:uW?.a-N7pSHY0pWaMT41eHS
%WL]b]o'4^)9k@o^oMqHiN*!oW+*Y-WZ%f<KO%-9aSSB(N['_rpoh,(/*E.>)l^iD^:bV]fV>C*P)`8&aVQpg2b53*L[7I-6XSZ'n
%="e6&()NZRF/DP.[.LVl';0&.kHdYDe"]sNNjDQf9k:h"m?1?0DpMM(EQ:%8\N>XcA(9alffbt[E&mgf/ILI_]#hGYga)QH0AGi(
%prY\\]rt"G'`-Aca4PT@^&7g-*pl=#XD?2`1gU-:Dq&W'C5))Y^397@6UKHV@@sm_dVW[i/WE6*T@MWMrGd0m*9`sHb94O,XTlJB
%o6@4VNkU;-8@(2ON0J+q9=A(Cq5`WJW&\RX7n:Iq3qdrkRfL^CG-ZOUGPUTE6C?n"PKF_,:,^?MrR@7Q?.3i`1H&OZrRI;\Eu<4q
%XnH>7RRJ3;LY\)`QYMug*-h)-_GT"_(M2p0\QH%qa//B3mpB*6^9?YlUAtbP+/1mCrm\ZAS"KXA)dIYGlcH/pLq6ZcTD`^L86.k=
%cG_]t.,(0;-5*7o2EcC:\(0cVg20`'qqd@8G]7;9>L'ic`mNKl7\RWSNgH"-EihRYmu1?YTK.6$+kNEQ*@d):__OAE/D]HnDfDUM
%HM,MZ^P8,SJXmMa+@@pQ#uhC'HJ7k[<`W\Q:"u+E.7S1La0^(oT9oHJ1s3uk\<f#p'TcI8=6n>g11k)%dkQpMG4c?kUNu#L=C5"(
%H%,aA\@mWpWI#<$M%l4i"*[giq_OW\_bFX`m7-Ojne!r,a6i"9$*fs+Pq1YNAo4a+T9;JCB=Oc51'UoJXaet]jW'_P3>OWP2[eMj
%Mrdj(8Z.P$LR+-]BOm9ZdMHVn6UbY?=8:>^,KJ![SP%Uo*]9<Z-'"T15DcoW=%3$MM]i]em8&jChJNL1,5qXeUg)s+Z$E3EL]j6s
%)K>(1j+PCGS_r?T9KE0I4-<G<gn3hPihm`:I[X!H2_:I!-_)!m&>?b4&l)FWp9W>e>Ab'04?!n+VK.#rmUkSH4'I\LRc7H&m<m_\
%@$U"HHmd+WQnYKm.:%6T")&7Z;M0G_P*gArDWhbBIC%Sc*+-3?D&eEA1l8K>E/4XIYt+otSNb#>oA0t)dN"oeM8d]1+'#[[<c6#S
%["jhQ5i_gj)99k(X.kM*S:,l0Wci'7Yn,:`3g>V'I!RN#RQ9I2\5:'Xr3S:-B8$MGg4igemc.2&n1B!t8SkL=CX#B0pEa"ABb#(^
%qM7AFJ:S!Chs<h,gTbp3$l8eBi%PD&*9Ymc]7M"MEi17WS6J't[iG1][u=OH@$5BGT[%AB`n'SKL)`RYTT6ss!G*cqo"(JiR`Kpi
%b)e^!lPTfLad:=;;K`Z-crLU1'I!rX3%\K*Ml:G8WC!kTShO(Og7/jr>?=s$=GHoO$8[,P+W:DGkTM@Q#sa-('Nlg[@LT(7e>GP^
%R4$b0:!!DBc/,^<!=-)R@jmQufb<=iO93o=#5j[WNujb7CQAM/;TqS)!NfhACDXQU(MpZj't0Pld;LWgQKTQ6_\e&jp`t=.d<afm
%R$_%JLZEEQ<Q0bkUZ*l+gPokq*\/UM[H/QPkkaEqgu.PKq]nHlM90D9D_j:]c??RZ9)Q'mn`:9ip!5P]Gq)!6fDl@J"1Pm'feEaq
%[DO=5/JS]i<'igkPLQ:?9eHIf!p@7n@LP2N#BE?Y_D@/GlXrYnSi^:s#KJ&AM\>Ym[#Z%5WWlL#.1VpHjQAoo[grQ!"J5IM3"R/7
%#(]_Tn;+nkN:"8@rd8^BbFVsb1._*F07YtfklaMo-<741NqRNP`&@_WhEOQqApI#`&(Ei2H;uU`p4Q'Ni_oGE;``00+(#T0<RP!R
%U_nOal_(RO_PWWh5Xp``e[<eT_(#'Iq'(*)qo=\2eGX*"n`QU9=Z8@V($VOI2"CuJMg%&'`rVWB]f7_J@2&2Y@YN*"W5#8[X'N<s
%Sq4kE[,^keZZsYWkAj1%?MdY-f;IFA8e9k-C<Y&?\AkjS1?!8o#]lu%A<4]qBpoUaKQXLX`.$!q9l.L[m\9AC>6SEqNE6,WUhTR3
%:MJ&@Y@r'ed"9l\RM]Ha/1AoFLETLroQRbe7:NRUcHm1E@*!QXN`9O1CdWJ48;s's<j\PAT=F8Fd;&VqmJ0nS"%^!XH3'aK)XMKh
%+L]_cQ`37(VIPJZc`1Ep-4A0P/CA=P8!g#(G\Ah#L\DK<[-m:PK+:Xl2[qkOUHa*o!VnlZ\mi+kqC>_gjPnZfDfcNsAE"BOAC(JM
%TV..p4tlkJm8A-`:JkUMe%dW+aDpRqOAj/*W7F]d>`*IUmeflfI,;%4T%@hBi6N['kA?D2q'jo%HGQM&#lHT>Y^a"(A*=AXL>?rB
%]p[Ksj7Jg*i03#%-=<KRV_O9`88.l7BG[h':Ho/k$.X8rTt,=X[UK>*BJp/\$s*,+Drar_"P"Nu:U#$K$KqUZ6]Mk3K\Z^d"o0)@
%%?1ahJZn[EFR:n,CEYr?#J_QSo+blNSi`8?TN*3Frd7/fe3s(S]a.?R5_VW0P,+`(%iS%naq,A`iQdbYr'!.Z]U<0SfWd8-0@3_!
%rE"e%'o*uD46A'81l-Q&lJ#'iNCM4#TJ;P#BTU_Bc<&(+BPp5j6\76\Yl]8W%):TG$U$agK]ki7(D2:s#]%qoYom<aK<Rg>d?#Li
%J)K62$K2^([l^\A8e1VH`5)f>O]^?]EnrEJ`gp:rHk7RV*Y:\Pa\XK$^'<0iRoL''+)5\$K1F%3QY@#]gZ79pS9CHOjs>%2cJuZK
%7Pl^HJ4ZK/2%?hVM%]an%1*Mt*%QtaZY`#r[,0#F;\AE(%fCjFSZP,hd4N_:o0R1gm.aJG_#i.*4rsG]Zisi<!IH/uMR8V-H$n<2
%8!;o_5ssoqQAsiaQc7c$[Oks)+a40;CKuo*FYtm4lbfMm=O-3H)5YCDa)GUcWRZ:SMbE_!Oj>+Yllj@EdqEln-q.maj+uJ`gXs#L
%N6&ErIGjF?^cY0TpeS"!r>0EPS,;:!<4BjQPMOH'/T%c?4>A]=1Q9G0%&ht#bKu!LcFuFfQ?UBX/:da-*FS=s[@<:jgC8\A'>.r6
%=c:i!.-qd-TR\W_qL$;.Ol<hn"6rJ@7>BtlRtFd328d7mN]"jEm]@<:`j<)n1XnNDe18[XC?K'I_IZ9WJGLq^GT_L*p:)m8M0t9/
%!Y"p&X:k=a`%('?)4AWl/o>Y;OG`G*+RTaPGtT@YiuTt?K8p0^*]4,KD8tC:([BCG,7iEJ/5q^%R@]61*$e*C"C\gCK61p(beK6X
%!#$'Lm_NaAVkle-V4N9]<XHS2`u'1ZS^Vr)aQk_[SKD+H"VDh'TV[<93a,`XN8XC)_)AHN9D1mYo2>!mh(T$)=ul$S#OJ'5AUO$-
%q*:#<I@:>N(,0,(PQJ*id0L_Wo#uAb-pHiRoO9=t&7ZbdGol]S2JX:-<K?*2'<tLZq/*Z/EMn+gK//_I?JtC]X1]G_a^6B[oulA:
%(NQcQ3E!<O4.?b\X-\i->5>*SThA-FB`0n=1@I'0HZ^3kn\X.g:7k/-,7cZF4F,RdN>c\Ad%$M]*06#4doU@>&I(H@p(*eu(rp:G
%Ga8NG[#\d-c:\STR2RH31Cmj+W7RY#?Q[dg#KnkpH>?)NjJ^.2;?jhV#t.i&3'a@_(9"9K.b3-\$TM0W,V\M#,HZi#j'*@99:ua-
%5D\,uZMGotOYJ5(8&Kl:Zs18\Os.-qFX;+%a]lc.,-!pY&]JSSX^hYMVj(N-XId4=%(sR8/A=4u#o%hBIfZ;gH&2&Wb(p8+i)VP)
%bir^*YbgCU2/;-WH*@f-"n\AV3L]Eh-KJD9o,j17AE,Pp/>uJIG<Us5iYa&ASBO&GA0D$ZA@/HRFSVd9c'0DPVJM6o/QE_i>2(6*
%"J?oXIPa1CAA>&A!o9JYO[H4J];i*SQ2?(?-<+_F$uZpHTQtQgrEO@p)^N25OGco6nA6.`;!qA(?fUEmZDfqD85>A^d\m[-(-e$H
%1OX:[`4r'BS[SYg@EV$l#8DWB1(jjO1l:R2q%[s.gQlNl:nC1XFX,\)9rl`KGALi[*8(N)WF1>/7/!ZhJ/1Zj2$(!D:_W-.VlinI
%;LPC=PF)B6`RZ)q.?W*DFi`WPU]</'k3<]>%'RN4;q2Wb=Ih^Z<_l;^JXE_8*Ls<]5Lt`L<TirgFTG2-*$`a_'Qa[lY.DTrH)ARM
%lrQ55_76LM'\=r9b\"Sc[Sd7:Sgg+#F>=&o_/\2>i*NCt]DMGjC=P/N5K<[8YDIb_e#uU'c1`se09`9hV[\GRQRuB^V7Pp9fq=&d
%I]gQML6n,PTNd9]d_#l"m<&7Nh@/umK\H;_@UHpH5#f?l7h.)VOTL5@!/4YHV?F8U+tsNCYYaoo&PO3#J],.X@LQd^,'up50rkb,
%nYJS6!rVF:7CSuW:5G%Zgd'^HmDaKkEFuUI9>4q#ifEK[Ai\DNJ1bk!HS82^8##G>j<HDN%]mdukuknKWV>SSXTMe#f88o2,m,D2
%QY!=#'`.[NF<>TTS7Srt-qH=N\AZ":-L4O<[u0OoIUZ><5p]5t%B@/\AL\bgc;X8S]UD\$D:tl>\r$hRM&Lgec$FQ#$7*oumJsf!
%<(),9krdtY+8[IN.=`aZf,N(a!F@6/jGoM4s0tl,l#guU%(Xh)W,E0<rm#Yp*'e6c:GB^o!BfqJM)8l<$O_38aB]FElGSWZ'Np_`
%perOSWGS0Z]"+uu6duUT,%;La%lmR]?!A,ohLHsIeB+RYVK>C?HDa]Y1eK%rHBl&B33mU]D+Yu'/^mZ55b5#@OTFRQl%%-%WdtU\
%[jG_[,Obs.fnQmKZ`!46X\N=#aALVP-YBuc7=]<i5`a4`E-%tKMU0-LAf9"q%C?u-0RQN^?7AnOB8PAKX$n3Q;GVl"i?cRdmC;t;
%]#+-<FP04n3hYA,>-nsl5S#mg(F.rb?FPb2#+aW23r3'r=A&T]9=C2iGiRa_,S8Z[fo)$%NkhQLPsn7AAGRQ<%;.H]1?U/aACq%3
%TN8"l]p-2_W2(-,_DXDtD#nCX75$nZD:DiAVSG<9b0aL:V@u5tW1Wg?_9`4X$D73Q7L.;BFU][5a`=n`RN&L8E/iW4B<[olgF-qM
%V^d5)#'b1D3P#icbl0jd2XR028!)MjmR5W>qiNcsN5=:^N^Y(`L:XXt4/,'5#.5UH^mte@i;uG<eRtHWNn:PA@hltA*fmGTqZ5$h
%B5nh_Q&h(Q4J69?pCp/MHk9QoVf5F!#rd5#BQ[B9-VUASKJoK(QYX&jq?EY@,f^7d$ToHrQqD\))868paA`PgSbCAf)@c3(IgF%^
%'!M_#5^k(4BYko2#t)Vf8fC?+,G8Jk/Cc@P"R@eG!iT$5+k/2MS&X<B"P,"bgHaphX,/Jp\<[ZqO/-uM'T=bgqXcOp&rKFDWh?Mh
%mm%EG_n&hD!gKf[[n?>F<WWP#@NBHtkK0YMI6,9*FE:'@1H4@&`oc?SqD9-FlDgG83cs!so+FXYn9E(jSX69f[%FZ]";8JAQ!jk6
%JNMXO]1e956+f!!XK4@`Hd%:e@$K\Zo@AFH?;%+=F27.M97:iQN="Y`,>(3STa5nAAHt[sTL^H?)n$_CLe!ZhMkWuoRfcTOi%Z+r
%:YTU-\XH3JAu",Q\ARi1I.9'k5Sm*+#uhnX6p;\h>kafbY<b6%2:Nlrrb_g?V!a*P\!mk;+S7m"5Rl'5dH]H9ieZZ(4*&cY'o@=`
%!OuJSgC$SS3XMJWl)sb6n2sq%1`f?7?%aD0\pQ/fd(teHDN`t?$DbZU;dO%c<D:g"M3;R#b3(0gN5:<SO[."oTI8R*]/J=GTW,Y,
%oup)te2NeSlTY3m:l_[&[X,O`g"q=k3QIN^+5,_M2nGdhh9,k""sE*N]J\61BJS3RNh[PnW:YS?\HQT[To3eYo@$^bEBs6a)l+3O
%GoIa59jlTH/qAZs2%Xbm$hKVBZrXQjE7YuuGup-#!Z:j4`<gTP8e5)jBC54f'G#TX=b0O?YF%4E:DfDKEPU)Ga.aVR(;eNOiFpT<
%^"Q%ee>F[M1B!BO`eobNV0iL8]?WL"&p@$B.LMh!VI0=2CBkO!'@u6*3gK@*QH<H[d/^Jmg_"3a+<%)[+%k0";W"4a;u3hMQQ-Zb
%=0/@P0AYB!`J>LWIMfZuCk6%f$b0C5R5B+Mo9clG0XFkhfe^mJou+s;*:h!d&9uP_i-bcF>_H0,#+4<9+8JsR7!I<]ZInOO#eBt#
%#AqCe3%FGeA7A;EfC9X&%)D7qDe2P-O*T[=PWql(('ur4FQ+bpQI&-E,tIX(M\2-me=Y*Ta@oF+Rgu<CH;XG@H.!1M_Mun:P/G+s
%.CosujjZQI[DPH'S]G4qSEV.*]\i<n9:79gCH"^j1t*.M3s(/3j@0W7!FfaBklHNWG+>2o.D)mkQ<`:\0j->Z_<NhF^fmb1P2f@C
%J8/ck.W6R-V=Mo9d$"Z^bJ9LZV&-6e`b3psDD!.qs,NAaGlOG2m!=(G`t@Zun#Sm7SiWtZoZ101V##2DVGmjNb[lHEYNMrZ_mRCj
%[I\?!)'5WSM.s3ej)P549U@53Vq[Mmo4aM3K#=/Ietl/<i3\KKMd<0*;4Z"c*>Y=NC)X!F!JhdCO*omXUWPVY6!%De:Xf'sEVb,j
%9])gjPho3b1VD-)o_sojFSgM*_TL4!iV":tMB9H$1CVEZ*M21V-Dcqj?ek5/3$H)qmtlFQ"8L3ujaFlJYO8jfe&`4d6/<Z7cA0U1
%qf5?DpWhbrdlTgB"gA.tH9^j@T^hZ&M9\U1^9<=QH[inrd"hMsH9!=5RQb#s$eXG)2M"U(@XsT..=?Yt(XVL(N9S^[oR>Jr[_%$*
%/L&Ajk"Yo%HsH+.S1R!%8nrT3\#(Bpb+Xb3-WeE1]9:R-J*sR@0@6uS1!W'0U8tJH";GEBhA&/4JVICaD0P$ZEOV>_!9M<!]P`Y$
%-'45oL4dNsTr?IV."'0!0VqZ[lWi$u<VapLTHqWpn_p'%/:BOD4Fc@AF*g>(ETc+qOm_*k+Bs_@'Wn[q0c2i1Cm.:AC&Shj3IP:d
%?%b`W+#-]bKu]?F8%\),-A&,s>T":tnWa12!X.4AG/k=B?fat$FF;l'L?HGCcfpRAL:B'Y`gP:To#p>Z]$_ft+,>><$rgDH"!Y!h
%;C@q5MF;9#/n\AJ]Bo_AXHf?,l!;T#fCL+qYbAuif>8o;#SZMn!"]YPM`!eE%MfeD[b#T]ahe;Ab71t"b.HlqmY!CVB+;[+8N+Y`
%&j.La"r?+iBha*#,VfK3cuq[C;@!'@Q8,JM=Ap@@:6dq$lVH(>O0'.beg8:Tn2R$ZaXLpfP36XJMUsjIUC"UWH,5-_H@SX[GWA<7
%?lC4-Su;8#AM`$MQYSVT0XY$JXQs)$Qj:Fj6^4OU&$<1MmYqN0T<\i[,gD5#AH\oS[lme9&'5sp7foro-?P[mgV*m]3EN4O$Td-:
%In30;fh1Uk$D5Hes&PD3jEZkWi]'!Io8]cgRs<l<Jk)VYNaEgPgIaOh/q',5bm?;t1iS#@UA61lJ-fT<*;t7`]scSl,I<moID5BU
%iBA<*Y<D>0GW:$?Q?[XX&,l"bh[irC57(E0)+1QXgDFggXLQe_1`O>jZNGZ^3s-4ij8,EhrIc6e*T?iTQC)sHX,O>&*5XkHd.OBo
%(p">X9^g%*0sajf2q9WmBGJ>T+.ll`ZrhomK:)m!?@4WS<,<p91L@HKemM"'n@Pp7^>_9.:IWXB`6&rM%76)Ba5J1*M9REj0L>4G
%jscnd:LWq;nJDUnU8IlZ/s>t#6CplDAP)8QS^$6cq\)bQVE4BL0H(qc$rQbb6K:m*2E8'TK>r*t3oR=d=j64eHSFL4;M4$#^u(<B
%WBYB2qW2IOl-HU\*1WT`32`a5>Fi1e'fA!nC,?#MbX[7ZpXG-)4&1sGZ/+Ysr'\5$3.ZN(!/C3ic#3[\H2J_43A$8Ck@+jr0b$KO
%MtQ.^k8;l*S\YU0P$[/^9ddc3lT_e<?%&FQ]?9@\+?+Puputc1I0T20%8jIM_V/i<#mMnF_aEdj3*&O(XFk$WE,LJ>NK8n\ctjN8
%$<c<JC"^FZRrNc)d?QE:J3n>*Wci_4XN/N"U=,$#eSg,+RN!#O4GAOm,$5/Jb2]+>Ks<[#hfu.BWsE,;BMOH7hPVtXMcHJ0ib@MW
%+Gs0g.l`Gr'Q+o*a7^LkMRLuOLob8Me?6+n]]n5-9W_)*U9Krk>2HnQlgFB`@0MR*P[q"mjlo!PO58q(n\4u<X0:u,9]fAAX?CY'
%6PQTU3ics,<e,p[(ecM`X!aP0,`K.tmQ'$[Jk6768K6sIKWr>+$L>gAJ1$_[Kn]u5[Y(KjpkKtm7;D6k<B'W7&6:pDmA:Fq,bb%O
%-'[]F[MTgu3lKLE5uSV9)NSX23d6@7Q'Q.)ZdKPbL>+HKG`*sIi=(1!=HhXC'F3r:!&(k,2Mfn&K/GI@Td:*@mO&qISj2#IfB5s5
%/"q'g-E3RRec];9FM0f<&.OIUHgjIQNZV7eX>RcD+c8-AXZ:>4XC#SPf%7ggj+N2WcV-R;54ps&XA/)*/rI'FW)04U_2?T9LspT)
%^CLT[/ND7><$W"h`k'JF7'SZIBuQLI"U'Tb_HYuH65XJmPjJ,oh6%mODJ>Bt@3s;tLjqIg8P0-O[g2Anen/?l+$]Wsam3pP@dRgQ
%:dU'MpSb540bLLX#+f(;Ee7CV+(bZll'de9X7(SC6FFg(W(Z%(Vm)1$HJ[Z/IhmbCK[m47kq_&!(@Zmk(PPsc2k$ZEEr]l1[TpQW
%&-n8D\TlhBJeZdWfZ5!^#*clo`#@soZ<X):3h@65$t?UeXDd<Q"@b^hc1Gu8B-()uNY4We%GUGc%T_2u[!-s-&6=S/(XI0-WfSDA
%Nj]KRc6)I/3o/2"SAY-Mf_+9_;-85]$]i/^h/lI@p"a`B-ho$D/(;l;G!;c(mqJ\/gGHm@/tbp^&UI&"![*:4)NiXf4D9[n2>-TS
%lK15U4LRH0o@(k"J%Ao6g@XqMC>^^WIG^bp4a'28+T?I;ltMlcI%h4qW*T!T(4El(gkP4U:Ih7L?g&q11dY>CN(4bJf0(!G-I=`7
%:M8C6QNt03>l&rKV`'6is)aL+D6H>@B[BEiC&:ieBhLUp@cC1u'>>U\oTj.mFjI0&IJr>6hIf6KY+#&d7Hc0p[*:'8lA<1a#$g]1
%7%`W.c;7a;l$,:i'dSU4_)0h`KBUcpZoFM350_cu$C_1GU6o5_pPHQNb2CC7JKD3pkN=ucegmXPoe^OmgapcFI?6?TKc6W'CJ]_!
%;d&<upbPfW56]=ObB]&9%<5q3BYWPcs2K6=;LOmbo4C4fTR.[!bW0SH\ApgVpr<Gc94=\c2%KYnJCsInOJtu8N23\O&.Y`q>)447
%G&=I"VNc^-buPZ)V#r@DgkKp*JFgca<S!mWWs,),qgp(Mn:q"h=l>06BjCp5H6DAb8a$\Q3MN"&eJPO:.jA(%V6[@5IrT9*"u4WC
%T;#G=9)>fL@`;9PO.$V\HJLh$3YiVd`&_=:Fk0MCXIbJTNJ2MLd3om6-fnf@A_R7r*g&epe`Me0RU1'>l8t_B!JQ/L+fr&MNa.M.
%E#h%b6eA%[K!j&B+0-T.EcQ!tmVn;(+c7#G((4QP!R)a@Q1WW=idt3qaN.*g`<qTh3bMcs?5c')7'ckI_W%2ONHA+)?15)PhJGb2
%&%uMc`"=mO9jJ-aq^Bi("/GjU)Hd(lAd&]e)fB<pBS4grLu\se9J&S(B]`$V0kt1sK_DuKSI,[rn.q[4BWhs5=j\Q%+QUeGIS_CY
%hXjkN8?cM8U39e46<4mh8N$1]<8:=fOE"!)@(HFE(Yk3K30?'D!+XU!1nhY_WU_#>.R[=K[SK.FC%d&^\M2k(7N$U(5^2[+TF"#4
%"MDf^L%M/u/2HdpO69b_2>RD8ZZWHI.rSIe:B1jSXo:`s34NY-CVtC_$1IA8Ru$S-mNn03#VSkopkS.HF%8Zlpk+7)!_gT>d@\$l
%=G&6orFo5;7q`GS+gd(FU2u,1G'VOBkA\IOe@Y@I5Tu?O(7NJZqaoUr-AUd_B#YU2R_R;.#AMUR@3_-8^gd0<jU1!=!C/;bm*hI$
%-,$fd8C'gMg(jZOl6X"4lhKk+,epZU2@T]"X2E6A?k!`:,38&9Y7qc:N[\Zds%qdg#)I2c[q"PQ:UUfN?CiS?-TJUGIsG@5jH78=
%_TdC(Rau.idWl;gGu^Xr$)=#1:!4:]`<%t\T-Vf@G>A_UHAcW@-a&Ai-Ys!5%Hq1]+Ym&p]ks^rB(#2_#[n8_MDhsmD6/Yd0h?B4
%Q(_(I8=7UZ*[i@I,7b]:!?,k#J72&`ooVP]7i1)[dCr/sVUB'kfM(e\(Hi[OYMt:"J=+h4o:iQ`:FZ2DVNcpdh_N7aeh$D]+ra^b
%EpXXCDdYEbZs^p@l-W(9QuApdoG#->kD&ZL3g5pHj6a3Id\9>EXW%j<,g=smcUlVW&2baOmE(c,@,lX*,rHEeP/V#m%;D!a)7M_&
%-/5AeUq'BmYGMjL^qks^QKZm[S.k-cWCh;'UedL/#MC\K>OOV$ZKBN7id1eeeqUP%^mW*B[%U"8+nX@H9OkZHH%mQr8fC$sD-t7h
%*:6)7ZmVMhUn+"\M0?qtH]Vq>j3*7uQ>XG\g7FM^i'-"B\*"<0*c]]`,F3E5&T=p(-IZGk"X_jk&RM'lYi9fK1Y+agA@U*Q7o2(K
%2MMA@'Xm*2EX=#@*LJSplR4Sc&h%k5C2._pbnqA97UtSpGdu39KEcNf^)&3S'+&qLc&E^KE37F+H:"#>RJR&9k<'YOo]SC>A):QT
%IURM;6N/4?43E5sWshOGpGB1[io&`n(,C>:3gde)5UJ/>O:R_7El&nL0`kD_SH-Qucn$qB*q5W;qkUkD(Q^3U\nC],O:7W-Ud[TC
%&Q-=c+ZD"R#-!$@nA8/f=:`:FL<$r9QMsYqDC`/+N"D$3hD?S)[Uf,sQ65q4Fkpc0&?LJ;j(7ko=m<e#%U&E:=R;b%5r(9P?JNNf
%:jH,CmUFN4(V?=Za,*6A"]GEm.\7)1jHr1bCWD(^,M>9$-HA"3`IfV0=K^<7[*K/@;?T"I-rIYC2+n*>_RA6RX/R+%m<LW+JiX@.
%iF)]IOOsu4]2>rM#SLupE0%QI,E.^f]1\W?d6X@#!,fQ-eHlOMa<2$e-u_Kc>VeH^U%6[bQ8W+T3Ut/eAp0b#ZUNK*%.a3DC?b.?
%HLVp>'N:!OE5SfkcPC`s,.2=ZI+A"m_<FAn#NnRJKZ`2^dgrZEMkTlj^+T?6O>*gI'TW_rMLoe7m<W"OE7:s=g@Y1ara2)(J3$cV
%-dC$/bZq[8V.F:m^i=q_oR*S+[gOl"\mpj9._e#u_?4`.pfj0$;h(UB%\UKb8ddr@0#<;h1gE-u[Q&O0b"ISh-Vm\Nb%5r'L%."'
%.3lS1,d7u:TMWY1"J@.93>a.u0(?(t'SXQ_AJ@'`AF4HR3X1e.CPg&.2Qc0MU:438`l[3g9D3Au,OBbDBQhRO4,'EYr0\I"bXR8Y
%,+I_Xdd=Eihak6*b/eUuSh_tYJ2WP-]t([lk-Z/S82l"e*^G(?FDESYm0Nk%#.3Ja2ea]@-LV,dNFW'-..+KoUno"T"muJ=_(I>A
%,dF+TMWq8_5utf:`18`VT2"`FZaQ-$4-7=f$^F4Ok;i[*kU*;>J)bG.r][(bDQ1gB8'k^4VRiuh)[@n-,V:?S93fPPamUSM[*;Bj
%XJ:m0`Kf[i[[Y&(\9W,t-]aTMoc*E$Tl@)^:(ZtN5a#7b4=Hp10F6%-kP^n<piN.VS&LQa3Zjeige0=c9hIX%&K:KA&c?7,?9tqs
%-q?K3'ii)?K?'M!G3_$:57*4J*5sp4NdbfdFhgQT/]oL!LW?Os)qbI.N^iUs+DKpc;lq3.19H$t[>"ZED>cgM6HYFI$Tt:.^CO6.
%nO>N:JM'OmfY?6bL;,m7BSbe?<'U5$1:+W\e.1I-PA,"7UVsODW@;9uYh)cWBT_mKC&.)-rK%Ubc&LpJDp)>IGD/"N1g,b8^&n^S
%diu0S7FU0_X;sRSVH"[Aa9W?PDTQDsiC1ad;^`)-DDC$^WjkL1dgs!/p/i9im4>-6jJ9e84!q[oJ=OI]eeq(rH!tG@KQ_kB8']s%
%"9m.3<;q:("hYha\E1]'`ASLA'AAf5#EYUs4m@u;VD!]VAG+'ihdM!gad-2JN.MGJMH`BeK9656FRM',bhGa^4S$H2FnB&R?W(c%
%hfVNpC\a'TIRQ8hF=eS"o9s^6)m#Q55"]o\?d:$)b6LQ/P&`a,c&(!Ad>l8rja>LaHuE!Kim[":Jlo4aHuD?JMn^_(PHO"oUJDbQ
%[[^.)QLBg4_L&GU:V)i&ag>-6oC8Xl2Z[,nht-AY^0BF5c@.*m.:U7eASp_(T?[)p`%-r])X/Lc::DMF,aFlgMG@P9b,X2gSKp"k
%_uimr)j1NAD1%[L@YXDSJl2R"m"\r2MAMAcc)E)T`,M/5M49(6[fUhk_3%L(,)tA,KI)16e)kGU8gqmK`kRYX%"@e8,@p9#gm6c9
%"'oAh^Y^ChIq.S!KW"Zg2p`l$/^aDX)TMa84d+:^o50Y_ao-1KOEB,LB=TH<deP2`Z0%MUZ&EXCo'uX@2hC8EN`l1"fptsVjmU@[
%*m$&IFe`?th%PpQCS@7uas2.]2WFNY/2)_#cm"KB;RB7oVU)U3V'QOd\!oQ+qr&U.bEUAkeDniZn<AqQJpEg:+QPn4Y<ta@?NV_t
%BHpYF/-Z+<-*]0W,LAmb)Quao[.<R/&Jae]j$i&hDrcJ"@cl=VH8Jq_R]%gX.__!M;g>jNTcU0^*(ec>-oj"7nJXEA<9ClQ;_pC]
%=t%Ad'Ob'haf;APPBm1!>/DQ0NHtraM6c=6a@&21Xj.0Eh/blFj;Go,T\V-GOm3d%HPJlZkD.,#-52Sk"js+R=!&aB^!dnf&WKl+
%'5Mg9gcVTqB_dZn1\Y&f!MdUhQbB'KQ`f(i],m>Z#KBAUV\9/ZcNaCXKGHR0=$?.1IrM"<L4]Y*kILGAU+l!AMAlPC@5H5#+6CA2
%mKZAXDCS]TcVbjOlOetG!Ea.c2]<i/;B[D`eFsZTaLuV"TfjD>NrTUQmY^0q%4"OOI-AB,.[OhQ%dFX-<4pe<7s[a]^/G(Z?)YdU
%5]>6fQ%c7(:1mEEs,`e;7AG.UgAf:cf"RfJ-BD+]@mN4%r&,W8<j5_6_Zu.XGg1o+fe%b=fk'f4SZ")>$MRBh7_76uq'&_mYJldl
%(,pPL\W,H^Eh^r#0hrC=hW0,'^#98:>@-ukk`%skZY3l<3FkNrE\C!Z!\e^LW*`5b2\J4=o'>9&7rQI*\9mmf:If?Mf!kD3Hj+@4
%We9/G.e9F!BOJY!GO<LG<4OJm?>45cI`ApQFT,T\XHXn,`]c)o&T/GN:NFB;0,4EE-,@UoC4O`p<Qoaus%"SQ0K>]ml+nN9Qn8Jj
%_5OSs9fs31$jiZ==5ruHZ"Nqr9':IB7osN,0^46UGq"W42U<)DEnmV+AE<B#SKC'4Yftg_AJc?bI"1JAQ^)hTrf)k1nm>AYM=3pI
%Zn`/cH+#p1IV#,+)NQ6ro9^F,:3#-oCKEnRo7V,hmfRkq2ttm&-d1a\>aZs,FM=J)O"glh?RI%m1@Is2R41p3jpB;Wcd_ILb.K\$
%@J"[;daS([<'f=J$NHg6PInHFgA2QmF$aQdVI$PB6$"D(p$uGJR6ueg!h3LoVEt,<kMg]^nd(?A=d(nl99A)^h`M2.2$IPF4[RZ1
%Icu/ZA>d7)5Oea-UFFd@+>`L&,A!e/R1,MLYpnsN^Mse1\m&#(bM?Ku+=)X6W`83-*\GAZ9m'!G3=b.6;a(,CUQ2>%`Pe<n0KI;^
%5S7?mSF#\@JE/!Sh`IAV/q)UH6cnK'o8`'#f-AYP!H#O72WP$7i&GU5B=%B,9J%)9PYFM:RJ--dac])u6Ub@dZLo#&Z9uT%0X,M[
%""!?gZsH]WqgE]XOXu1VOs4%2\+Yt/=U=6e,$>35VFXbST^2JdA??e(S<F#*7-EA?-LQ1:$`qCWF;X@qeD=hqnc[Lsl\k>PkN8U0
%H#LoppMq8Oh\P=1&FJ":H#e>Z-]@QPr_7RFSghgo9sXP*;4b/6aP%tmeQ:b"1QS)U+6V`jgha&S?K*?r2t;'=:r;>M9cjX8ei@5L
%H&%og3e[3+8<Zb)cM>Qp]2A<H-;Z:bS.jnHoY.5Z\eq!6p425i$I\H0h>.mM_adJ5.m%"C+Rd]6M.EJ[o71]i%@%^nF`Z22-mt?l
%b,^El;Y<jH)6od@nPh[<m\"pb';*BV,aonA\Tl=RNlPY\4M5j2[\oCSH@6I;V*\/:U+hE*\,c4KI[Qb)i[aVPOPI-'s0u$=a/rKH
%>ml9GJF1:tmb1RXIO@R!@V%2,?J/UI-=6$DD^$9\@3%lTqk_PD(0:D<Da*4GMNqOl#B/e>?MMUE6[L'H.F^qSh:X?R=H*@]7]b7'
%:b!!oj]fCMYOa&?!4S(?p=n-`6<N./HO:/0`C-f[D^nc>=D<\'9n%Jdg"mX>aJuA[h\X16\R?njDCPMI'?0B'+VkW,lB_\&q-B)"
%LX8lZQY!HOV+_8MJ<`a1i7)>_=0PT#_+!"U]e]%:0Q(flo?3SnF<1]f7j+^k8(MtYX8n1>SR)QcDTV;[pZ22J)-mb[Y:!it;qgi.
%fBW`W88:rscM@$O8L9g^q-]dg6H3jm*7Ij_0"bQJX=",X0dtYZq(4DX]k@RP2Re;Qm+.`^'r:]E[KR;)->cBIM&1,[B&08\G:mB7
%nnL2((U#:S'C+T%<lFT`I6pq^>Z:SIKmc;X1"mCf@:>d)<?H#*lW&Xe')S9(/F4#bSZaX3HS4)*]<G)P2\BN_-O]f2L'(H+a--S.
%.-qVIl4XjicP?-[H.UX^`Rbju$!$XQ]=9LEm%Z+$:0$1/[J+ftI6pq^XI.85$N#KgQje2R['3>:HhGpCI6r@V6UNLXlk>gTG,j)N
%$N#LVqX,1s^FAL_!ql8*%mmm8fI(mLprUB:4t+MI0-cpmZ1o`pA/+`#5dY/2qh2!GW%GY`(A8&7ot:Z=+S\W=T+D!RMNqf^qcJN^
%DRP@%XSff::WT\fq`"M2C/5Z>$!$ZgdWo.rfI&LKb`9`e$N&HXVQ9Q(qOXDqO]h]/Z'#(@_EOY:^%"nfJ#KT4gF!:LnP,`KQKob&
%m+qYOjdnJTc]-*(]>dcU72R:RpN3pSm+G<VmhS,"PN13&prU9$ipJCIEf9,+7P-:Vp:$hiS>E=sJO=r5Y.*GW7QfD&X%+;q!^F6g
%VRLdBhB_m>-IlD&J:C7^7(:+`1EPiq=uXkq;^(tYFd^+TgkchXGGr0$^+F;ngE\._p;l?F&e[8"ZLcC$\Jq:A3pTZ6niuqINi+N0
%A(HXhrI;+GV8P"dHS?Q<\!R-.nW#=8^AmZ,31[kHImUscH.ab[?2f&uSs&jJn[G.Y?iDGMCqG,pktmrrgp!c'qW?CDNd2M]9hZ&H
%*K,<;IjY,dAnWm4T`42E510#B8$]a(:#GF)Rbi:#V<XtZEq;V3+ZJ+R(2[H"j1Q2O8Q$3p\:b!J<J2U#Ul".hV3YK="HS/"cK^\&
%@?`B_DZ#u2(961^5^t'0$:'f?q^aDN$:'f=6nY%ZNhkTK$8EX9Js5.M5+ne]I1[/c#>0eIR=N43ZlZhHneLn<^<q-q^9lV'`m;Of
%g(XD^WoFO3-ipr@fnt$Ui!&aSNaUmQYT]GU=I2TR[^.Dj<j2X2HGclJ&*j:HIsAe($.]IkA,+)*$_@5=]8?YT.nCIe4E@tWGZL-8
%iI(*+_lIeWp08c<g_,K'l'mt]TP#npL/?`5EJspDa.ANLcUs&/%u@h=+1\A3ms(LZ,#Lf!E!_5\Ac_=GCqaLEo'ZJ:"c+6N<0Mh#
%+,ra;4hg"65AJ5+r9D$eet`#RIufu^:Ybifo0%#qrqk5$]".S(m>22R+7QeZ9_I`%IhDe.#O_P;,Hj?F58!i(1k+D<aM!(Ids5J)
%qmN;!Ve!uXn&$s$&"h;NZr^9)INNI14o",mFL(A%Q\Z-gHH5"QMWOpRb6p):&>2*[ehoL5(XQ+[eQ$_JAF9<+qOY>g:bi^Tn`kIn
%c?-B6I6)hrZr$1`XS(4pW/sV2Cr`YOl\V'uZ4!Y7+]U3ona"UEg9?1%plV1QU<,R9*C>sr4=+I->bZ(H*.K?^pMA$TV33=(l5rGP
%08\hr]%cr=KiDuhl<E%W'KGq$eS@<]0lf%*\V5(MVt/6b7!IV'Y3r_C]&U]\C%CS-4--#6,p$'AcsC]0k4Jel(Y.?]/QU7.+JrE&
%IbjBcC543Ah"9hhSHj<'"d`Xqi?C5p"ZI?Z&05GR&D#]LK([()(6;U>Xb:_`X!PX&>!9A7(^][\>pekGgY\ue>oQZe84A3K_&T2s
%?T9?_+5n[g/#P/kUhk4sm)Tt:C-#`"X2D!^HXkSqM3e>d0*@h@'J#cl%:W=nKMpp7lFS#PQWlEB/RJFT8F7GW=OYF="qN5`#jA>R
%Z6ROtltSSp7#bI)-!m!`d^h;+G':?I=*1FnKtl1_20+#bC\WY^.RZ$0p.FCnTIb\[:o^'.M1Jc??=*bL>"*D^%KHFBMXj[KX!be6
%p#KVbnuu$&**5&D2oW$KPDp9#C/sc&l2$5d$,%1-<aIkFBX^\VEEi]=HslG4A[I(XoBjgp7WF$2GF\RnM!KMNJ23*WpfHg7c"&/7
%!kPu8h!Lnjh!E6D):uG'V<b1"Jggco8!HN*GVF,1]MEO``47hX5r3QIX%n`=YDZL@2fW5NM-GS.>#<bm9t7i'WnO!H[l=-EEAA09
%A=(?m8HtHt<AZ,tY1^Jsid1iZ13:76Ne^$3DUQ<Amh8"iCB,GJ"-`#6E,bV3lXhN,"%IE'k^j88kXp;Z$s_2FHoa/[]=7ic<lVl6
%Sbb6A=j7emEq]VsjuY"M69_]BY^&N:\sHrtJD\Dr*]ipg,+b*J`Vt'7M'CAQdJ9gUd_1UgFihnf41+gc=!Pf5$(7s&S5^4%:@0!C
%ZenCc\k]reP9-SBO!0GL&]!*b$2a%^JAEocYXe3HGtHf\Mt:n/1;q=Vj9LKj?"XD^eWr=pmJ]ZmS@ZXcp71%L$RWY_dW_b\j]5<*
%0imP5S>-q>lg1F-H^/*@F1NZ(,Trj1OV:Ur<*cJ0<*RN$RO#A!IU/:brrOkee/R_B*@Y[Mf0J6\fGda7$_cD5"T@(`hX5_S"moVR
%d6g=6ZNL%HdI-@O4uCK8o37_u2c\(r*q)H4%C5ZO01ll=eg#4%kJJU&\"+)58*$-(&!nP6lse.s6d$rNPZs2nFUB4Fn^'^W_PpSA
%9+p@;,LYmI<7M9?Kh!d7'\&`F9+p@;,KfPP,t\g3eg'&+_NQTDN0)l+*>ea]67NY3;tBE2\?,0`6f0=6PBU0ggV!\F??96m-#Bme
%il_[SaftfFb6g[#kuV4mpe]W2pQlW/nP=f7f3D@t<GVW?b6iq4.(Q,t,j]9q*>tbY4a,fCK;VoOp;02*[(<s<:ae-]<u2oMVat,?
%oWo>T8e+VjJfL`EMb^[CFlD<X;lsAHiM#m\LMm^QHTk;]_,"&0onA/fei\$.+a]:.W='5>j:f&jnEi.<AWQ"BMFF0Z^@4tq[_oSP
%n+WV14FAp8.JL\HklO*_bmQ-dPV*W2R1+HB_F*#LT$L\eaB99;'g'8@rJM$oR3Fs@bpR5'4`]MToP=m22nuom:b7ff]^8P@*eCC#
%&#IgKm'Q)*(EPbZ:Z9b;q4b>=^'W;krT_6eBda$#?,+#@:^@CQae^r0*k:]9L?O$(Knn+,0i[ZAq$R_0ZP;'/#"&4[KnhV:jP4o,
%4ZBIESpM7p9&Fg5o@=sVnSZFUleh,qa1\A,Ph)EZ/%H5*mI5*E+EHG7ZtXL>7fE%t6NJU4].EIHKnn)Q,YL]M\aWGl[R7$b_T,8$
%VGalDOtuD.(EQ3+G"DKh:LAAABR/CVlG)#]*Qj[^pF\RUdSuQ[iM!?"$D5*&;#7Ufq(D*+$P+>lVsq/3*cdtDO"1nnN-Y?<6_WGm
%@tt'+]'rPMm7(bqET*V`D27jj>kt5mP.)IGYqC?OlGCHZNgon<Knm>#8D]ZbgFm>^D_=0MD(Y1.(EQ16Yph_0B6;N;*f@nPWC.af
%!TrVS%qV:Es87S+dU=i4Y^,6F6_Q7n`YfFfCVRIM:tiOZ&s]*(n5.iN^KI/C^$njSBQ=b=+1Uf:Y4)2IKno4s'VE,/nA\qugigc3
%H1Jhilf8E0G0!:+H1&O:kosDF(\c#Z&#FJtfL1)O_F&4]q!lSc>;j,%&#FIshX2@t,l>GGl.Z^*aKpVm^[R?QPAlX:[DW"=aY$Tp
%?1BAD/'&^/;FAaOXJ,:Gk&a/dS+p;<SaZT%H\\C^*@6cI8?somY>B2a'#9_\8)_ndeCq^D@q^L!92jh2diTQb[;\/JmAC*le4^?.
%IXS/6CO>.iS%u$V9N;L4/\#\V=iXlrVrP;._:7>g]'HIT$p*uLYDjQ3G\6pe<?<bI!rF$6*8o9gU@S(48PQI3W4EJ>cBm9sEK33$
%<83SF*&1M<m2X'EX%%>3.h\sQIJVn`1j.98WYO&G'0hA#'ulqK^3-*^Rtc(?6f3;g+!Y"L")E=<[46qa9rM]3frY1Y:jtEKhbtVc
%?W:bYC=I#nb[Tp-0`1dp1^4rR#bHq8@sD`HcJ`J(;`u0,?JY/4Bu+q5;YGpoaYioE?gA?j`h:l;Z8`1t"^QZQ@m-EtGOPf#Y>TTI
%R8`S>s"*fUd;`_.7:pD_bRM4&o.mPL%FI]i-U]UU&MW.Lk'2!H0ZgRPF@5H&XDE@:6`TP$$KjlgGKqkao`Uc"o%"ddY)6LYHfkW-
%Lb!@?Kd7F.ea$sT24]9Tauca`^ZR0n0Xu.n$-1J6BMs2_/cZ&!:5B`1,,6e)NncYVXD_iF4?74(#Y.'Yo,8f@h<8^J?/Vd\_f>6,
%>Ni*io7o*JlI<hn$-10D0A88G3aCLc"-%lECfG%'Y2$8(ZI=a,$eQ&N0Y5pP:=4HieMehEm0rmqL0e1j?r=1cMunZ;SKf/+_Q@Gk
%b]N'@8I96V=g[fKRgqlZ!J0$1nC;A@KulReAbY+ud"K+7"o!-B?fMpu[?NP6Zkkk*BEgCB9PWdnV0&,Aen3>_qK,g1HM!/Bi&qUS
%%ufi["loCS^s%8SF&/tMX?8?:q#(!4`d0'S42;bi%g2^<L2KC<r\1T!bajs`!t2[Cd[!a!E69V/feV]S"$X%g&i/:I6](jn%F<o+
%EbMl><kpf$)Uh+%YadT"MrA-<A5p*I5tt0"558=#mG674p4a'PT>4gf,[<jL%N$%W[d-p/4dn[lg<$(7!,1@M5D?LDZ61uaR)e1U
%:ODq@HpOQ#Z*d*d@C[\'8B<4_eeAFMYO\+)F?<L'>`_;Aka2eaA-6I0&riP;*c5TgKD<<Shad"[D$qfuY<DSjkb\.PYIn.*DD15l
%WB1sr"uc*;L5(^*H;lS(=2>GeY[mocX-*hj`_?$cVkKi!7\9\>CBj?.m*h)JlDJ.\?34:%aeA9Cc2bZ8"e1n,l9f5c%:Id;dP`e)
%*\D[BJ4FbCVkGR]UaBS/ZsUF$!Z2haqSCrY09f8aFYk=5\<2@lIfg4e3f-XR_E&*=I.OJKOU<A)5<#FWl#qc$G0)recIRT\&7BS?
%q9',W#^J%[7Vs<dFu^fC1TT^%\HDd7bV<T?on_iBn[ZcC'/T<\*XRMSc=jqO"6JJ+]"hdRkRa(A1eY5'3F3`=N#P2g!-*2+(D)h5
%Z\JdHPg2I.'S4BWXU)m@;+5.nGSCaB^8VC!fADI)3!0hZ'bQ5/V$I_VBgjj>%D\hn7G+.#.jBUT8J.tp?lcm]FX<i<$ke]n/(c#W
%J"9:9jZEQP:Gj"2bbRaZjJZ"t#go^6e&%X,"5LbF8+'s\YX3@4_]S(mps[o!8GT6E?sU_.d"XHP$?O.6en+_p\L&[U9gJG=_oSPB
%-Z_V_3EQG,H#hSDs1ejKJAr$DFNCT!nmRlJ8"lRfop?^n*pAC;D?XlZ$Ro+DmUde0=@FTR^'tfrgbm60"f*ZU[cSl6`6ol`AcCRa
%g.h`Z12\:cL7pQq2+tB0.JuE8[:5VWK%3<t<X*dq>_U&'@ZY"L,#4mabS\$`TLDO)Fd>=6%+!bDDRntjAdAIpn/[>("s:tuo[Tkm
%-%$$\e<E\9@af(&<jueY;gU+X<P"hBQ1CrTPB]$abkNi4i6,;oa!NKb%;DE2VN3gCU2pDfL`,FJ51$<-W?T(;iS3OO-i25:]_@u@
%PaAi"+_lu<1l:R2GtKC6[MZCZS;APB><P=mp4GD3JRsk``Mu$HNQ]X:[,,W8JhmAUHX'!T(Mr%oA?(@EE2^/i5:;<lZ311Hc\8`c
%e[o]=hQLg.4;,3'8PVY*>P<`h&nn-<kH6Drc`O4kR-tM%=JqjN#336pjM<:\`\G2)a+$nj;5F&igY,5IU\#;$JEG<lCo,T\*^^tA
%LGZK6+U5P8C4BQTpeIX6_,[k6E#`Cb*KGkAGWQJY[d:3[r:c_)elnT3R$R%X;ke>:%N;&)U^m)hI]!ZWLWU/!q',??8ooqJ[;C/k
%H=W@&G#E`e7N!f&!sLppV^aF%S>p7"T!5@UJPXeq?[M7p*Tb[b%=e+Ur!21O)UUS'5S.=>bJk,5CkE$L`^X@"cGQ"C\%f=p<R6W"
%O\cnPci'qfc8j'\BO.ULX"3V<H?*/KkIGO)Z/(<RHl*o[>]X3?;\,M88%grg^46+ZU8cTpE.HU`@d5)FSJ\;TL"t`HMe4%a5!+4=
%-G>+7hgW<,F8!dU5Pf'aiZh:RbIaCL$X<RIrPI5(kJ+NO/K]HhSFlArQ`c!W(]'D?s3-a@\'NkGF7RF#T0C!Zdk>a`cgJ['kC<NJ
%)/c_,(9`C3JYaCah+5o0X)HXGo$6-.CR>%si5mX==6g+;&&`8pcYO(T@<p*A<d0p4mknO!c*fV?\c)Kp]JJTnW@NaQopE/"k"QL*
%`\r)tBoa&N]D]Hn-`%iLj6XnIc.@4paaS36IVc_@i"?4;[\Y@Jr<oXL)_#X=bC-#ibA6f+k?Z/Gs0JRqoh[``k^4DAdZ13Dd@W<Y
%B;2cN\m!o2'\HjpQK'@-]%)k6^;"sps1*7L9Xsqarq#3M9B#[,QRgr6T:Gjf*R<Ioj:;nP\&ZgBq9sQ.c^_Y`X3M]W[)q^q-QbMN
%jS7fX2o"9oL[39eAN4U)4GD*AI%V4hXR+W,:Z/RIk_H^4ml'@#?O"=Gde0dsr-J$VcG*Z_rkgrr>lO*Qo"",.M7:Gt^:H@J%/r';
%LU2KCpZ.b+%);H%Zek*"a4Ss[gY6X_>e'=Ca.LI;I"2(:Drpg;qpI2_^@fdSD`p"9cL![UE<"4_$QoB=a.:DShu<=cmIu[6gtVR-
%VeX3#05q&ZEZ[mg*F4G5nGAJfns]NUPl'8#>o+IfeA9^`8RcQ:qSWEQlES_<BusQ.2NERfbn61trCZ^][<<+1q_&fQa%tN?r:e]c
%4)mf[hdT%qE:p]TIh+!+4DcNF-G4SQrj_pucEl3(cf-l2*o*7ja(tqGnBNhV^C?8L,$SrU&5i$Y>s3Z!c@aI5:Nu`\5C`\=W?Hci
%k3W[&:9G['q:kB*pmE)1Y>F*2Gn?$454:H1*I.`f!)*.oluuO#FrTmM#Ot].g:^fU&7,1kr)`=cG3,n8:]<BOS%SdURg0M4:XAsZ
%jinQTGK<kS3am<YJiO4F\af+L,s#p/BlBS&\GXrsn/iX%d_<9iqtklX"6KBNXMauu8(Ob4Ba5B`#<u`kd/-%?LSQq&cQaM$IF&r^
%m3(TYODgE9*/1X;NRA<T=S?gW%`$Qe46o=jCf&gt=Nl4(fmpoPq4%I)ET<[^:5!n/`7h%f(U![\l/l%`ci!/_>eL*]='%&I5FopF
%c9+8a_<"m&?i56?>5@Qd$bq2kpP2hArHdr/LZeVqG57[60<\VEJ*KY=qYg59o8q872oZ,hj2)Z``tCNRs)s?/%rH)H0nP=Q#;TqY
%Ak=(L_`jsZFH</3m`3Bdk@XNbgF_ll5A_:hmG<N2Va#%!\pY:0Vn>$Gqsn^0hX40DQDO-?HYsYQGDlE6rilC/'CYq5$HLhBr:B6B
%+TqURM7/BC@,o5[+8+6FD'p?-k:VPgT@8PXbC?%2Oa_ZaSBEq1"rrl_jYc/t\#4\cq#(_QhVOUrP/"0V3A/(l?.lFYFs43fi5F?E
%j$00k09OS2R1jfDVkZYT%R8pQSFBt+g&WS&!D/dPl&QmN*tR\BgN14oT$,dI]dKo4g(H;hmg70QQF"\[:Y6Z*8)NC@GPE<;_'9q0
%V6hObo)A9g,B*/0'*^G\+Id0WYnuS!mg7F3V??l&5,['NLtZ[*P?ZVbs#kkp?iAJTpj_/gI+o-L'[;'_n@3Z<j6s-5(hV\(pZLF&
%oB;r&I[oYU@I<r=Bst/aHfq$lo#pQRhr`SDYb[o)]_D(`F-?M#>N,1a3H4?[a#>rT_5n`eF=uR)hjh1'hTo!$DKS0_3.CSmll"^F
%1G%?RQA&F'`T^[Ao0G@HH)W!_iIq7'p-T)FmA,`trTBE)rUokuJ;4k6$>/nKO$>h\+cnEu[W.bE.QV_2a&@1NBg7#Grih9e_lo^#
%ls[inM_caITROEH/[GX<MT^`Dit-_8pkQ'BWGgf-2n*sQ3\fBYT8l-!HUVB>cS"&OGp^p7gjAeM?c71_T-@]OF_?`T=L=F8n^ca3
%Rd'XomgmiY#HRjLluV;\n6U?#(?%TM>D2`73rYWF"h5',ltd^37=WS4)eL07?&-VL^RJh2r%c"m07U]"?%d&([E]2q^u"Ag077j#
%KWW/Jo@LIAWcQM,J_%:OTAPs>#UV\NYJYYcq/\V$QVMua?&*41Y.jkt&,RIR/^n;uqKT*ns0?bQ0E(f0gqWjMDT)$qni?[>nF2o!
%mBLgs^aO'?1ZjMaNR(`!!:?+0IDE+u7VM[K"rinF4W/SgMj_5G53)(cT:S6h7-;U34CHS,h")C7V1"G^bgaJn1P?"8*b?Pch>Z#/
%j,mR0C9'D*pG8]-H#VJ:Fn!QfoAk1aF+.Si2Kq>m#_Ka^0i+Brq?Z1s;t?H.`dW-m`&qo)nc6mGbBIcP`f*$(hi[Nnrd$=@E9b.(
%%fgHA([Y%pF^i+m8J9\;))Lj=@l="DJQl6S]6="^HdcSP:UXSUE^kZKlM$XBhg=tHmFU`hde6e4PM6r5JJ\(A*gF*?C-=SPZsBYa
%Pd]1f/7O8;R`IBZ44HZ1PdWLQg4RgKmRCpfreULZl/NjjroG)G7X0B/lSD9VL^TZaq.]^^VW<$DO4_GUkCrPW(ZX"-D=3H9FpR>2
%q]O3JRFnJ`#\b2g)h2`j0thaBHReXJo6q)(\Qa$o>s!MtqT1P;J3dM(Ahjjgc!5nDiM&E93DX]fKNIV9F#C^]3qA`RqqI`gq!\qd
%G:WdbYI?A<;%r'HM,d)BNhHBq$2aDY"u7io#DEu>j[&F/k>":e]Jd$EY,AUPg[@@sHbg+GG;as5B'Dr^BOdi71Qo2D2U1CRaiC=B
%r\0\mp;u$!p4k6A9qRuIr?8oPiPURpYIX)!J%KRCJPSKo2&i$7oquS<k5I(/C*Yp`@5oPak*OPcqXj+F5@9SH5Q0/Cc=c=gSRs<I
%pE#o\-hJA$d^oHr4_K+dk"B="?h3q=+2b,Ujt&Y0rr2`>Y\E!>]AoA&U)G*1TRZ8tmkA_qc#hjL[*hO_5(#S]BH'^<^[U2=8GMSK
%a/]_H?2XQun*?=Tq!@d"Z\Y4D#S_2b^7(2"XN8ecE:V`5Nt2/^*DcKCrT!-@i3pf^^4(:ddpI%$LDR^Pq<k".[iTqa0F'hc%h6:f
%]R=4a`nl`.QG64:e%C(B:(rV:<&tGS^KJHGqsj$X;*ReS+V2?^lUh$F,;8OVjsiR6Y;lKGoGL^ogar$B>P?-"pR*gblg2.UQCIl*
%E]a"a^P1FkCtDm2rXY@qHIiYG?[q3P$>Gn5/Nj%#]dmalakIUqF>r&>4dVf2gPO0bU[s17C%`XL2eNlb50:RBcJBJs5C":8qQ'PW
%k)V4UJ+_8t@K*hk+!urCWC=&QMnZaugPq\<QVY)S=0Gs+njYEaoO9VgNI0gqo1e8W++<c#;Bg$nH&+W41f`Yi,?+4+;URDdleF!h
%F#ds'gmbu42,>kO:%K3;%IK:W\\p>Ls6l.]Dq3M=9!.ZVZerKE]^b@bZUYNJ4]sddm&^eZ]lj&.BAW[XjMB<GcSd\qhtTDh/jI&L
%Ec^9_Mj8?6B.n_Cp=X(1?f&<moYJP)q+Z=-dDWsef=Zn1<CjR.'pW-2rk3gXf<oh:rV5gBhqcOQ[NkcH`bQXunHVSo!a6[[AF.M^
%O8]-fDtWniQfl(M4RDY/M>K&i#T&bNRIeb].\!n2Rf%@%C&Kct#P0>5cGgdAr[/fF]6NK,Y<K_j7=Y;.]CsX5X&kqM8iNn8qrO-U
%I-^(Bn#q1fn`0KlK<8]ap.D'NehYoV7K4KUeD$1cje#noIK%gdQejq+pt;#/cXi#ZNeHeF<7NbSM/Bg,Nl\u/:2JB*b^6pCF^ggm
%@BWhF3jDDG0X8B7F^ggmTap^+W"Yrmp"IsuN3`^6#?NJMI,lId"(=$*NIP*Md(T8Fm(]W2k\G)3Ip'b;B\eNiIp'b;g&.;)TOR9"
%Pea5MZ"ke>HM[:.02>SmjmH1drU"gCB_e,^f5@DQT<.u(5P"5QhK8'J`oA.iph@K@r'te`W>ofhp`5T"^UX%*ohk!e>#r]GO<5<$
%[7VYka4>_<eF]9'r_ed"bZn_RO5Bm4r@&D.cJ>:>O]U)RbGrGMc_PG#;5,]$TBAsrRG0*(@1N/57II[:]t(Sol=B*EZc[;5rmTW&
%.%tqRm#I)edu(-VgfAk&rUGXr:/Lo[BAA^.V?M<AR<Gq1hVUeST3S$=!rq5gs,a-VYu)//@WfC7d,/X,o&h)XFZYR?i<#n/I!f\Q
%n>k"`+(]UN&TFeS-KkR+b^]K`3UF[cH9=p<g9?`&_HUX`O6;!P0)YG/$`E\s8nssokNe.g&Ec__hbnMiNVj0r`Y<R^mBqjj:BQJ5
%Fp',/o975',^@(Rk0]H2cT&W3meJASn^A0MB&".dIJ`D-c@7n7Vb^**$c"rUqs)`+[`#Z1`nU=U[V,O1e(5D6cZjP@92R:gnZgnB
%#?QBME"_(.n7OD3kiFVQ-*7p(0kfZ8RB&CHlgm3rI(qcc%-u2smC:K[\HFK(nA03=(,3-'@ipJ/a:9r1?ak_Aa-N<GZ?P)Ec?6R"
%kjml(-V"Krd<Tjk\)uqc7JQ[]]JgUWiT.6LCUY>b,<"+]Fg>R!:lXTHn_7"2c7Qp/[==dna"?Ctc@X[N`I"7;p9*q^rAt),mN[1m
%.#pGBfQ^kC+VB"^"$col$#7e!S6Y]FI6:miR""VU+eLK;_!,-c`IOf"nRPb`nO%bYWZ5%kq$7X:h>;SP"Pu,#ZUas"[m+QAT$Qp'
%G_!G=Y@j@c\_hJBb99*FF>Xj$E6hVfZT3)=QY5Z/8']?+Q+U_\B5F!Wp1LJp@n1-E%s!6gJ<)KV-*8t@gB3HjkON$,nG?>4D$OT5
%;Y3X"cRA8+cIqfu5Q,&.bB7Gnc)uEf8c8'n]C+rrfQuB<rDD9To/aL%"uJhagRg2\ifQ5_7j[_p6_41^#GVos2qst`N]N<i$tr7I
%#FJ%Apd].u['T;Ia6m.-prg(oqM]'ZjLF:P@3Ga$7GI9?KJSD]LcHV!N_3J`F]Ym$,,FteOg#pmB330C$L+dc#ORiYd5Vr+otkd9
%St.gP5Pb$#eaLhV]635'R%j)J>q98f>J'e%o08),S@R\0cD-GI*b5*-#rOYRB&o63k<:Y6cLm/EAqg6Vf-K.^p>F.Cs/>YbYL!5V
%("$#b.q/k"XmlI*/Ht#,JA$JHBCh`O454KF8(t?G_F4G"lgkRfX%Ns,:qR]c\:%dddWYUg\!bN_Ioq&9>1`J+q7="IIdkgt[UqWD
%Ro[g_q!mh%^U^nE-LZEWa0Z\dH<pKIlYfRWp3nl+Zr`3kWMAd[3ThKoJ=+lIB(^+OI-&kgGce&;W9&J?:=!YmS$1i;X'?U^nM`(?
%%fsmlf]FOQEaA$hYHOQuAs:PsAbaT`1@g(\9if@.l_!4j0>IAlSDj@oF&>c9'74eKk/dL<]OnnGl)Y<Z(<"tlq+@a;?4o=LZ$,rc
%-Yp=XEmaK=^%L7=O5,=S5P]U%VRK@)?MIpgqobTpq"XW_[JQ/[qBWtk48/38G@n"ORs3=djkMkopq>us.bB8LpO5);hYMR`3IbuG
%Z]jtGB5bM_Hagm?rNdXDFmj2f^E+XaJ1ajimpFuCOV>0MOFR7Oeo(NRB/b:qSp=K,Kb)J4IkiM:5)=90\:$Krd/q/!IJM39Ze>8a
%=Un<7GkRcsonm,SZoWX$IF8L1oA[4MTDAqO0&H9]f7R5NhtqT8?i6=8Hqo-1j6EV-T6saZ9]#d>l>L%Df<o5TqfeW5p\C_b1OP^K
%esRm\MsPogjF=jqrssG]T-GNeQS7?iGHO&R0H]nNiV-mH]8[U[s5kX'cD?MUO.NH1ID,1;fNWens4>BmikMn)ps<&.cLR$TdIhk,
%hE&KR=8^1*F]bbic<bnliprlA0-39)Eqe8QQ#drBl-&`A5.eIJDFLbC,?KB)E^IL^h3#nB:F@#t]n7uOF6kKfEY8?Il$r17(]VMD
%lhHOIDo)JQF;H1Y`dW5nIsirarfj\f=n-CkbE\]LFXmu_aWJ9_k7m)[-;FKGM(AC;?(\ZFJ"?NVJ,OfI$#LbDEVIkkF5LljIrY5)
%_oE]D=3c9hin:(S%p(a)rohnPGCSEHHfNnlCNlC5GeES5X1Oi?2WYs?MCW=(Hh(WWlP%U8qs;G"(Q[uJroW=u#LDg%H!tp/Q*]@c
%gjQiqlF!P9SnpOdp?mQ'0;"juk7;ZWI)FJNFc*g9$aoc0CE&<Ur\6UcYFN;uo]^rD5CRqYYQ&n?Hp!Fi^\E(=5'l_X&%h2HB2;ji
%IJi<F[WS1RqV.o$T0/3"I/b+cme;.%Y(YXH&,A,-W40;>mErbQ%V)t1;%X1S&:UkRm,fIh]`4gsT5lp@?%0PPq<=!))5$T\Nmmmu
%h.LpjTC;@6XXrfbs3E.g>'29\<`\!jo"B^4+#UT,jbIn@"CYf@4lUtP8'.le,X6=jWKYa*:fg;)I:\S3r:2juNVODlF,h!1@C=7c
%50<2gXA!*lX3h_$an"NB!j9@9bU`G(jnrkL0$C2[;:j!K053;/emp2)<EFL2TscGC-3I8^c;i_(rG'Y"c\m7[ii4?3M7bI[eX#^+
%Q=U>_b&K;[e9P\nlVb`9$1aA/Y6=#hA)YJm*Ee-X1HI.'IC3)DEGKN1[=jG%pEZ@];[u*2W(#R3AHo8:%*<.J(1enYeJ>1A)s+KH
%,oM\^[:4:>McO>F\?NBkQ>9Y9nI\Z%oaN_#4g3H%o?(QjF^OeVF31,tqT51Oq1b=_Sf"!q;5WtXV\`jcpn/`Km^[_Z"kel7X"8m^
%j=9aQfW^NM>AE69aGY+_>co@,*+]/am,Q`VP_uR5:("MGLO_E/$d`-2H&h)A?+P8f"TPr,?eiW.gI/2l18YHmbsB918CU/_)j7/g
%>:<H/,@sbd:U4FPdGSTE?*9B6p2WSHKut%LQ=Ed$>O=;ie3GoHA+akKQ&Wmf4]ucp!u\1+-rVIO-,V4T*XT74LnMABbQoFrkYeC[
%b+:Z,[+3^hAHFWK?,tgEc8k]LGu3d'*\E9sqlaN]cO:O1;5+K-k#\!fW]XTWZHuO:c]Ycumc@#/B\m<oCYW%RTik](AA@fWEEN`:
%W$+#0PBR1@S1tBIl]oELZI#GPX[s8%/P.cJn,6uR+F'U8<I'TP1&8318eXORF0Z]7<%lQ$_$?j5LDT]>MGmd@Q^l\rEf*3(*^j$K
%kZeD:$XNFmE?U]7FSZWO?09!,U$S(GA5VG/NRu9i7VI.RY%Dr<ee?i9EYUp,F5mqb]p@1YFqsLMHsY)RUR^C-m\#A!.5lenaBfp<
%@YJ`Gd\H/6-@;![m2ARIPshbn]IY`8,lB.CfalMIlp<8.lf;N@-.p-aQt*spmnIKGbN*1IKdhWiK[]WA#<0^9FTnfnRp';mb,C!G
%6B8YNal-8*D@r$Aou8.`&?UJ=E.,'@'+,.B$!#gd:@3u+7nGU,*jK*'ENcHhpJhHh$R,l;\7J`a-frjR'sJRBKjZp*Hs'TNhBPFR
%AqSi.jC'u5<'i)Mk>T)m(j`K/bdHIkQI!7To>(5qU8l)P0dQ*`p&u7e.*E6K:/bNeZB6Z2aQ>If=s5A(a"k#CK9V+V+B%;HLI@FQ
%kI1'/]r(k4UfmL3*!Ost10#t/6YY9im#2KDG@WfBi_OeWO):6^_A6VS2>#+&>9Zh;#\r=<i./*UXp3*KQqt*FQ]2@^r!.8^Kd828
%U3m?)8JmmY:&ZQQTs@FJA6$GKGV<23":YW;j<-*L)1k>TR=sX46mbcbZ-&.6APfeig;3*j;c=FJOh\*,JhrT5U1B.X[ZrHb+@TN[
%\jWSCKD82%g]_eeA-%4hos23TK>'a*#g3mdaG!93QA<C["Tif+5a_rF9B^bWH;(#WQa7sm#XcK&>bKg1A=pNj.k?4TNVK@TU6ZDE
%3bgbpVd<CdJj%8#b>8>0(fuAsJHnYQgq?b%:hCh#&k1EF8A/`;&N0lHZH_7-64r/R)ECO_>.KGo:F6[=).WPt=,RK@fToh3?<.Cq
%<p1?(,@@Gu=<q/CO?G&7;d<9J5XpIIS$''LfXMa`j.^FFP)^Nc:19HG:_QS.[5joaQa-+HbMi8J,&KmaU1r]H<P_</,R`VI$Lln%
%[,%_pRBR162aM81mR.IDd*BqCZF1Q"T?'#/TonYiH+A`f<?>IlJVe.r@TgZNFB"Q3`&i*(VsHi#-)_r=kRjX&T9hfU_QlL[@Ya8[
%:P9Tb<Vd]g&9sFQVI\?31?\kXF$Ns8AJ(u,GdP*Q\d7jA<<kY6e7lHP@P),qP`:U*oIEdF>G:L\KI$r6Q0jU;'4N7T,`'UC`#*'>
%)\qGN__,b%FC.%(Hj.e-LLfQdc<UJBNN+NrMsl[pJZp!%[]bc,GX)X-X3./u%UoREa(F=aj5'h<"APZM#R74QE_ti>RT7h`pJtrY
%#o=@jZ9jGSaI#KdJLZL2_'l%PFU+1"#aB]t7OZB'Y:Ol$'m$'06j;^"p4/Z1\PCGaX3c,\$W<NS#j4ce!_&K*Wd<Y,<j+gY'QO>e
%6[!NN5-q<HK!,hCJ8XUOkEA&.b(ecoj.4$87$4B%j;N/:R9:*4Troa5$Ts1KJo[KSjS8"7o\SZ>D85_'/X(mH\n+3!&bMY5j:(Af
%lC^GMMhEbR>YmGpi;E-h$-$7Cg^;`V.M<JT?Y)Y<g"Bc[AQVjghm2.dMukj?(am0`Z$J7;A?@W^@)T`F3\jo:kTQu>[>^!l&1TU@
%U+T8bY9KF0m+MdVS7oD56WFXiQL49SH*Y1/5n`iSS6$j=WkL1`AB$UYE_`st9E$,]P%^?4*Z&91c,7c*0K!]H,YF52'<N-o!QBRG
%0D+"'j*]reKO.7AZFPP\MOc1q+8s?6`IIi@h%bo9mbB`[P;=T[Lodj$6.nGIkGE:Rkj]rrbYtbl4gd-.8b**$JIlM/70p7+Ml%nX
%(S8E@4:sFR2SWpMEi;CjJj;t:Nfaq[<[(5!M<q.eZHs5l%B=hc<QRGJ<as,Q+,NT=K*DOP-Yu-!2!R%Ej#GJ4cu<*+026G*X:"LY
%jZoi"*?1q2FT%GU@g[MIB*tRKG#du6NBGT2KNKa:.siUT@2kYSc]DcOMBGB@"%0s<QRRhD<%54lOnU[c7(ako1A<A`AAMi6)RW)_
%BPBhibm+E-V[7O5)B;^-K3/?r(C+)5fdNkf4870&9^hc8Z:AB,a@_@ol/=&+(<LTsGpY)"##u?e9gUY5Fa-n\\FeDb&Q5>'j)MrY
%.>>RO3aW7pU6Bj/IknP8Ysk:D(XD>.aZu4[n$VLKIEPmF,HL2LL3:O.&DE7NeIs;'W(X?bZ%A_<6:DPj#So:KjN>`H##sN`OWi+u
%]")1$gf&jLNmu;27a(9VnLQMpHkfl815)a!+>J(F;:eNtab#k0*(/;(]+2[Wj.S[(r8siYWl7Mh:9^JeMuCs4Q0HjTe1dSV:rrqj
%ki=RXY+9iSiQ%ZJh;rTGlHNGmSoeh'l@Nf[/S$?JKp-G&"k4^KPm/$7r.d",GV6jt#;k'C:ao!QMo6"$Vso^U06AS["2Q'/=MAGb
%nmsh^&`1@f8]4b[RK401Po&pcH(l\r46O3<VX.Zf>oXiqo(_aM^RlT&1aEK488QT9D,8t+*cVRkq"iCXPp[+)K/[#/1=PQta(48H
%FKjf2n>TVtmCU+.],,[`]pO:nJU;+ieRLJGKUFs)m(R`4>@SIOUa!1[kfW9YWG/#BHH"ktgQ=f'dicGgh,RpZbDGZP'D4qWh<'_p
%;.<t="rNq@e&"'VAgSFi=?q*p4])6o3aYp*W"5s6=GfQ.\.^qr1i+iuGRr^f9o7^Z)%n!fSga3Di`%@rKWBnI"aEK([!"i;oC/RB
%i[>K3^j#XQU1tPWnT%\+`@s0TkP9:lFqVFfOEb:FEaC9pr)!#jDcENq.J?SfIA86`G\3.#F1=!4q*hI&Q'9^h\,d0Ak:_GoE!M#P
%.\D;dc;`%Va2Wh[RCb7B=;5jSVVkuuSH/dOYp%CSCnEH#Lre;SApYEHCbTA-p0l4CR5%A#S&R"<hCZ_u<fP*M1ruf=XB5p@4OK&s
%O,td>5r:ORJ7LjO/:,/7.U!cT[9DLp_?SUsq*V#&3kZbPdao!F`$KqS."n[ap]Z\7U%24g/J'g<*@>KnB9HF:Of,.LoSH[R_QW'-
%GU?i&7P;*$gI[rCb-Aq8P[EurC^FdN_/P.,_]p"KTdEEN@3q<,s%V@R^b>ipWO61`ApV3'3:^'Z,cT4=KCFC)$&00,FYQr7WX7XX
%A/_/UJjCQBd5T:%eb-mX\9J`Op\G)CmS4#<rVq3SX<i1UjOH,=S\ZH]3n9p/&p@FWj?,gp'MB\0,[+%I#8Ts"B[g!TGjMDUoUsbo
%eTS,^:c][K,%:qMPW'*@Unfq5M-a26?5VTU=n".)QFpTq<lmc89W^5/Am`NufMqGg(EOP>+ckOqNc[gNm5?1V\A('u9HeWU'pR(S
%N^B":0E_S5m'Yh/p^X!:R)RGS+/pB5$s.ioU^f:)RZb7@k*i;>UU0gh&I,:ZpcY/@(^`maE/:;FDY87[N'`OK?E9d7W$,Dlki].$
%+$[2RDt)gT3$kq_AOp>B-BTjhLnVg!&V:S%=$>1[ZrQILjG'u`d=U]?3(FS;TFU>&.c4Ql9a$u9`"n.B&FC8ThOQa*VpJ6J7u[]8
%B`?X6p5uF3bm6((80SJ>+ArUX3iG1sdSpo'Z46uSDX?YUJ?Alo_k_kfK<ZZlRBkZVYI30&OL[_T9o'U_ODZl6AiNUE![WpYYKLlN
%Eejr-6RdRQ.Y:^;]F]n&OY9d&#f+h.X;u7u`,?Ue$0X2PL.1e#n$oQ0?K!lVbRb]KS,-+KZdbXOK:aGE7[t?C'?d]/nLdcj\jE7T
%?6So=da+k2h2s`A#:a2c?.MtK.2Rk9+K<s-=9>E`*2C\H7KSqs7k,]9E'T'fk9dp_h.p?[D1h0D:!0%2>?rt>q[*gSn(]E(h6sFR
%OVnF:b(r0SCToE,nm;e4Fc4aU;2;@B*Q?8uHJ)4F6n#7La8N<R*u*o4dfUc1PnPNHIen'SR%b!T:>dr77M_pteC.j[;[X5O((-1o
%k_;YgfW^IjTR.hhdCWrjTV%(t7'EaAK:/>!!4itVF%+T=%#utc8M*q%BLKJShuZ`rHOYQ&Nk2W0iFO7&L@mn!*(%k>FUHN5Gd(^+
%j]K]0Mr8#3FlEuD/9iJ8d4jNJHPG&3`ia],6eG`M7?Oc?Sg%X$KAm$dMhjnIgo.sd$$:0M,]4<.)`UUuOog&!D$E?.0#tg&qH>Kb
%4e9/3E'=Tb4'7X[KS7mk@$$eo7mJX,h^5E\!E-a90>ATt':]*M$RZ4NMb_I%%6_/X@5JXlXB9Oe+6)cHE:A+U_2_(ee-SnCa1PJZ
%^d6Hl&'e;s/-O1IH@"MI!JH'_d0'FL3kQD/51h0C\?L/pn:8JQTX\'B=oC21V4sI$W7#JdE-l[=4KfRKbMt`sH[rk+ptpR!)%mRA
%oQpVE7"MbF3mLR^A;;/o!'B;uNPirO[=rO*+*Pf#:FI3+e>FZ"(M#176es@EP[]4U=V4)T$CWMg<CN/o,<4<*ZU^Nd*"q(3BG_(c
%TR.]+m\hn!RF\^=!$]c]7*XiK<0?Zlh.#5#c!^UeMJ;?D4i,W]%/'\^LZfG54EtR6l<OY"HGE2o8/:Rif"0R.U4mmcJB"Gd-:Gq,
%/*_WEFn!`O=tM?=18S!(72:5L8,RcVAe-QM"JIn"4Q*[6!$;AhY7"c7h2ibrfgJ>ba76F.,!9N\0?B8!"%V1+*]h:d?C=D$+^JS5
%0G]`N2)%8sI$UZ;.2FE<KJh+p?jO=TP1O:20JCBV1m6!I\_Me=ItNtW6FjWHi3:2UH.YM_-^(=iQ&[c/Hm'8$4gH*[`1]HL%m"sR
%i`E3"J;N(\9c`?(E3tB%<*%N1,p%o*Tq*6n[DR?)E,,RW2MT$K&J2X(_<7dL,/U\t+Y*?KWL**G?XAJ(;5uA28ORA-Y,G&8'akGg
%kaX[iMQkl,O#/Pe:r!\91mnJEJW_M[N@:IcY\-B,'p^J(\^YG]X,,D.`7Y_Z09),2:rBA8C&qWN_,_G5\fusF1?:1s,!RId`:UBa
%#RD-CC5n<8_,)mhe?gkH;&u/-3b5NMIpop57\:X:]f6EgpWQp1e6&.]MA?Db%`p%51*GB+JEdaJ:k1m,+r;AGiCnQOlf;"/.1:[2
%6?M0,$Hg1O&ZUO]IEd`83Fh4L^&g\Vp]jX:OH-W/^q%=BV$V`RM$=fU^m$Yb/<rQ7'Q3S_ZSZJ&0k.dL!d$^q%tWGt)S&XuRnC+*
%ZC/lK4g\TciKf4PmeX^)c7pOG4KrCNTAdB8a(o]24sEm.76L$5%25&$X>)^1C5,YY6Cg^T3?]IrOp:?6TM#ihd4HJG6a#BUk^3rm
%%isN$XqhWOI<_rSJt\#:Kb`m+/VS(Q!1FRdNt`#?\d)N`@a;4YM#aM7`G(F:*C-KUYb4;74Xt4PbX3Weh?tsj]+VRAY,%:,Z6O=$
%jD0`q*3>SdrT;hSpN\d5$g+>EM,QX_Ym)=A441\q^r<.?0)#qr%11'XfGXmu7^N2l9n6"Tcm)g?!!Zgli)^11GJ#iN"b9E^O=qC7
%$9I7t]defn"#Zin;".$rh,n^Jk6WG]!Yd03j<`NhF9#;".NP,Waagn\JY8.HW2so:ag'fm@b3osasZ^e^i#G]iMC;87te5UGEd6)
%J[U0JdXmO+j;?MNM5@$6S$=kt/)>H(UOf+F4G'/DmMEt?-Jj8AltJ?pl!od'I`.WrA;n<d/EGt<k]mU-s"!,n@ir5s6r&hSp]0(S
%AN2!4Xt#aKX=]$T\LD##`ZmQKLV"?Emup'8$!eb0KN8NM3OV+P?-&g4Oh%TLW%%lpe:ep+h#JMu>W9)trbOr)fX=\1leI/j:jp'E
%b+ij?"-/l'Ae"`c83'Q)FqX+=m8L:n:n_R%9c'H)J7cV<&O]>(H[t`c<_bB&P7BGW6_Yo=>uFkug^R\%5f!!JSp@"u/LV9rLnkdP
%=fa_E%d9jcnJV-@K!@Sb%"RBroVOGr'*Ku,:lEgLTnR#gl518H;=.[%o.(42G&s&ZGY5)`q&#/P/l_iN*LD=7U_V)Wf#"Wulj'p,
%&X,?ejd*ioWM<eqI)2coegiO(\2b1glrU,(nIeCRU0_q,Q0H;$5atV'#-*h2I]"^q.a-,;mh1Ell?Da2E&>e"mQ/;,c//o9?I@/P
%W4ZJ/`%*WUNoL?rs!BEs^f*Z(lu[2[$l.)5eDNG#HS>JeXhYR4QRnoE,`*!R<7(8DkV'/eE[LYt<_0<3MQg6n/fd9r/,Ts?DkG6e
%!FdK$d,u:GLZ\[]7l\4GJR*5RGGiM<]IPjgMuI!7XM>ssTRQS77fZphWj:W(eFMgR6D0r_"en)/C'3\I%J#(/$m7K[O^lI$s/>LW
%Mc'+5.e,9"W74E/*Deab&>t&/#8b)s;Q$$2Kac9oePWRedgD&KiY@YdQI+E]PcB1G/sVs#cM>UrCGK6"RU#>bmk(+uE8q_OE=iXt
%3tt]o'Smd21PY*pKdA_6O.qK#+V#V-[6lqM^e>-KP,c##pRaB/B?1L"!&bZ&qZ>@:!M@(,Y9VC6fsDF3(FF*/<Oq4N_PeS91"pZt
%_(9+Af<s.:!eA]6!t@kQ%`*>+n]GD[R@k*ngd!8E+&"pW3+`ai-@TYe"AQpHS`VTsc."T8o[#aOgsq@M5_NYj'`k9!$f+?=Wo^7\
%FS-mh8#3<C]9AAUUd3(c!L*e&DX(pp@slWWin&;:c6thgg:V"_OiVS6297mC4,?l11-8gqB2+$5EXXaFKa-n7d3uq3Hf@_&<<ip4
%V&A8rL+K\5\s-&dJ&8.?INVUj`P5mb5"B4;5]"hPK0"0AQ5h0kNMH'X3om/*NIV.D/9j2\@%e]]DB1^u30XI)\cBa#;&ghBX+9mf
%E=`iPN@.e;'cA\+Ss)/mNTZ*k-\)c:>@)lnQg<?Fa+l+Z%%o0kMEb%2c?>e^%3elOoDr3kqHr@k#p'U(Wm)q%d\Ne.k3*G*SV`2-
%aHuD$lK8?b,2pJt69c/*,Wc7g&4:$Xj$qf`30Tn!kHMjC"Q5("@9Ik[Vgu[I%bVufaDuB%kU@H]6P<AbU*hCj!D\@N#<*,&@QfP'
%,Q9lK/n66<%_Eak72aJ"XGdD>RAqml;2$AQ6+\ua<A[)'L;JM*_F"^(/W$rLfoq/h&,@FPIN0*=iM_\L9=5t8K=Q^RWnrJTE9:8A
%-@fGnNE;#LL>U(uEHGTd2(gZ1q>l/-WYc0_OdVt1'llhXfj:Au!B_>G-T<MtF.t*.EL&lXW;p/<:<^9p`>:L2jT!>kiJgH'(k_`>
%n?Y2e-7P0Hm/KBPP5Tnd"@8e4-dG.Ia;`cRp_QX@6KEs8_fHJRTRDBY<M1Ht@<UM\fn1I$l`bD;H+fO0#hk;[K:l#P'@RGujqG7G
%:s1ET3\U7h"`FJTY*f>6+1Sr)@0s#4M\6nL=AHXVBEQS1H%pXGVEXUIje-*2ZKbA0T2*>:.Sn9L'6OE<6gu799#L103JO(j7AN/`
%S\!_epV`UEfSheq\*\[AeGjP$Su&!Xs5s?]rr6o8re3XK][o0sm0-^>e,5;_\!Q8;R2doLpuJhSJW`ET8,588IfP^DIL^3*E2CU"
%J/jJ>k:Lc[U`:t2k,Y>8[)LoQ,cIE4$Ep@tK?%Tf`,SJLLH]&>!0,J\d$ScMI+M1K8!t..XU367=,BN`ET`R3n3%p0T6hF)c)G#&
%-]DMc7X+In)VkC?(.WC6BXjm,WR4.G<m5Q7[d$7R1Fh&VK<#?[;8$iI_e=3$#G$2)A/&hp&NGoA=bea6ot*m\#KtYl$q>goL8rQX
%P]<jM^34?rFJ8tP)`FYh60TX(KA+/%Q:4I9cQecmp(=N6#ka#IBpoG8r_TRB"25#BFb/A]p935qCC;N!@-Ha9dd*%;a7M$>'Ui_K
%6B,Hb@7J>QXS@%YF#"c+E*>]$,Ka@M7NZ$6$,9f??tSgM.L.("=G8M3,#lf2]<B5*l[0c3lp/?BWDGrgaPKDEijCC/B_5ts:d;8_
%77SI)VeU/g*s9:_2;J8*;hk\^)maTe@>r'FK4GIWrW]Vc]i4E!Y/'bZ=$%`;YCR5LPXfO;1C"XTY8YcC;ci$V@C.V`4s0O:Kuic,
%$j]fne5qNpW'8\L:<hA]X&3\"iElV:`^6;kU<PB!-3Rj=H"i*:ZAM6pr8``_!3`0C@;\'?`2Nj6cerP-`1=UQO2uk'\,eE%(&i_'
%(87)*`<YJ6M-,n"X/de'ih8+cKjn]5TRi#gTL]PkK4tlp<$QLGLtc_7Ln\#H1%n_oK[>O!!g^/Y\Wb'6%[9sRSWkG)Q*lPQ^]D<l
%TQ21/)2_ma4IlI#,icE$bW/Lu#*L!ZHJ$7N5R/E!SY3n4%=OpG5Z4<h;""`G5ale(h?<uE_'-e1>$VZ/%cS@L#&kD'nco(^aK<fj
%J;NsM1e&;oeV645.qrudA@(6b;L=3F80ehZ@A%03q1FhZd=b>G9-ReP8PrIq?jf!B`2j\Q31=SM9MXY2kS57c][QE5!?IL3@uis`
%(iBmrL:Co17-8."C.'XpP<soR\a%d#e:Lk&S1$UkJK##OfW.c-l+b`QV?ANgRHe0h?7eqlP5.JAH:F0^Y)D7.8M"MIijgJsCaZh5
%b(hYak;4PQ<!;\T07V<6[=_#\6g9l!n>?Hr'uXXP-.Th==UD\cKF[hK;e:ef2;_E!>G"uj[Z$*_^dLMlE^o\*O&__5Bf?ha^R\X#
%Q'jY;bd])=nQ)79r=7\SbqdJ23^7jm+04#6nhmUg*bKQ@QFYb!e2I"FWBY(N^6OuNRgTT6<06>..[CcB.]<\=1NI3>G:QP0Ct.Y%
%TK^>7/",s7Ot$$dD=h*+q]#rb1#+8%.L]+_"CY:%c\85.qAVD"?m:IcF:'s]P>Y@PV)FZ>)$;f0]-\rAO^:[Kfa6aE,8utF%*pb#
%4=9V<?!U;S#*WiF`5q7H'LTF%<i8ckR-Knb6K'J]_eRCOlS`TiZWU"/@"Omjr)fm_q0!U&>AKhS#][lA@l"WH/"jioW6/ehRb=:W
%A9B6M"+sDOAIt#ZW.^"?#b"+BNmHFpWZPM@8\k=MX_ND\/K+hlYFo6,!TETk'r2&t]k;noDIjZHrIP[bW$:2c89=?TZ6ld?!5^28
%;uU22C^ce#ge_ZB$KdkOMm7^N1JKujb66<;luS[=]9>hYX@.aFIu)2e;g;6C$8E.0rp+AP6;#"_JYeF=!E:-PW+V(l0HaE5a<I-0
%QaWiNQe\CPiA)ZC[K)Rd=NAd@EY-k)>Vd$$cNJPiM]o(S*;)Onk9C*."HA>9JHCgjC>,-.$p@KJ:(:M@:gt#klHV'>du>^_!I\D6
%35U/j]hqa`\T.+p$3*hRDi2l4%."-jN"D##bJ9h8dW>hhSfi"_M$eVK)65=0n?g#]!GROeApJ;3<@uQfp%"l@UP8t,'GUt8"Mim)
%[Q\@=A`j<5\QFV8?LGR=\J)Wk=:No;8V%%eh?6BY*`[%ZmTCQ\\."S>@\bt96iKhXL7ls)#r$>9@mk<Q=KmI9A7Q=t1-MkM$'jJj
%?6FiF@0\@EPrec[5)_N@@I`^^i\rls;:OYt\JV[7m`:4&$J#t,5jPa#BhR]*gH/7W2)UYWN.M0B3NlB@:4[drPhN,S)FT_;o*OhZ
%q>=>bH.F-WHXs3LJW\bdHAoh@VWYh6.@3*()2oLE:R)BBdL416.1/:(2,*5o\-`NF:b7.W@ne7/An?/XChP:Qe*C#'@C]@9TqHO=
%Gem7oN!<ZD;)QTVXj\6Fn]",hL2fL[Ojh/igdm$_O?b+n:]4Me1O.j8@->@U"PQdR-`U'uDR;>0Z\V"b0LtY6:C(Q-MBkIh03&c%
%Hq60cDYCpM\fo:5neOVb-A4/J_+9sHb`@j`Xt859J,blhNMS\<lU^igjMO^2;$>Hu'J35TBot'0LX3&^CQkWC5X6bM?rS?iJ3kUJ
%?W_OuPePQOX37MNW(^Fbo%.Ka*'*bGo$DscR100=#U^DO`hf7>]dc1jPM=^q^D(#Bq*ECF[BAct+T;Wg<he0G6V74u4?V#q8=3pW
%r]+=OO$?M``CeR2!&.&Ch5[EJ\_rZY/V9p^7)pN-*+:7@\E:,`:>KIC@&3N?b&Km2)&-c6"N-2Jm%OZHaGl"5/$.nKOOe*5$'UgC
%H9@?YQlA&:Bf2nZ,,$:R]h!BjXD[&qm0%Bq$1=K/_JA*Y3]Nk5/\F4H,K,;^9qs?_M(D?iU*ed"gliu%dG@.8ZDa*pFBjt!lA*LD
%\CCA`_6d/-;i!u-G*G,e;K1N(fl$A)EY7jn9t$TU<*h'C7.L_,$X&ZrF#BB`!hGF0CWJdmXG[C4\X)D->0:9if%_@3E.DaiHGaN+
%[ZO\aTKFP=.1H8alk.>$BcFGkYim"kJMW@ss33:bEh464=RNOi=gSJ==?4qH5]%juRb]S#mMJE$BZF4g43$PVK\\OKI1o6REt!N'
%*Fg8<^"qG5/.!,&A7cep_jgJBW(`Mi6@!"]i5u&E3Z(,I`<u8@+@JKaEApRjYlCeYU'ZE`#mTj;"r,tF!FSZ+],&:&oYXUq4s4?<
%PKioDTbKY*(iIloY"Y0#3Rm[hA@OX2XBIXd:bBqlc,ph+/I,$`7)N`%Z)72`-bu;EW4D-"TYUabG2eL+GP"of!UbaPmu34!HC_C\
%5Ksa\?ktVhs+M1joQHI__Pmr7irpcd@m]k\#=6A-U6!g(HROC)/U)m*aZ?fo=268HZ"OafG'?J3k^6JtfN3\PN0b2n!?XQYbXme9
%?/S>RVljg\3=\6:J\bqdf;.Fo7R9?$jL$ENT#[#0D&G^&UhepM#DYnupLt2AEZq`3=Mkp-L06p3;AZQ=5'[kfe2>fKF9p=CR3:dN
%o.7QoU=C*8YCq36W=HkfN&j1V'H&*Y1a]0a&m/q9R=1OmK<i+(J!9JMV_4]OV3&f;1]9MYdB6#SS/Xh[][aj.B>[TI=NOZ']E6ke
%`3sZSXu#AK7]RVTGHI]3?[kR3,Yf^%B*h(M*:O6Zi;'2airM--Gp(OgoiJh+X3Y9LBKk`!e%7G2UhF:h_j]LX+;coo_#j`q31_\B
%H'LBYZP2\dpS[@rE/Od1QB&p@f\_o>DW@<eCf@%Z$so]0l&0]B^6'tW%F(u:'2u>8dlua9$];A^H3t"EOX2693AP'!LpZ>(_0Bu=
%(H-hu"CE`saN/k7<^VJ.)&4`TdLqE$RU0P<'.c_<EXi'_[t9"AC;p_e,L^j=_(c![-t@/5ompGfGOih[*\,34TkUa-8EPa/"$ni>
%B-;DL$!#n&BSOme^jnD!:gdO0blZ-ZgH\fEqH51^SHpWg3Dl`[1Xep:C8`uS]uZ?eRNQ&0[fbfKHu%k<0_;k30-jX\Q1Mi[L&6q!
%;TRQYjTu@7XS6>7TK)#$j^%D8ftDs)433BrZ[o;k>a4GGP[<Y2R>!am38&g#2LbW\E&gW"e+DIV`!!1Q/L-u^=q(bV**J7hiR(J#
%BN&+b)gtX?e;Vd`N#&%';7=&r8:'=TE!]+k`.=S3-Yq^,(UB)kV;+,=S-mS$pX3ce*uV)a/q?TOLQsT8Y&fPE;L(@.ObJu7d1E)D
%hP>FT]MrZb4/@P6X:<m4[%Uq0r"+a^>uB8fL)e_1bDkcm.O^Kud2"K=UJ9sW9UE(*&E=*b0Z0_OeMUI)9GIgBL"gR8%SsL$"hFog
%&iWf`gf/nto,>i4l(t^p</&c*\j.^5NKlX'.-T@=<NWg:WCka]>EG=3]j!9N])eO_+bl[$`]eWSSFSjVl8gg])p$Vge\.^-GX*Sd
%7@6VP0j9C@FgSN$CN:aVQjo@Dg?qnDCfHG""rHV+cba>q3=,#?^gVenCe/2BVB,e>ZfR%!aBZ)M%?uo.aqNXW1eT/:TH=6\K(n);
%IKCodnRtGuQdb+(Z%,[DUX5#'ZD#uL@slWjlFN];]W.^dOlfp93`O8CWj=;p[P<Bd37`\H.EJOR`'DWVZMagM.c$9;jW<1t=oEMt
%AL*hQ`\nZNXEolb$<s!04_;O$P7d's@>P9W#;*gO&M!L2l1R@\JF5R`YPT#s((^OR,f3M5.b2m'6`REVko;$.?.EFTXX&5C\J.t/
%m2ARi>S2YRW0SpX<N?S(3$aCD'F_U60kNFE>cNM"&2kFC:cE%.KJ6QG#W0([3+<aC^L1FTDQJIVmuUBd9uDKK]g<E'a(QD>SkrtM
%qI2q:Md'.9BtuFESp%'!<JrBF=!Hh."4?GFV4]3'RL;O.g4*GYXQ^WW+NgGla]rQRpo2qFVCYMRnmH_K)6GP=K#a`H+V1"V0nc@=
%+e_HSRgK$B-adeS5pp^RWB05)=E(oE@DF'U4^_UB""?oBiZg$8/^sq?UfsB%Agj(TDYG[F"147g@s/8.Xo7N97>YM*+K/eKjgp9?
%8@bZhOU$J5/%'YKfTP?Z)Y7;sb8W]'+fN?U=`V66\sL&`#eJW@-6cJS_s,8=%jFC*E=-b>"A8,r)F6a@E;GjHbD;HAfG).6*7G*l
%9QFa=D<RWeAO"M^YU*L3dtqeX/3`9Z(T80YmksgEX&'$BVN9O[d*T,mOB1qf,:aLB(H'Zc2Q!r2/IT)M;Ub],F!lO'dW-GM$7OUc
%,G8(HS/WfS^ol:WU?XC2FO/+ig'%r>>:\IX#=-;2XLa^2,T$ne8UV>9,m:N6q3M!I/2F6Qb]J8@'0Npf>&4\CRcg)jfp@g4?`\9)
%%;!fDk8JH+i3cT+,PU8d.\Iah_[;+p=%c!SW;.&g%[KQe1`n4Y1+Z%g%:cJpX[f09nqp3hoRZYYg=4@/-&gKOmn!se9d07N_R`L4
%k:UBgVEQb0ETkciB\*=j,uta]!*^oA+B`;];@'_35?%)A/BEp-*Q^?eeIqH]iYj(&9p:XlC'nj=3=/YA8W&:r:CDHgVPk7+,hP#,
%!h;[]GFE>`$]jEGO\Jd+i4!>_!!<2qV.Z?dJu/kXo)RkE7D5BO%\`4AGNSFdbpF=5hRj_t)k:sn;?qq]NAdS(3)qC)[.&6ooE`Zs
%Y?K#1,#XC>'Me^.XOh"(+JS(.8DmO-HCDPf'k6KB7)Hj;6c.eBUmb0*=sf1%Endk+(&c=o`p'Rs:-0,sCFcEPAOYU"KS9\NCIoaD
%%&:V,A&sgT3)hl3WS8Ch6LFgn-bHVbS'g9cHsfK=/%H>]$tW!%-u3rgNlF$_L"gUc4.@]_:`.WH?94<nW_B"ZG#;!4mOXKr7Jrp(
%TBU;aC=OT0H_/aE_'f+N!!sADC;CcLjV>@]5Y?03XVjYE2/0`\N*:cG!)!lI_%;$>,Vh]-nMmGh<:UC\j1V4R!"K\$5TSQMU@<oH
%8_0W2N0dHp>+Prj'GMLHjuPun(bZ`;M$oe2-D8U4]GM$4GOUH>1P%c7/WXO%@pH;+5\/Yr)46&^UZu\qr@]D\P"9mrhi#oeD%NgL
%otVEO6kCJ833&0ED:L>^h,M9;44p6N;LMEUF8,ed0Yc+!<Kl7=GF#5bBcht<(JPg#*s')KBU#3g;%TX8q4J1s>K0m(BHGs-9u;":
%-`GA(/O>S+1";rn1RNp(VOFs>9]tt9C[2?uFXY5>+_]U%e?\d4BEG=[eb-NhN.E<XO?q#tA@&M=2iIC)4q$2e[V##=2ej]'\YWaT
%WbjGBecBBKfMb$GSCctcSX&EG(8\;$3*>kCjWf=KPQ0PKFY)g7-9CG]UDLRnrE#n9#`]Mq^UBM2Y:iW56VV[_ph94$/Gu@O>P1L@
%dE@C3XLY29WblEd)imfMdj>d5ahFHf&$q0.TSAEoC%P1GI8C:):^Z-_,&E<gYBXtp>?Qu",VojtJErHQGf(u58LnJ,RT\+cTh5m.
%*23gobZd4gLc">[@cn@l][gq%ohZ?te=sO7T?\95F<lbqCP7M*<`G1q0cr7=UY/hegS(F8:/<bT@lieT=l*gRa0M-Dm3+a1lDl2+
%'m&inb(qsXD!j-]]1e'<8._9.JSF4*S>!%Mhr-mu.l5EIh]:Of<8)r9Tlk3bri(2VZfWuckd*uD'N!O2VgPgKLiAcdd3h>U$?&<6
%!7U22DaP:r&sFO^!mE4dJVYQ7-hg5p/]/Kc).EN8j`CO8A9^G3T5Ii#dqR/u`e4s]I)B,c%).=GnQQP5VUnre\s^cm`lHFCm=27C
%b\fZh>;V784@GF(<Ia+L.uLJ<>'3osR\lDUWsOi3<)>sc_K=W3[YVIjT4AT8"rlJse`HKiW!<)T1Rl'(%9s'80cA")@oPeq(h:fq
%*=L041h@\;DNo9cd&q.)YQc@C#a9faJLFaT'%W_kYnJ'4(Z:C/Nl/bbA'+S@T#j;Om0ncX&N:Y$5DKiMB.QcJ&00_5J;8hqr`GcI
%&-!V#>am.mOl78SR@)ai=l:K,1lAt\/a,)P"sbm2/(*&ZkYT`!?s!-4L<Qk*3bI*?@Mic6BWZd\6kReIbs3J`CNup`'G@MtMOST9
%`LLGu\ZajgUF.3O_bhp+ieHtTfKu[.Y6L6C#0]J#d'fj5Tbt4!Woo'eQ%`s#kXZ?lINjh2Te)bX?EGcY9o'UuG;Q^@;t[rU"dE75
%D(H9ZN9noE$G]?GOKkf43>6Qkl7gV6WqC07Iu)[R$fG.P8W&2i<Lnb9UD/=j9+7(-NE9%TO-7u']C\%V$ndZ\/5+!#YmWtG8-BTd
%kQhn9,H.Qe8.=9/nfO5P=;<WFb`i)Y#qR,'@J(Y_'=G))KJU>W.b:O<1#,1Wd%b$"L#_CeCBg#S2bkS8?HXF;cX9`mSljhi=Ign/
%Cj'D>_r5B7$n>='NmB4M<C1L2-20M[ddl!%M=8?M6j0,s+^Ph?4X/AkAOE7%=g>>Ve^2<<b;1NG<fKCV!:>BX18h3@)M^,5IFS=B
%NDq6%r0o'RkK:J!]"*YB+12[t!ls#n)_o$&e^p8:8u2tseljjq^;;@!'fld=)FsJ?:nl-4M/HJ(BUq2lke'0=Xp_Z$3n'f6iOtds
%d;GsQ;o3J'U2r.Cg4c4h44WT[:2*))L)[B2PWZVj*+XV8]NC0ETs-mmAnnS"i?j`"*u_g4g.6jP/3co&lI]&sm+fFR.A;/8e5L!m
%f%R"d4_DY<"<_-l2ris7)V4Pd:'a-bAOrq9j=Y3G7_lZF06UB\XQE,f;u?I'Gg.$t*6oH>72:qA!iX@1X\!SQPq];>Ypp]p)ATOW
%(mPQtY6-_^[YFi&L\1pU44:_AFK)#>77`laW!G8l$mYXe5ug4eH=D:W`,#ER2S'60nq`$l!K'b'+F1>!B8+#fNQ'0_<E-]LW5$R;
%WRhM:ipj<6ZK`Xe_SBi%W?*EpO]['1,K<;f@C9"[)6bU9ah!\^VJonWf=!=h/Hru^Wo]IIIM4bW8`jsmPf2>%"8&>NM^?l,^WT1h
%+:=j7:r+3(9Nn#tKO,L6-1'ft6[?VCLP+eL]MsN,oG@?AQp<eeBO?VX1P<*&)&ZjnWcmY3'lZhQVCA"(^GJI2@WZ%C@`l'r#4,(Z
%/_1^+_"uK22*6GTRiG/"j2Vk8[h!7:CWI>R'OYMo7T$KmUJC-':lGH&U:L*)Wl@c\g9k`'oD3WeYHAll^8`?A\Veg.Yd8Bf-<i;3
%c)(rN;FWNr?eC-p-6W#>'*0eRohGZQX9@!-;DQQL4F,Gji)"4.=??!">K32EGK.lcN06MH%=4i&WkT!oo0OH.g""WI?%c+7n?G9C
%=Af=MoO,sAp"Dp<YRa#f:Z%JMK-.3r*F66rk`'!X,_uftK@7]RRE"VUgZ,e[RMeAGc5N$aF#OQ#6:9/)4m[o@V4?188mWRk4%juQ
%[>`*faC+]W3G(ik%p5Ao67?Z+@?FUKjjCD1%:0k"&)7OjlNdZ+ik@IN6+dJkhR#pU=s7)hQr@mV!L]%3%nb;$gMefT'As_e==DFY
%8E/WH)B#NJa7qtJ=mr/r=0lA_MB<t<P(=*G.Qaon*>\XIUQb#j:!.a`Bs(qQT:305SmO3Of[-AiF/37cP!/1F@O/G=5*3;hgP$)r
%G(/SuBjp0N0J<#*]6X/@VN-s+l7gPS,_Q8P9ls@;L=_m>%=5[dAC>7![&#oU&UB#HRnXE8"9_;/\T0Shb:=/dl7<H-SE1)Ug$1+A
%AokW4=ft)?hH@R([`diVU,!Sm+jpi[kp?Vp-q/fR&UB7MlDg.2b*GsW8ns")7u\ed=@.p/&^<\$7R&$jM<r)#qkuuBFMPom.(WA`
%q\):X6k)Cba?V:gA6iV<(#Fm,D(#bDWW"b:Ji%6,!^gU2(3kG_(`\na[GD=r(]\$?lRfWGlV0+dSJm>#EMT5$n*mY@*o;q.j>e*p
%c1>H!<2IoUC:mI(YRhS=rFPfCL31F;mD(\A$o/NO4tuE<YH+Lb,ZsXZGhWEuBh7rGe5PObTQ+VH%5gAm`4O(uUNY!r2JU6Yh%3H1
%j0XbG6R*[c*%7O<=@3T=ndW`jfbTO68WNGHXrJ1O1gID2ETIFD-`a)0F!au,#91qn27JL0(Re^nB'.d*We-NYa,$T-9lI_Ke>J\t
%aGt4+I>pk-;@l4GfZ-+.=>]-%CNqGt1i6ZaZlIbNn(TYeqG9&ONtbVIk-*hXFP:2SBa0UJD%ZDO?0MO/gfI,Sjslq-XWJB&$BieZ
%b?uq6D9J"&=t:s0k9B`+6X/$BeEFM1#KBZZ\SHq6.r(NGo,KJ,$\DH`$pW*=15)gV@ee'4%epb.qZoD(EWUoNp^Z2g1FffHCK,$\
%"fuY,o!\ah&tG7^gH,F)D@nBU_2'(bXNTb><a[F5CT;[gkiZ!iO%l>;L%<;u<5E)M[e:@HC+(<cV.qnj*Lr@hM'a2nFHQtD6397E
%!b\]n3IlD9iSt/r!r2?ng?biE[UV46Y,$TS[-Ttu0BZ9.Q`s%b5quO-2i@TQ)L:tVFUWj;O<YZ;Z%_[P;XGD"Uu"C\b3Hp.UJ/#F
%-3;uK6USfK=e,ub#;mHf*8^"a\Y*)fZ907uejuG_Wc#MY"(HTa%ks*3N:(EtakO(LAT?YRr]/&pK_hreU9>)lo(R0]\`a1cBU0F,
%;5h]$<]t,S92p[I#bJLF^fhIfYA7IGE20@IM8kB^6WkhJ#WeVga_O8`Bo-$u-l@h,^(Q_2l4m)K;QLigT&uo\I,&XYh@32aP,D<&
%hb7EAU!A^jQ=NTC5\A5KKBc/YCCAjfPMRMN,_cea<mQqHV-<EC@c[n4/Bt5JmaF-9U9:_cH5/f0.GG%(2=OFac^L/]TTQiCrLkh&
%VF\m*EtbgV((<;786@)(Nm6hH"X&9BC:UQ%HEu"NMR"/"KW[e9?F'Z,fG8B.19e4*nM=l\ZNbWfIWq5D6:u!K)E29DMAl5d61NUq
%:1Np@qmm6;h8BR5%7Qe7AmVe@%g4+ECUP9EBIg>:E]dM80Y=\IDbZ^,0W`;9f*ap.CEoKDUb4uU/5epR=3(Y60.ARraumNpnd+Q#
%bb6ndDjGEG2$4^fpQg^YWUha"goaf<G>XHG;)!5\fJltl&59`_`k0W>MHY[G'6ce::`6i6>=j#,ctGMR&WE6SGn!LW&UHkb@3VM4
%#)!%[BSo>s-4KEq[rItl[*EA[?oi'R2;CFs-ZG@*;amU@W`uf%JU?Jq=#46f$cD2UZtHh!BPt=:d7kfhm6jT<B+AFN,DX\;E40=9
%`[R!NCN1Y9_62I6gA?]*P2"$i!_kM94<8#8-IK3%<:2;7'*YlsUQ_=qN(s`aUCgJV<F_mY:Q&`#FOoVahtdL(BPjn?*"+?Sn3P\C
%NsU>;6!JQTdJZ9*roN+,%pCK$RPDN.]8=RL?^]D&NkMhK6[J^`Ij@C-c+\7']'9(dr;X?M;]k"@RH#iTD!U?sDu>`_!-I's2('5t
%DV>EJ>TWT_:Pr[;;i0^jP(q'Y^)P0o:fIYaO4jW9c33"%H"VpiF9[Y#pSt\Z!,nW#2ZPd5UDA:,lU<ZdNa<U"!g3\1dNh+[f;t*l
%dMAobK0Bj;D6L&jc%O'16,r,K:&>ligrouRN`M.`+4YX]D,ML#6[]2k(Js5,,+j:$#f/u'J=%9EW>dgR)o>dS#h37UUr07lg1Aht
%HeH:,^ebO1]V;AU;'HIk?K_hI6Vas\plYX\80R4pD=@f[\=H1l&T*3EW!e[W5>e*p%G;FE>.nt=YVbubdhl\<=rn\O/?DPCE,!/V
%F_[`d0?d/rGhb!/SX+iD:h"OD=9/N\MG.K6?(cXV=knOkYal-De]P0s#[`R46DFci>fS8*/TbY,&Vb2PEu,TEQ8MV/eq=sE#PKXH
%<:."E9TLrmMI(s1]A*Y9R?]G,X=X^)(tBWi[+u'?4I'@)I)0OM8T"3gh-Qf'&sM(3E.QI\$;Agqi;8hXJDuYAY-!_%3b&J/"Q^h^
%+iI03(8;hnF[Gc[$qO#Y"!Y0%'ks`M2RK_!6eTWOGslbU:)[MMhpqqN9Ej:oYrX!YTVe7aCK;5`1iT@2X/J;,0O4]C%OtiiI"m(2
%:jJGMWcE"i/WI0c-O!*c[+>B+"d*K^o1;J%]!#^H-niQp-FgNs_ZdC8,^`;i_'^Yi@[TXDs%nT@QjX\!EYb*kX<!X<4pA-pluN#[
%D!H[sVl\<^4[0n_2\r:YTF!.D3)L[7CL:1+R44422K8h&&M!se1A`5h6Q80W'o"@K]ZW>@f"5J5Hbs0q+.P?/V>Z%sc`Hsne37+"
%N.;O#>-/"JStItl9-*N;Fj1Lnm&DT\DC9<!QaI#pDHs*p=BcH&fs0Hig7kf%.2ZUs?<2fD*bA/$+d(]!W#Q8$g<nWBW^J1e)3.5j
%hcLF5UIQT*.c#EiI!B=>_6/sjo\%qCIEBeET^N[;5irUtUPKHgf74f<M]>_>9!T(;#Fq7PV<R2RKFPKn1I1+,XLGO@6Y,l7X<"q3
%.Le`b(KN+5-s56!TZ=?i+[GH([H"KsU6;?`;!A$Yde2Hn.=d7F)'C*PM6B/ldi)`NjeQnEg8nA0N&lr4/_Hhp;UN[e>&Y`N.$dU_
%"/J726"u-L76<6&.&0p(#oKsAUS>X*!,io@^D`s#HS)(KM**a^("#'qeW:B;?o'p*iLc-X;=7?dd)7G$&>LfVajH3++W9Na(#'.Y
%!f$&?TLDtJ"lN>eD:f3^:0'u/m$q3ekFgK/L=C'F@>GW"onQC2g4ecKFgZ@2D^GZuLb9hRV:[:#]39hgS/RJH.S4D0//Z3)$o[+%
%#_P!HHZVo[WH-d]JjKULp)g5`=M"U,@bRE[@Cl7LBu[K<8R"%b)(V<I*Xf5bTJVBrVk`R4[F^_/Q"BEPXML2OWU!YSqZ0YD=6LuU
%/JJaRVkXmF"MC&6ZIPPDY6E\,0]4-qg/ILIFs-eI?hN.pnW<)OPitYqDJosAK+o/I-9'lnKrhg,<rB^TY%OsG/d:r+Ti[=Rpef,?
%GS-Ch70R2CS#kRSc+okVBbdN+Ugc\f0?VAaOeJM;.(C(gqKW?r5ZN>-JpE1!le(k7m0_Kg"X>j'n*:4VbZ>MU(3"H!6WS2CO`CmK
%:%9j#drb3MUXdcM^*%c1q_GQbSg0Qr`iY%&krQ(R\-e$#*X]-J*&p;[B)jiRW?T\=1V4-.?K2dEJifCj$T:]_#ogHP[J@R&KhJF\
%=])G^O]E0V+5'1=hC>XOW2%EHJ;0iDquTs.Wif]jQGB(2Cuc<EFjlM\MZh9E./Ph#<^X2$YKHipEl-9l;$ke0l<^4a'"E(\%?XcU
%\S:5=gkuY;RFT@jASek/CVI7n!CIk8>+f]Hi1Z_GbtAiBMlJ5qWf@!U(t,8iaG]Se5Oo^/(3PC+J6-sYI>u2I<.)Y'?dq1H*pm!f
%:CP=>L=E@7NF<)t]sam<&GRtWj]R;1f/ef>B`SPL;0K0Y=Tc&'Q!W[LH:GN@8029JRjdt!9r#=A7?E(K^4BrFA-'/`G)3Q\):>R>
%IB_bEMjb?<H^+U7`Yp\TMc%caDT%M+Wlh(8/4C>[(,C6MOHL[RFYYcR?h=8^gF0.R"]!$WBl$^I](6@VT#>;Tqh?pu4<Onpp\:g[
%"$VjG0($=>1^CX%0/ZZ?`cWFJ_He5miQQ=i'd7Obe="hkN"2WY@bJ[6Qr[lIU7njPRH7(MES+Hb-8=e"DACm8B[T$OK3$g.&k=$#
%e2RoCMVs)m9EM;27A/9(Bdgi+c+L+4d$Ue*pDj*M+AHXp?8N,`otj_]F/'5h_Nr!&Ql5"CI<a.7?>rtJb?bm$NdtabC87TGi\CNm
%<jAY.!'OL3KuUj/AOP8:f0O!\5u,3f!5qY(4-'6!BMtcp\.MU`o$\b1&6>;*F4e6-$iJol#5!Mi7iW7q6CM<kpE-E^bORRpJ2B!Y
%3^'PR<Oii5NgKh'L2V'H6?/+c0e<1!dftN#E%$e=hOn%42=mRgoe@#-^fNd#Z_S9OWhF=[JjnNpTlTW1LfsWt4KppA&nJcd"%A%N
%%;aO3\HIf&9Nli[b@Sah^d0dP\$3K=5-,#RaKq9c:kSA):i-S<a3e@+<@#M-pcMNM@bttn/A23cXL)Bs4]kos+o*^2;3-17&E0Qg
%ZANc62g$s"c*[&13t2c6eH(M'+)p$N[YK%T`)SOlHNg"/5gj<B4-a96>RTZ&Ysm,n'8R?<l-ZNM436e#9(f\H:8*7fN?EErpu5kg
%WL-2IlW'A-X(:HGf:jOnl0+*SG!=4&oZ&"*E0cm-=Oc&QoFnLMEZtc"^/5T677;=]_d68>PDr<SD47@o+#Xe#:flJH\eg+.63)al
%e(gfYc"1;S"[o3M*T^QYh#mJu2+.ob/5nn!41Brn'9o>kbMthJ4,;Ee-#V7j3:L^1f$cq&*HmX?s-r8YBR@_XF)/o/Pi34nk&Vn?
%YiHNQ@phoIW`U?c3\2Khd[EJ/$$u_^H,3ArCR^uhO>A"I7F<)E_\2f+@Di*)54$.V[m7\V'_t/e\UB_$YKDf%:fTeS=4gjsMEll9
%Lai*XoYO/Vr,`X^'=Xj1192Qto)M2n1g6dbH^hcRbqaEXK<V55mHrd!BO:75LR6dYX#+0n;Qjm?%\aOKgutMlg?9&7m$U:4=[\nT
%[G:p[c'!\*S4d?X_;'STp@<p\V+njrR:S3jf-d:.$!ilg+9=/7Bb1g`)-N\**S><9CSah6&4Xb^niE(M7].jqfV"e.D148*)?`b\
%#!j_^#S!!No7I5bX!XKp'9C^=22iM)2,2`<.s6_)F.r^N%<!a2?M1JZo8""!kl>aTm#(+\=C`G[Mn.((3UYlQV`,X7U#,F,m2gJm
%NeOY3dRVo'peVi[-lr)d69<*NabhYmkd=tCQj(3*b/A17bV2YU*Pua;QSS]ln25jM0_'`^_pncOjlf7ZU\S;Mmu/:^1*Z:[XK,L$
%+bhu@qo6G)7\Ehj]mrF]=&E+sTKF(dH('*oGU,g"b\-.>1JS1!NXu5``uCPWMhH.U@61-OC)[+H7;(Ahk,]'eQ:HLaS4<"2BeuQ_
%&IZ+`3+rjm[7it`.T.d7/p)(dfT2l'Y*[Km6^9t&1TVkceWtjtXf6II!g7oC,E@+\pGf=J=ogU^P[g/k<LSfa2)XQ"IY/Z.8O!Ts
%k/MmPA;T*5?9P[[,9J[2;rO7?$F"pcK>he',h*>mku*=ui1.pePY?;&X=qWXF(C7n=RAtlIY.5lVLbn8OX_gZ^=rJ,r_OKKU%L&+
%eE/^kEX*X8\:6?9(r]qipZ>,L("Ei:iY]1eQ/q0\$[D\e,nI,p2'%CkLAiK&kXE*"<eY]C1Zag')R+..[Id'l"m<"(Q\%qEegsRQ
%p3K.6F-[+jKRikDki2[I>5eI-)D3pUm2,-/P,%5Mb]Ou2.OLBhC.(Ku17/nnSS4KJcr+ipNr>X<#G>>!,_XVRGltqh5S+H.(T[Au
%O0:lFEtk!/*<h%*k7H8ejKhI-\-A)D#<bI*0gb:_bF'/mbG']OR?#]!T=raURAH[&Ht9!$Jn#A3m&DZ68?XEe=;l/`%s;"?*)&!h
%GR<3S2&eM0B,#(.BM>C*D%j:g$j^raj&0"?a]Y8I&YK7QWDOUXefVu.>nsV2aa&k_+^;aH+H2QdBS?2u8417.L*$Yg>W>?%+gVT-
%T[%Al"/1<IRY6BhR8"k<&Qgi<*idhL7[2.VNNm6C/&7mho+QL+lOH3k>+G^s3$*s;O6itWLB>JQ(!iVt-3C91OE_2)e\`*P:ga?p
%1=72KBLDK8clN%'MW@&]%Ie7%4+WPh^,>E`(-'!a/B&$qrYX_2cgm*XnsCsIcm(0@Lc9QhF>73^23r)HI\0WjV+7mN,oV<LWX],'
%$1^E*#;b+t(=2!*./KX_]4ta57IU70K2ODBScCo'D'!g"2D&d7E+tb7>+QNFc78>M'D)a[`ED4@[*'V1]-&fQ&ub<qdgAb!kEgmS
%e9b<'do[ZROj+hVQ>@P!k\a*>/4_+>GD^':/KIjsCe/!&fd_;IRdSSGh?M!bi$^soSR2\&Gd%H4n_5UXUl$4fBbZcD&l&tgHRKm9
%(DAIQ#,je3@lb#^TH*R!^b9"aW\W#Q4UkE"493;3jk4l3?o>$#L#+6#p^8W&<&`sa:beC*!%jRF[V1#R8jRK?ZD@A&(j465.5X'6
%N3c3E(oTIBi;iN[.R2lgA2l!U9#N8SV?0UJA&0F7TiF^.<P9aQ(3Dn_>SZJM9[jBapaju$((,j`5p%]F.,3@YF<lqMKLPK=`#a`a
%8sUNS;VCUNODRELjC5#(SI;iF=I"<`7Q5;dB[.)A>:?[&6N^CecrVnLE_L_]ZU0k0Y#fRf1f("SWhAViMe489/Q80@e'=d>2dk/\
%XpD()l_d0R%Wm+T'TRA^1c+Rn=pL&b(r8>o#mph<cGG/b>;fQ^"c-)&Vpqem@[R]=lKMcbFSRgGO#C@lU)=SEb][M5NJ\e]=QGp+
%ir]>o]qpO\VDZEJ6*/_#7]F<7T#&man.^->Lc67m@!X.[TL>N#.tH;o:^rXNB*7WH>0]/AkS:++$lME_`Xe@WV\lUL7CnithT=dt
%b\*_g6tA$Y5ZiRN,R1#9P^,mNlKB;.7kN@J^'X=>6L$@AbeVV`TT>P)Zs9T\nP[<soEj`el7(7LUoY7j?#%%e2)V&.B9o%m<.2Tc
%/=U11lC@R,!jV2WqMMW9&;<!DF_Wpu8J&NUV#aQ7fqRE@qFoDc&77^OR7jWXVP1'<dc[H1YaFk<D#J0XYqQqV8O+=!UE@\#bQ1M.
%1*0:VX?dX@4;4p;99mJl$9UId[`i"^`S2lD+P<?H$50tXE^&;ODIImV>r)0g48j:r2)Tf+YY$bj<Ac15U,+3VN"rJ1-p%nM+$GUF
%O_kff@oSs>'PH\$1=iNb?\[IXOK9GQda3h^lB,Wm!4gHm>&F0Eq$$jj`&>+Le+!,ZJ7i!]"H9U$eJKPFYT!Xck^_">3G*3!ekJ6/
%jG+r\L1AF8HaT53QE53M?)-+6a\?8Gg;=&8bksn10i>\?g^&l#F6/)X;5K@_pktOE<1EQZ`#*hfG^qWXceNW$8l7lh==dZ/%2Op8
%X!!Em!d@?r"Ck\0hTdki,l22jNQ9)Hm7(aI$A_8sN1m9$EmAD;YTg#\K\d?T0['SX/7t[QU*,5W*=LYEbP9#F:pWS>#C-e1I>MAJ
%2^FM#a/LC40lA-]M"d]R52br?H&.g9UUOo0QKkI(FjCZ4VX.r6m)#bdYf57(N6U,YK7%7&XX-u`C4_Vhc5H2_^`F`0J;*0R_"b+Z
%E.JLrH=AYk+5V,uIeIHa9@,*pXCfonXl($^Q/l9nrRFnLL/ZuP</X2nN#!cGHDD"p34i$KTd!'m2?j3dg7&2+5mC>:AtbL4lfth[
%,DW\$2r&R-YX7Y[Ml%*G!pRt]YknUEr$]kup8?`D)./$NKM$/^lt:;V5au,TE?/sN)K+N4f"jhjD,X@@MtFiPJ;Oq4m6kcJr\%8l
%Te<=1CFeC13%X[@7;#Bg,0a2-:Po7C1QWAgj`53qSJKjk!L;>G#@A=G?!B11Q/Lelbud=O*NT2P>j5BQ2iQ8Wb-p9q(,]qf=d-Bj
%e1,98llGk!hS`/=9gQV+(_&0K&RKQs!t1TX*6^mA'JWIeMZH?kK<fV6d:4B)[S5Is2fe";85,tGp/>Q%4MMR.<*A?!h.edW#Y<pR
%DLi4Bm<i#559hp`OB*RI+439QD-X/1/!-V2?u,=I[5:sd4[\d6GZOi,OLg]?A3q+mDT(;X=LXFa!+9QlIPKTdEk.ut!_&R:ce:n*
%R9L2EQ*_m3B3d@Xi4qB2/Wg5BFZ#-YRFqp].aE8@*B`&_WEK%X3R%S"T@0jq-I=TP1@W]&]&BS`7I;8FM?<OOO/10[KIpOZC^:H0
%QCDLbj/2)US3E`_'T97r2iUM"M?N)rKsLCULajFP'Jq.C*O:)0XO0r%i#Z8V_?Uso$.3uZ!Y<ug==`Q"=/>kg]sA>6po'S#la4SP
%24J2HYu(SL*/qs,@B&<I9%tWD_R-&!IHo<<MUFB51^8Y'B.>(t%Z[NW)c<=f`2I1sf:g5^?V3g+98MChs#S^J\7,gGWr-Zrc?:MY
%'WlA%WeuEsPp(5p@bZ]>$l_e)%kI"O)Si"0D1]<+3L:^%>_ZmuWJhu=MF@rO`YQD%/9:&QW=SZ:]-^?8UcEWTdh,clc:RNSFK/kW
%6\6k)7<(_.(Qn!90K,u5K]>/jWj0!Lb^/N\P#;lba/jo0Fiu!@_J5Icg!?*T]dR.JQ0j;pU`ab@m0IY0FEi$J!ZOVC<C'$Prg:ba
%KZV]\c[(L,R[&o0MMCH&;m:?9QFt+*O-f3F9il0V-b<fq(7Zr>:&e7'7XHpU!mhNQY"@"N4nh:DNMhoMTKH%F$\0To]1r"Jnr/>*
%b=Npd_+-(Y93krR0Z>%9#:L<!*?d%-1k7Oo9U$b:g=?s^i9b$]-a8gNHRNP2@)O5QEFNbq@o*`DBlr%QhNF-Y9OVZFYYs*-XaCL,
%i9GI3<(!8.]eG'gFN)t<]WW+)_Y2>2c72;TKd_YuWOn"r2eS,N&d9\aJ$i[?]L9`CfpI*[E?,G<l0SNIs#*Q)Ka!MuiaNi(@JLYf
%M.(`,,dF&ZB^&UH0O\(NQMLJ-F[iQQ@M]Gi`Y,.D"Ks>NDssP_iMjAUhS`7C^h0fjT>hudCSI9G1YUC.eH!n.L_AR;\[Wul]'S;s
%6FJ7G;]pP0R;LAOBpoj<0gSbpopO>p.-CnPc>"&-d/[`e9uF4ak[<pSN7A,M"-9E>G_g1*A$]e<C)iSGH&^-(-^]At[B+_p=;X2,
%;8OWHSW%!Zq[RT\Bi;2=9Jte3_,PeY1d;D,@KnWf:q)"7!#%gP79X4O9fWD@J7Do&H,TH8FX>/D.K10Z/B6`/\me;u*MXp;0jA-%
%V]X/*1!KJFn>eU9;MUHo#n,661r>)nB@[^6fVi$=$!Cab%#2/&4/8sCmVnSmN(GEpQ'Kt_RECl-dkWib<3e1:!`I[7emL2Snq[5f
%&;WBL=!D+6g/,.>A;r%Q]nJlneW$><<,3gR1o?"9k*R^rU8=T8jtR/5^Xk-\h_0GEmp(//@/]NZNG"H3%(u?-h1ls,5J-gVn]%nF
%D`rJspXR:+h'Z"fjGgq9:FcsJD*3=<o\%7,o08iG%n:NeoS3+s]5ml8Z+'^^D>\W<~>
%AI9_PrivateDataEnd
